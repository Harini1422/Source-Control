[ {
  "tasks" : [ {
    "uniqueId" : null,
    "directoryUniqueId" : null,
    "source" : null,
    "tags" : [ ],
    "userName" : null,
    "objectType" : "TaskDetails",
    "sourceControlSettings" : null,
    "description" : null,
    "historyReferences" : [ "5f5b7647653c601144d319b4", "5f5be158653c601144d31a74", "5f5bce17653c601144d31a49", "5f44004516749c335f1a4cab", "5f5be161abff755debcb0b03", "5f5bce09653c601144d31a43", "5f440034e876b464d0a63d48" ],
    "usedHistory" : "0ed1b8eaa419b2fc9d466a945412f04a",
    "sampleInput" : null,
    "sampleOutput" : null,
    "contentTab" : null,
    "successiveTasks" : {
      "incoming" : [ {
        "taskId" : "CertcreateOOB_1",
        "taskName" : null,
        "subflowId" : "qIh2AzEx",
        "parentSubflowId" : "",
        "taskType" : "start",
        "flowName" : null,
        "linkType" : null
      } ]
    },
    "flowPathID" : null,
    "ignoredForStatusComputation" : true,
    "flowName" : null,
    "subFlowID" : null,
    "globalData" : null,
    "input" : [ ],
    "notificationMessage" : null,
    "ancestor" : null,
    "metaData" : {
      "taskHeader" : "stop",
      "hide" : false,
      "lock" : false,
      "successState" : 1,
      "failoverState" : 2,
      "taskScope" : null,
      "hideFromStageView" : false,
      "mode" : "Developer",
      "nature" : null,
      "lowCodeTask" : false
    },
    "parentSubFlowID" : null,
    "helpContent" : null,
    "rules" : { },
    "cleanUpFlowDetails" : { },
    "subFlowDetails" : [ ],
    "associatedRollbackWorkOrderDetail" : null,
    "_id" : null,
    "task_id" : "workflow_stop_1",
    "task_name" : "Stop",
    "task_type" : "stop",
    "task_category" : "stop",
    "component_type" : "others",
    "setNullProperties" : true,
    "folderName" : null,
    "sub_group" : null,
    "group_name" : null,
    "viewable_type" : "custom"
  }, {
    "uniqueId" : null,
    "directoryUniqueId" : null,
    "source" : null,
    "tags" : [ ],
    "userName" : null,
    "objectType" : "TaskDetails",
    "sourceControlSettings" : null,
    "description" : null,
    "historyReferences" : [ "5f44003016749c335f1a4c9e", "5f5be161abff755debcb0b02", "5f44004516749c335f1a4caa", "5f5bce0e653c601144d31a45", "5f5bce09653c601144d31a42", "5f5be154abff755debcb0aff", "5f44004216749c335f1a4ca8" ],
    "usedHistory" : "1236dd96de44be0cdfdde9f1ddd5bc9b",
    "sampleInput" : null,
    "sampleOutput" : null,
    "contentTab" : null,
    "successiveTasks" : {
      "incoming" : [ {
        "taskId" : "createform_1",
        "taskName" : null,
        "subflowId" : "qIh2AzEx",
        "parentSubflowId" : "",
        "taskType" : "start",
        "flowName" : null,
        "linkType" : null
      } ],
      "success" : [ {
        "taskId" : "workflow_stop_1",
        "taskName" : null,
        "subflowId" : "qIh2AzEx",
        "parentSubflowId" : "",
        "taskType" : "stop",
        "flowName" : null,
        "linkType" : null
      } ]
    },
    "flowPathID" : null,
    "ignoredForStatusComputation" : false,
    "flowName" : "Cert create OOB",
    "subFlowID" : "XrwrzBIA",
    "globalData" : null,
    "input" : [ ],
    "notificationMessage" : null,
    "ancestor" : null,
    "metaData" : null,
    "parentSubFlowID" : "qIh2AzEx",
    "helpContent" : null,
    "workflowDetail" : null,
    "workflowTaskComponentDetail" : null,
    "_id" : null,
    "task_id" : "CertcreateOOB_1",
    "task_name" : "Cert create OOB",
    "task_type" : "flow",
    "task_category" : null,
    "component_type" : "others",
    "setNullProperties" : true,
    "folderName" : "For Export",
    "sub_group" : null,
    "group_name" : null,
    "viewable_type" : "custom"
  }, {
    "uniqueId" : null,
    "directoryUniqueId" : null,
    "source" : null,
    "tags" : [ ],
    "userName" : null,
    "objectType" : "TaskDetails",
    "sourceControlSettings" : null,
    "description" : "",
    "historyReferences" : [ "5f9098bfdba16200c07915ac", "5f3d9c1ce876b464d0a5bdd3", "5f3fc8a4e876b464d0a5c174", "5f44004016749c335f1a4ca5", "5f4938883919916a91e1476d", "5f4526ff16749c335f1a50c3", "5f9001a6bdd9527a517f259e", "5e33c6bc28c04c1fc6cbb86b", "5f493894e876b464d0a7e08e", "5e7da3edf9b6335a2ff493d5", "5f4d3d563919916a91e1c8ce", "5e2ac3461fad0f46586c5398", "5e30914d01df96337532a012", "5f318001abff755debc3a8de", "5f525689653c601144d11978", "5e317dc001df96337532d2d5", "5f908e9edba16200c07915a3", "5f493747e876b464d0a7e08b", "5f525c18abff755debc902ae", "5e331a4a28c04c1fc6cb8d45", "5e2ab2741fad0f46586c52a5", "5f3d9d8f16749c335f186fc8", "5f909825dba16200c07915aa", "5e2ac3091fad0f46586c538b", "5f525d3d653c601144d11988", "5f5b8173653c601144d319bc", "5f691bd0c3d56076c71e3be5", "5f1959b7211d593ce57c9212", "5f195df4211d593ce57c93f1", "5f5b7cccabff755debcb0930", "5f2d5f67674995192c6c8b4d", "5e3a8f44facc3a1372b88e17", "5f36b3ecabff755debc450a0", "5f5f8e8bc3d56076c71daceb", "5e3a9667facc3a1372b88f21", "5f3fc72c16749c335f195c2f", "5e9f1c299be4b065b9369338", "5f44003116749c335f1a4ca0", "5f7762a875715a637ff45156", "5e2ab2771fad0f46586c52a7", "5e81919d19e5a4420898067a", "5f4d3c6ce876b464d0a8e072", "5e2ac3cf1fad0f46586c53b6", "5f625b7575715a637ff002c4", "5f90952c3672d16c9970c83d", "5e315c2501df96337532cf73", "5e3a8f3efacc3a1372b88e14", "5f625a2e75715a637ff002c2", "5f315edb653c601144c80fe5", "5e7da2e3f9b6335a2ff493c4", "5f3d9bf816749c335f186fbf", "5f315ee1abff755debc3a89e", "5f317b67653c601144c81057", "5f4526eae876b464d0a6b4de", "5f525dbbabff755debc902b9", "5e2ac2b81fad0f46586c5388", "5f8eee03f65e5a7479996898", "5f6916cec3d56076c71e3bdd", "5f9097d4dba16200c07915a7", "5f195def211d593ce57c93eb", "5f296841c4c0bd0a752c1b37", "5f525d22653c601144d11986", "5f4d3d293919916a91e1c8cc", "5e33cd7128c04c1fc6cbb8a7", "5f3fc7abe876b464d0a5c167", "5f315dfe653c601144c80fe3", "5f5b7c67abff755debcb092e", "5f5b7cb1653c601144d319b6", "5f2968d0c4c0bd0a752c1b3c", "5f31800dabff755debc3a8e0", "5f525dfe653c601144d11990", "5e3a96b0facc3a1372b88f25", "5e33bdf828c04c1fc6cbb7d2", "5f315c68abff755debc3a898", "5f525ba5abff755debc902a6", "5f46bcfb3919916a91e1395c", "5e331aa928c04c1fc6cb8d4b", "5f318574abff755debc3a8e4", "5e9f1c7a9be4b065b936933c", "5e31799101df96337532d29f", "5f49708a3919916a91e14781", "5f4938553919916a91e1476a", "5f43c84716749c335f1a4c1e", "5f1959c6211d593ce57c9214", "5e39b750facc3a1372b8760c", "5ea10fd9fa5e1708213c2a6a", "5f9098ec3672d16c9970c844", "5f3ac233e876b464d0a52cd9", "5f5235a6653c601144d118a7", "5e33083c28c04c1fc6cb8cbc", "5f19620e211d593ce57c9565", "5f6918d275715a637ff206cf", "5f523545653c601144d118a0", "5e8191db19e5a4420898067c", "5e30811a01df963375329a14", "5f3690be653c601144c9f099", "5f317a0d653c601144c81051", "5e31593901df96337532cc65", "5f4938f9e876b464d0a7e092", "5f440440e876b464d0a63d5b", "5f1964ef211d593ce57c9567", "5f5b7d2c653c601144d319b8", "5f36be0cabff755debc45142", "5e3a9710facc3a1372b88f35", "5f315e6dabff755debc3a89c", "5f3184ee653c601144c81060", "5f5b7d5fabff755debcb0938", "5f2d60f9674995192c6c8b56", "5e308d4e01df96337532a010", "5f195df3211d593ce57c93ef", "5f296661c4c0bd0a752c1b11", "5f195df3211d593ce57c93ed", "5f3c2b16e876b464d0a54489", "5e331a5e28c04c1fc6cb8d47", "5f900191bdd9527a517f2597", "5f5b81f0abff755debcb0943", "5f777b0c75715a637ff451ff", "5e39b8e6facc3a1372b8761c", "5f5f8dddc3d56076c71dace7", "5f5bde03653c601144d31a71", "5f317ace653c601144c81055", "5f525d82abff755debc902b7", "5f3fc84c16749c335f195c56", "5e3318c428c04c1fc6cb8d2e", "5f317bb1abff755debc3a8d4", "5f3fc77d16749c335f195c44", "5f9095363672d16c9970c83f", "5e331a4228c04c1fc6cb8d43", "5f313f5b8e78963f22662746", "5e39b83dfacc3a1372b87614", "5f3ac1e816749c335f17e341", "5f46bcc63919916a91e1395a", "5e39b855facc3a1372b87616", "5f6917a4c3d56076c71e3be0", "5e33185228c04c1fc6cb8d2a", "5e2ac2601fad0f46586c5384", "5e33cd0d28c04c1fc6cbb8a3", "5f523587abff755debc9025e", "5e315ca401df96337532cfc0", "5f3fc79fe876b464d0a5c165", "5f525bee653c601144d11981", "5f315f00abff755debc3a8a2", "5f5b8044abff755debcb093b", "5e7da3a5f9b6335a2ff493c8", "5e81920b19e5a44208980685", "5f3fc7b4e876b464d0a5c169", "5f691825c3d56076c71e3be3", "5ea1102afa5e1708213c2a73", "5f777e1475715a637ff45201", "5f315f1eabff755debc3a8a4", "5f49707ae876b464d0a7e0f9", "5f497095e876b464d0a7e0fb", "5e39b88ffacc3a1372b87619", "5e31823501df96337532d2f0", "5e31828d01df96337532d2f2", "5e3a96cefacc3a1372b88f2d", "5f195c6c211d593ce57c93e7", "5e9f1bdd9be4b065b9369336", "5f315e05abff755debc3a89a", "5f315efeabff755debc3a8a0", "5e39b8edfacc3a1372b8761e", "5e33cd9728c04c1fc6cbb8a9", "5e7a063a58841b4768866e6d", "5f3c2b38e876b464d0a54491", "5f525c44653c601144d11983", "5e307eb501df9633753299e5", "5f36b930abff755debc4511f", "5f43c875e876b464d0a63c79", "5f6261cfc3d56076c71db247", "5f49707c3919916a91e1477f", "5f4938e2e876b464d0a7e090", "5e9f1bdc9be4b065b9369334", "5f3d9db5e876b464d0a5bde5", "5e31838f01df96337532d2ff", "5e9f1c799be4b065b936933a", "5e39b6e2facc3a1372b8760a", "5e9f189e9be4b065b9369320", "5f2962c4c4c0bd0a752c1a02", "5e2ac3991fad0f46586c53b1", "5f9097883672d16c9970c841", "5e39b754facc3a1372b8760e", "5e3a8f97facc3a1372b88e2b", "5e7a063b58841b4768866e6f", "5f36bdfbabff755debc4513e", "5f36be09653c601144c9f0e8", "5e33be0728c04c1fc6cbb7d8", "5f5f992d75715a637fef0675", "5e315b1101df96337532cd1e", "5e33cd6928c04c1fc6cbb8a5", "5e68b0b094a2e559382e7692", "5ea10fa8fa5e1708213c2a66", "5f44042e16749c335f1a4cb1", "5ea10fa8fa5e1708213c2a67", "5f691bce75715a637ff206d1", "5f318113abff755debc3a8e2", "5f7762a7c3d56076c72249be", "5f36c7dee876b464d0a4422e", "5f9001aabdd9527a517f25a0", "5e31812401df96337532d2ea", "5e3a96c9facc3a1372b88f27", "5e3313fa28c04c1fc6cb8ce1", "5e79f97058841b4768866e5d", "5e3318ba28c04c1fc6cb8d2c", "5f195d1d211d593ce57c93e9", "5e33be0c28c04c1fc6cbb7da", "5f44004216749c335f1a4ca7", "5f317aac653c601144c81053", "5e39b7adfacc3a1372b87612", "5e2ac2a41fad0f46586c5386", "5e33bdf428c04c1fc6cbb7d0", "5e2ac3341fad0f46586c5396", "5e315b2c01df96337532cd51", "5e31818a01df96337532d2ee", "5e331af828c04c1fc6cb8d4d", "5f8eee11f65e5a747999689a", "5f3d9e7616749c335f186fd2", "5e31829701df96337532d2f4", "5e31817b01df96337532d2ec", "5e31839301df96337532d301", "5e307f8e01df9633753299f2", "5f9001b3bdd9527a517f25a5", "5e3a8f55facc3a1372b88e1c", "5f6259e575715a637ff002ba", "5f908ea9dba16200c07915a5", "5f3fc85716749c335f195c58", "5e396e14facc3a1372b870f5", "5f5bcf1f653c601144d31a56", "5e33cd9c28c04c1fc6cbb8ab", "5e3a8f4cfacc3a1372b88e1a" ],
    "usedHistory" : "7d366bde1273d0b02bfe940792630f23",
    "sampleInput" : null,
    "sampleOutput" : null,
    "contentTab" : "",
    "successiveTasks" : {
      "incoming" : [ {
        "taskId" : "script_1",
        "taskName" : null,
        "subflowId" : "qIh2AzEx",
        "parentSubflowId" : "",
        "taskType" : "start",
        "flowName" : null,
        "linkType" : null
      } ],
      "success" : [ {
        "taskId" : "CertcreateOOB_1",
        "taskName" : null,
        "subflowId" : "qIh2AzEx",
        "parentSubflowId" : "",
        "taskType" : "flow",
        "flowName" : null,
        "linkType" : null
      } ]
    },
    "flowPathID" : null,
    "ignoredForStatusComputation" : false,
    "flowName" : null,
    "subFlowID" : null,
    "globalData" : null,
    "input" : [ {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "lastName",
      "value" : "<%lastName%>",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "lastName",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "loginName",
      "value" : "<%loginName%>",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "loginName",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "firstName",
      "value" : "<%firstName%>",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "firstName",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "emailId",
      "value" : "<%emailId%>",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "emailId",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    } ],
    "notificationMessage" : {
      "401" : ""
    },
    "ancestor" : null,
    "metaData" : {
      "taskHeader" : "Form",
      "hide" : false,
      "lock" : false,
      "successState" : 1,
      "failoverState" : 2,
      "taskScope" : null,
      "hideFromStageView" : false,
      "mode" : "Developer",
      "nature" : "schedule",
      "lowCodeTask" : false
    },
    "parentSubFlowID" : null,
    "helpContent" : "<p>ddsd</p>",
    "dynamicAuth" : "",
    "regexList" : null,
    "regexOperation" : null,
    "regexPattern" : null,
    "accessMode" : null,
    "proceedProcess" : "Submit",
    "breakdownProcess" : "Back",
    "cancelProcess" : "Cancel",
    "saveDraftProcess" : "Save Draft",
    "closeProcess" : "Exit",
    "enableSaveDraft" : false,
    "enableCancel" : true,
    "enableClose" : false,
    "enableAutoApprove" : null,
    "enableBreakDown" : false,
    "availableGlobalData" : null,
    "_id" : null,
    "task_id" : "createform_1",
    "task_name" : "Input Details",
    "task_type" : "form",
    "task_category" : "form",
    "component_type" : "form",
    "setNullProperties" : true,
    "folderName" : "For Export",
    "sub_group" : "form",
    "group_name" : "User interface",
    "viewable_type" : "default",
    "aclIdentifiers" : null,
    "template" : {
      "name" : "Input Details",
      "description" : null,
      "aclIdentifiers" : null,
      "fields" : [ {
        "labelName" : "Input Type",
        "elementType" : "Radio button",
        "values" : "Form Input,Bulk Input",
        "fieldId" : "input_type",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "",
        "dataValidation" : "",
        "parent" : "",
        "help" : "Chose \"Form Input\" for single certificate request or \"Bulk Input\" if you are requesting multiple certificates by CSV upload.",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "Certificate Inputs",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : ""
      }, {
        "labelName" : "Creation Type",
        "elementType" : "Dropdown",
        "values" : "Select,Create Certificate Only,Create and Push Certificate",
        "fieldId" : "creation_type",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "input_type:Form Input",
        "dataValidation" : "",
        "parent" : "",
        "help" : "Choose \"Create Certificate Only\" for standard request.\nChoose \"Create and Push Certificate\" if you have server credentials and certificate installation location information.",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "Certificate Inputs",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : ""
      }, {
        "labelName" : "Certificate Type",
        "elementType" : "Text box",
        "values" : "Server",
        "fieldId" : "certificate_type",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "input_type:Form Input",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "R",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "Certificate Inputs",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : ""
      }, {
        "labelName" : "Is this Certificate being Renewed?",
        "elementType" : "Hidden",
        "values" : "No",
        "fieldId" : "cert_renewal",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Template name",
        "elementType" : "Radio button",
        "values" : "EliteSSL Certificate,Unified Communication Certificate,Private Unified Communications Certificate",
        "fieldId" : "template_name",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "input_type:Bulk Input",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "Certificate Inputs",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : ""
      }, {
        "labelName" : "Download Sample CSV",
        "elementType" : "Download CSV",
        "values" : "Creation Type(*),Certificate Type(*),Environment(*),Certificate Common Name(*),Subject Alternative Name,Validity(*),Certificate Group(*),Requestor Employee Number(*),Requestor First Name(*),Requestor Last Name(*),Requestor Telephone Number(*),Requestor UPS Email Address(*),Requestor UPS Team Mailbox,Requestor Department Name(*),Requestor Department Number(*),Requestor Immediate Manager Name(*),Requestor Sr. Manager Name(*),Status Report Manager(*),AVS Entry Number(*),Application Name(*),Server Type,Server Details,Server Name,Host Name,IP Address,SSH Port,Credential Type,Username,Password,Gateway type,Gateway Location,FQDN,Port,Select Gateway,Windows Gateway Name,Windows Gateway URL,Windows Gateway,Certificate Location,Name of Installer,Department Number of Installer,Have you completed the required change control ?(*),Change Reason/Comments,Change process ID,Have you verified / tested your installation procedures in TestNet?(*),Reason/Comments,Vendor Hosted ?(*),Vendor Name,Vendor Liaison UPS Contact,Vendor Liaison Telephone,Vendor Liaison Email address,Name of Website / Application,Is this request replacing a currently installed certificate?,Common Name of Certificate Being Replaced:,Serial Number of certificate being replaced:,Additional Notes or Comments,Bulk Download Group Identifier",
        "fieldId" : "download_sample_csv",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "input_type:Bulk Input",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "Certificate Inputs",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "UPS_Bulk_Input_Sheet",
        "downloadType" : ""
      }, {
        "labelName" : "Bulk Input File",
        "elementType" : "File upload",
        "values" : "",
        "fieldId" : "bulk_input_file",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "input_type:Bulk Input",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "Certificate Inputs",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Environment",
        "elementType" : "Radio button",
        "values" : "Prod,TestNet",
        "fieldId" : "environment",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "input_type:Form Input&certificate_type:Server",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "Certificate Inputs",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : ""
      }, {
        "labelName" : "Common Name",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "common_name",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "certificate_type:Client|certificate_type:CodeSigning",
        "dataValidation" : "",
        "parent" : "",
        "help" : "Enter certifiate Common Name in a Fully Qualified Domain Name (FQDN) format. Must be lower case. Ex.: servername.ups.com This field is searchable in reports.",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "Certificate Inputs",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : ""
      }, {
        "labelName" : "Common Name",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "prod_common_name",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "input_type:Form Input&environment:Prod",
        "dataValidation" : "",
        "parent" : "",
        "help" : "Enter certifiate Common Name in a Fully Qualified Domain Name (FQDN) format. Must be lower case. Ex.: servername.ups.com This field is searchable in reports.",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "Certificate Inputs",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : ""
      }, {
        "labelName" : "Common Name",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "testnet_common_name",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "input_type:Form Input&environment:TestNet",
        "dataValidation" : "\\w*\\.ams1907\\.com",
        "parent" : "",
        "help" : "Enter certifiate Common Name in a Fully Qualified Domain Name (FQDN) format. Must be lower case. Ex.: servername.ups.com This field is searchable in reports.",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "Certificate Inputs",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : ""
      }, {
        "labelName" : "Certificate Group",
        "elementType" : "Dropdown",
        "values" : "",
        "fieldId" : "certificate_group",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "input_type:Form Input",
        "dataValidation" : "",
        "parent" : "",
        "help" : "Choose your current Service Delivery Group (SDG). This field may be updated.",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "Certificate Inputs",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : ""
      }, {
        "labelName" : "Certificate types",
        "elementType" : "Dropdown",
        "values" : "",
        "fieldId" : "certificate_types",
        "fieldScript" : "Get_certificate_types",
        "aclFilter" : "None",
        "dependsOn" : "input_type:Form Input",
        "dataValidation" : "",
        "parent" : "",
        "help" : "EliteSSL - for Server or Client authenticaiton, TLS or Azure.\nComodo Unified Communication - for clustered environments where multiple Subject Alternative Names (SANs) need to be added.\nPrivate Unified Communication - for internal use only, not a publicaly trusted certificate.\nUPS UCC (Issuing CA 2) -  use for EFS environment.",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "create",
        "group" : "Certificate Inputs",
        "autoTrigger" : true,
        "global" : true,
        "fileName" : "",
        "downloadType" : ""
      }, {
        "labelName" : "Validity",
        "elementType" : "Dropdown",
        "values" : "1,2",
        "fieldId" : "validity",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "input_type:Form Input&certificate_types:Private Unified Communications Certificate|certificate_types:UPS Private UCC (UPS Issuing CA 2)",
        "dataValidation" : "",
        "parent" : "",
        "help" : "Publically trusted certificate validity period is one year. Internal (private, not publically trusted) may have a two year validity period.",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "Certificate Inputs",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : ""
      }, {
        "labelName" : "Validity",
        "elementType" : "Hidden",
        "values" : " 1,2",
        "fieldId" : "private_validity",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : ""
      }, {
        "labelName" : "Subject Alternative Name",
        "elementType" : "Multi-line",
        "values" : "",
        "fieldId" : "san",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "certificate_types:UPS Private UCC (UPS Issuing CA 2)&input_type:Form Input|certificate_types:UPS Unified Communications Certificate&input_type:Form Input|certificate_types:Unified Communication Certificate|certificate_types:Comodo Unified Communication Certificate|certificate_types:Private Unified Communications Certificate|certificate_types:UPS Unified Communications Certificate (customized for United Parcel Service)|certificate_types:Unified Communication Certificate (customized for United Parcel Service)|certificate_types:Comodo Unified Communication Certificate (customized for United Parcel Service)|certificate_types:Private Unified Communications Certificate (customized for United Parcel Service)",
        "dataValidation" : "",
        "parent" : "",
        "help" : "Enter FQDN, comma separated, no spaces. Maximum 100.",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "Certificate Inputs",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : ""
      }, {
        "labelName" : "Subject Alternative Name",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "san_multi",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "certificate_types:Multi-Domain SSL Certificate&input_type:Form Input|certificate_types:Multi-Domain SSL Certificate (customized for United Parcel Service)",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "Certificate Inputs",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : ""
      }, {
        "labelName" : "Certificate authority",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "certificate_authority",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "input_type:Form Input",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "R",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "Certificate Inputs",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Street Address",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "street_address",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "certificate_types:Multi-Domain SSL Certificate&input_type:Form Input|certificate_types:Multi-Domain SSL Certificate (customized for United Parcel Service)",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "Certificate Inputs",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : ""
      }, {
        "labelName" : "Postal code",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "postal_code",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "certificate_types:Multi-Domain SSL Certificate&input_type:Form Input|certificate_types:Multi-Domain SSL Certificate (customized for United Parcel Service)",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "Certificate Inputs",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : ""
      }, {
        "labelName" : "Requestor Employee Number",
        "elementType" : "Text box",
        "values" : "<%loginName%>",
        "fieldId" : "requestor_employee_number",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "input_type:Form Input",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "R",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "Requestor Information",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Requestor First Name",
        "elementType" : "Text box",
        "values" : "<%firstName%>",
        "fieldId" : "requestor_first_name",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "input_type:Form Input",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "R",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "Requestor Information",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Requestor Last Name",
        "elementType" : "Text box",
        "values" : "<%lastName%>",
        "fieldId" : "requestor_last_name",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "input_type:Form Input",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "R",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "Requestor Information",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Requestor UPS Email Address",
        "elementType" : "Text box",
        "values" : "<%emailId%>",
        "fieldId" : "requestor_ups_email_address",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "input_type:Form Input",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "R",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "Requestor Information",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Requestor Telephone Number",
        "elementType" : "Text box",
        "values" : "+1",
        "fieldId" : "requestor_telephone_number",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "input_type:Form Input",
        "dataValidation" : "(([+][(]?[0-9]{1,3}[)]?)|([(]?[0-9]{4}[)]?))\\s*[)]?[-\\s\\.]?[(]?[0-9]{1,3}[)]?([-\\s\\.]?[0-9]{3})([-\\s\\.]?[0-9]{3,4})",
        "parent" : "",
        "help" : "Please enter the requester's UPS telephone starting with the country code.",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "Requestor Information",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : ""
      }, {
        "labelName" : "Requestor UPS Team Mailbox",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "requestor_ups_team_mailbox",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "input_type:Form Input",
        "dataValidation" : "",
        "parent" : "",
        "help" : "Provide a valid UPS team mailbox address for department of requester. ",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "Requestor Information",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : ""
      }, {
        "labelName" : "Requestor Department Name",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "requestor_department_name",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "input_type:Form Input",
        "dataValidation" : "",
        "parent" : "",
        "help" : "Provide a valid department as provided by your manager. This field is searchable in reports.",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "Department Information",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : ""
      }, {
        "labelName" : "Requestor Department Number",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "requestor_department_number",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "input_type:Form Input",
        "dataValidation" : "",
        "parent" : "",
        "help" : "Please provide the requesters department number. This is the six digit Oasis code. This field is searchable in reports.",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "Department Information",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : ""
      }, {
        "labelName" : "Requestor Immediate Manager Name as UPS Email Address",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "requestor_manager_name",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "input_type:Form Input",
        "dataValidation" : "^(\\s?[^\\s,]+@[^\\s,]+\\.[^\\s,]+\\s?,)*(\\s?[^\\s,]+@[^\\s,]+\\.[^\\s,]+)$",
        "parent" : "",
        "help" : "Please provide your immediate manager's vanity UPS email address. ",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "Requestor Information",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : ""
      }, {
        "labelName" : "Requestor Sr. Manager Name as UPS Email Address",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "requestor_sr_manager_name",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "input_type:Form Input",
        "dataValidation" : "^(\\s?[^\\s,]+@[^\\s,]+\\.[^\\s,]+\\s?,)*(\\s?[^\\s,]+@[^\\s,]+\\.[^\\s,]+)$",
        "parent" : "",
        "help" : "Please provide your sr. manager's vanity UPS email address. This field is searchable in reports.",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "Requestor Information",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : ""
      }, {
        "labelName" : "Status Report Manager",
        "elementType" : "Hidden",
        "values" : "",
        "fieldId" : "requestor_director_name",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : ""
      }, {
        "labelName" : "Application Name",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "application_name",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "input_type:Form Input",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "Department Information/Application Information",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "AVS Entry Number",
        "elementType" : "Text box",
        "values" : " ",
        "fieldId" : "avs_entry_number",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "input_type:Form Input",
        "dataValidation" : "",
        "parent" : "",
        "help" : "Enter AVS entry. If unknown, enter unkown. This field is searchable in reports.",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "Department Information/Application Information",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : ""
      }, {
        "labelName" : "Server Type",
        "elementType" : "Dropdown",
        "values" : "Select,Microsoft,Microsoft IIS,Linux",
        "fieldId" : "server_type",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "input_type:Form Input&creation_type:Create and Push Certificate",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "Managed Server Information",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Server Details",
        "elementType" : "Dropdown",
        "values" : "Add New Server",
        "fieldId" : "server_details",
        "fieldScript" : "get_servers",
        "aclFilter" : "None",
        "dependsOn" : "input_type:Form Input&creation_type:Create and Push Certificate",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "Managed Server Information",
        "autoTrigger" : true,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Server Name",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "server_name",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "input_type:Form Input&server_details:Add New Server&creation_type:Create and Push Certificate",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "Managed Server Information",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Host Name",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "host_name",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "input_type:Form Input&server_details:Add New Server&server_type:Microsoft&creation_type:Create and Push Certificate",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "Managed Server Information",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Host Name",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "iis_host_name",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "input_type:Form Input&server_details:Add New Server&server_type:Microsoft IIS&creation_type:Create and Push Certificate",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "Managed Server Information",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Username",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "username",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "input_type:Form Input&server_type:Microsoft&creation_type:Create and Push Certificate",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "Managed Server Information",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Password",
        "elementType" : "Password",
        "values" : "",
        "fieldId" : "password",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "input_type:Form Input&server_type:Microsoft&creation_type:Create and Push Certificate",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "Managed Server Information",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Credential Type",
        "elementType" : "Dropdown",
        "values" : "Gateway credential,Manual Entry",
        "fieldId" : "credential_type",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "input_type:Form Input&server_type:Microsoft IIS&creation_type:Create and Push Certificate",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "Managed Server Information",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Username",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "iis_username",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "input_type:Form Input&server_type:Microsoft IIS&credential_type:Manual Entry&creation_type:Create and Push Certificate",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "Managed Server Information",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Password",
        "elementType" : "Password",
        "values" : "",
        "fieldId" : "iis_password",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "input_type:Form Input&server_type:Microsoft IIS&credential_type:Manual Entry&creation_type:Create and Push Certificate",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "Managed Server Information",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Gateway type",
        "elementType" : "Radio button",
        "values" : "PowerShell,WMI",
        "fieldId" : "gateway_type",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "input_type:Form Input&server_details:Add New Server&server_type:Microsoft&creation_type:Create and Push Certificate",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "Managed Server Information",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Gateway Type",
        "elementType" : "Radio button",
        "values" : "PowerShell,WMI",
        "fieldId" : "iis_gateway_type",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "input_type:Form Input&server_type:Microsoft IIS&server_details:Add New Server&creation_type:Create and Push Certificate",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "Managed Server Information",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Gateway Location",
        "elementType" : "Radio button",
        "values" : "Remote,LocalSystem",
        "fieldId" : "iis_gateway_location",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "input_type:Form Input&server_type:Microsoft IIS&server_details:Add New Server&creation_type:Create and Push Certificate",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "Managed Server Information",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "FQDN",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "fqdn",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "input_type:Form Input&server_type:Microsoft IIS&server_details:Add New Server&iis_gateway_location:LocalSystem&creation_type:Create and Push Certificate",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "Managed Server Information",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Port",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "port",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "input_type:Form Input&server_type:Microsoft IIS&server_details:Add New Server&iis_gateway_location:LocalSystem&creation_type:Create and Push Certificate",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "Managed Server Information",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Gateway Location",
        "elementType" : "Radio button",
        "values" : "Remote",
        "fieldId" : "gateway_location",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "input_type:Form Input&server_details:Add New Server&server_type:Microsoft&creation_type:Create and Push Certificate&creation_type:Create and Push Certificate",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "Managed Server Information",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Select Gateway",
        "elementType" : "Radio button",
        "values" : "New,Existing",
        "fieldId" : "select_gateway",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "server_type:Microsoft IIS|server_type:Microsoft&gateway_location:Remote|iis_gateway_location:Remote&input_type:Form Input&server_details:Add New Server&creation_type:Create and Push Certificate",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "Managed Server Information",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Windows Gateway Name",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "windows_gateway_name",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "input_type:Form Input&server_type:Microsoft&select_gateway:New&creation_type:Create and Push Certificate",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "Managed Server Information",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Windows Gateway URL",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "windows_gateway_url",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "input_type:Form Input&server_type:Microsoft&select_gateway:New&creation_type:Create and Push Certificate",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "Managed Server Information",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Windows Gateway",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "windows_gateway",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "input_type:Form Input&select_gateway:Existing&server_type:Microsoft&creation_type:Create and Push Certificate",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "Managed Server Information",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Windows Gateway Name",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "iis_windows_gateway_name",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "input_type:Form Input&select_gateway:New&server_type:Microsoft IIS&creation_type:Create and Push Certificate",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "Managed Server Information",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Windows Gateway URL",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "iis_windows_gateway_url",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "input_type:Form Input&server_type:Microsoft IIS&select_gateway:New&creation_type:Create and Push Certificate",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "Managed Server Information",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Windows Gateway",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "iis_windows_gateway",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "input_type:Form Input&select_gateway:Existing&server_type:Microsoft IIS&creation_type:Create and Push Certificate",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "Managed Server Information",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "IP Address ",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "ip_address",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "input_type:Form Input&server_details:Add New Server&server_type:Linux&creation_type:Create and Push Certificate",
        "dataValidation" : "IP address",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : true,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "Managed Server Information",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "SSH Port",
        "elementType" : "Text box",
        "values" : "22",
        "fieldId" : "ssh_port",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "input_type:Form Input&server_details:Add New Server&server_type:Linux&creation_type:Create and Push Certificate",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "Managed Server Information",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Username",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "linux_username",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "input_type:Form Input&server_type:Linux&creation_type:Create and Push Certificate",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "Managed Server Information",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : ""
      }, {
        "labelName" : "Password",
        "elementType" : "Password",
        "values" : "",
        "fieldId" : "linux_password",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "input_type:Form Input&server_type:Linux&creation_type:Create and Push Certificate",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "Managed Server Information",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : ""
      }, {
        "labelName" : "Certificate Location",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "certificate_location",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "input_type:Form Input&creation_type:Create and Push Certificate",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "Managed Server Information",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Name of the Installer",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "installer_name",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "input_type:Form Input",
        "dataValidation" : "",
        "parent" : "",
        "help" : "Please provide name of person responsible for installing and confirming functionality of replacment certificate. This field is searchable in reports.",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "Installation Information",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : ""
      }, {
        "labelName" : "Department Number of Installer",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "installer_department_number",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "input_type:Form Input",
        "dataValidation" : "",
        "parent" : "",
        "help" : "Please provide department number (Oasis code) of person responsible for intallation of requested certificate. This field is searchable in reports.",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "Installation Information",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : ""
      }, {
        "labelName" : "Team Mailbox for Installer",
        "elementType" : "Hidden",
        "values" : "",
        "fieldId" : "installer_team_mailbox",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "Installation Information",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Telephone Number for Installer",
        "elementType" : "Hidden",
        "values" : "",
        "fieldId" : "installer_telephone_number",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "Installation Information",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Have you completed the required change control ?",
        "elementType" : "Radio button",
        "values" : "No,Yes",
        "fieldId" : "completed_change_control",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "input_type:Form Input",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "Change Control and Application Testing",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Reason/Comments",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "change_control_reason",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "completed_change_control:No",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "Change Control and Application Testing",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Change Process Id",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "change_process",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "completed_change_control:Yes",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "Change Control and Application Testing",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Read and Agreed to open the necessary change controls before installing certificate",
        "elementType" : "Hidden",
        "values" : "Yes,No",
        "fieldId" : "read_and_agree_checkbox",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Have you verified / tested your installation procedures in TestNet?  ",
        "elementType" : "Radio button",
        "values" : "No,Yes",
        "fieldId" : "verified_install_confirmation",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "input_type:Form Input",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "Change Control and Application Testing",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Reason/Comments",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "reason",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "verified_install_confirmation:No",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "Change Control and Application Testing",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Vendor hosted",
        "elementType" : "Radio button",
        "values" : "No,Yes",
        "fieldId" : "vendor_hosted",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "input_type:Form Input",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "Vendor Information",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Name of Vendor",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "vendor_name",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "vendor_hosted:Yes&input_type:Form Input",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "Vendor Information",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Vendor Telephone",
        "elementType" : "Hidden",
        "values" : "",
        "fieldId" : "vendor_telephone",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "Vendor Information",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Vendor Email Address",
        "elementType" : "Hidden",
        "values" : "",
        "fieldId" : "vendor_email_address",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "Vendor Information",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Vendor liaison UPS Contact",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "vendor_liaison",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "vendor_hosted:Yes&input_type:Form Input",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "Vendor Information",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Vendor liaison Telephone",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "vendor_liaison_telephone",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "vendor_hosted:Yes&input_type:Form Input",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "Vendor Information",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Vendor liaison Email address",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "vendor_liaison_email",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "vendor_hosted:Yes&input_type:Form Input",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "Vendor Information",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Name of Website / Application",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "website_name",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "vendor_hosted:Yes&input_type:Form Input",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "Vendor Information",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Is this request replacing a currently installed certificate?",
        "elementType" : "Radio button",
        "values" : "No,Yes",
        "fieldId" : "is_replacing",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "input_type:Form Input|certificate_type:Code Signing",
        "dataValidation" : "",
        "parent" : "",
        "help" : "If the requested certificate is replacing a currently installed certificate, you must provide the Serial Number of the certificate being replaced.",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "Certificate Inputs",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : ""
      }, {
        "labelName" : "Common Name of Certificate Being Replaced:",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "cname_replaced",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "is_replacing:Yes&input_type:Form Input",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "Certificate Inputs",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : ""
      }, {
        "labelName" : "Serial Number of certificate being replaced:",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "serial_number",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "is_replacing:Yes&input_type:Form Input",
        "dataValidation" : "",
        "parent" : "",
        "help" : "Serial Number of certificate being replaced. ",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "Certificate Inputs",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : ""
      }, {
        "labelName" : "Additional Notes or Comments",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "notes_comments",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "input_type:Form Input",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "Notes and Comments",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : ""
      }, {
        "labelName" : "Bulk Download Group Identifier",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "bulk_dwnld_grp",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "input_type:Form Input",
        "dataValidation" : "",
        "parent" : "",
        "help" : "Freeform field for creaing bulk certificate download groups. Searchable in reports and certificate inventory.",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "Department Information/Application Information",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : ""
      }, {
        "labelName" : "SMC Assignment Group Name",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "smc_grp",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "input_type:Form Input",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "Department Information",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : ""
      } ],
      "fieldScripts" : [ {
        "name" : null,
        "description" : null,
        "version" : null,
        "type" : "script",
        "fieldIds" : [ ],
        "responseMapping" : null,
        "historyReferences" : [ ],
        "usedHistory" : null,
        "sessionId" : null,
        "scriptName" : "Cancel request",
        "scriptData" : "",
        "_id" : null,
        "_keywords" : null
      }, {
        "name" : null,
        "description" : null,
        "version" : null,
        "type" : "script",
        "fieldIds" : [ ],
        "responseMapping" : null,
        "historyReferences" : [ ],
        "usedHistory" : null,
        "sessionId" : null,
        "scriptName" : "Discard request",
        "scriptData" : "",
        "_id" : null,
        "_keywords" : null
      }, {
        "name" : null,
        "description" : null,
        "version" : null,
        "type" : "script",
        "fieldIds" : [ ],
        "responseMapping" : null,
        "historyReferences" : [ ],
        "usedHistory" : null,
        "sessionId" : null,
        "scriptName" : "Submit request",
        "scriptData" : "",
        "_id" : null,
        "_keywords" : null
      }, {
        "name" : null,
        "description" : null,
        "version" : null,
        "type" : "script",
        "fieldIds" : [ ],
        "responseMapping" : {
          "response" : {
            "" : ""
          }
        },
        "historyReferences" : [ ],
        "usedHistory" : null,
        "sessionId" : null,
        "scriptName" : "Get_Certificate_Type",
        "scriptData" : "aW1wb3J0IGpzb24KCmFjdGlvbiA9ICI8YWN0aW9uPiIKCmRlZiBnZXRfY2VydGlmaWNhdGVfdHlwZXMoYWN0aW9uKToKICAgIGlmIGFjdGlvbiA9PSAiUmVnZW5lcmF0ZSBDZXJ0aWZpY2F0ZSI6CiAgICAgICAgcmV0dXJuIFt7J2NlcnRpZmljYXRlX3R5cGUnOiAnU2VydmVyJ31dCiAgICBlbHNlOgogICAgICAgIHJldHVybiBbeydjZXJ0aWZpY2F0ZV90eXBlJzogJ1NlcnZlcid9LCB7J2NlcnRpZmljYXRlX3R5cGUnOiAnQ2xpZW50J30sIHsnY2VydGlmaWNhdGVfdHlwZSc6ICdDb2RlIFNpZ25pbmcnfV0KICAgICAgICAKaWYgX19uYW1lX18gPT0gJ19fbWFpbl9fJzoKICAgIHByaW50KGpzb24uZHVtcHMoZ2V0X2NlcnRpZmljYXRlX3R5cGVzKGFjdGlvbikpKQ==",
        "_id" : null,
        "_keywords" : null
      }, {
        "name" : null,
        "description" : null,
        "version" : null,
        "type" : "script",
        "fieldIds" : [ ],
        "responseMapping" : {
          "response" : {
            "" : ""
          }
        },
        "historyReferences" : [ ],
        "usedHistory" : null,
        "sessionId" : null,
        "scriptName" : "Get_certificate_authority",
        "scriptData" : "aW1wb3J0IHN5cwppbXBvcnQganNvbgppbXBvcnQgcmVxdWVzdHMKaW1wb3J0IG9zCgpmcm9tIGNvbmZpZ29iaiBpbXBvcnQgQ29uZmlnT2JqCnN5cy5wYXRoLmluc2VydCgwLEFWWDo6SEVMUEVSKQpzeXMucGF0aC5pbnNlcnQoMCxBVlg6OkRFUEVOREVOQ0lFUykKaW1wb3J0IGFwcHZpZXd4CmltcG9ydCBVUFNfSGVscGVycwppbXBvcnQgbG9nZ2VyX3V0aWwKbG9nZ2VyID0gbG9nZ2VyX3V0aWwuZ2V0X2xvZ2dlcigiQlVMSyBDRVJUIC0gSW5zaWRlIGhvb2tzIHRvIGdldCBjZXJ0IGF1dGhvcml0eSIpCgp0cnVlID0gVHJ1ZQpmYWxzZSA9IEZhbHNlCm51bGwgPSBOb25lCgoKZGVmIGZldGNoX2dhdGV3YXlfa2V5KCk6CiAgICBjb25mX2NvbnRlbnQgPSB7fQogICAgYWJzX3BhdGggPSBvcy5wYXRoLmRpcm5hbWUob3MucGF0aC5hYnNwYXRoKF9fZmlsZV9fKSkKICAgIHByb3BfZmlsZV9wYXRoID0gYWJzX3BhdGggKyAiLy4uL3Byb3BlcnRpZXMvYXBwdmlld3gucHJvcGVydGllcyIKICAgIGNvbmZpZyA9IENvbmZpZ09iaihwcm9wX2ZpbGVfcGF0aCkKICAgIHJldHVybiBjb25maWdbJ0dBVEVXQVlfQkFTRV9VUkwnXSwgY29uZmlnWydHQVRFV0FZX0tFWSddCgoKZGVmIGdldF9jZXJ0X2dyb3VwX25hbWVzKCk6CiAgICBnYXRld2F5X3VybCwgZ2F0ZXdheV9rZXkgPSBmZXRjaF9nYXRld2F5X2tleSgpCiAgICB1cmwgPSAie31hdnhhcGkvY2VydC1ncm91cC1mZXRjaC1ieS1wZXJtaXNzaW9uP3Blcm1pc3Npb249UlcmZ3drZXk9e30mZ3dzb3VyY2U9ZXh0ZXJuYWwiLmZvcm1hdCgKICAgICAgICBnYXRld2F5X3VybCwgZ2F0ZXdheV9rZXkpCiAgICBoZWFkZXJzID0gewogICAgICAgICJzZXNzaW9uSWQiOiAnPCVzZXNzaW9uSWQlPicsCiAgICAgICAgIkNvbnRlbnQtVHlwZSI6ICJhcHBsaWNhdGlvbi9qc29uIiwKICAgICAgICAiQWNjZXB0IjogImFwcGxpY2F0aW9uL2pzb24iCiAgICB9CiAgICByZXNwb25zZSA9IHJlcXVlc3RzLmdldCgKICAgICAgICB1cmw9dXJsLCBoZWFkZXJzPWhlYWRlcnMsIHZlcmlmeT1GYWxzZSkKICAgIHJldHVybiByZXNwb25zZS5qc29uKCkuZ2V0KCJyZXNwb25zZSIpCgoKCmlmIF9fbmFtZV9fID09ICdfX21haW5fXyc6CiAgICBjZXJ0aWZpY2F0ZV9ncm91cCA9ICc8Y2VydGlmaWNhdGVfZ3JvdXA+JwogICAgcG9saWN5X25hbWUgPSBVUFNfSGVscGVycy5nZXRfcG9saWN5X25hbWUoJzwlc2Vzc2lvbklkJT4nICxjZXJ0aWZpY2F0ZV9ncm91cCkKICAgIGNzcl9wYXJhbWV0ZXJzID0gVVBTX0hlbHBlcnMuZ2V0X2Nzcl9wYXJhbXNfZnJvbV9wb2xpY3koJzwlc2Vzc2lvbklkJT4nLCBwb2xpY3lfbmFtZSkKICAgIGxvZ2dlci5pbmZvKCIqKioqKioqQ1NSX1BBUkFNUyoqKioqKioiKQogICAgbG9nZ2VyLmluZm8oc3RyKGNzcl9wYXJhbWV0ZXJzKSkKICAgIGNlcnRpZmljYXRlX2F1dGhvcml0eSA9IGNzcl9wYXJhbWV0ZXJzLmdldCgiY2VydGlmaWNhdGVfYXV0aG9yaXR5IikKICAgIGNlcnRpZmljYXRlX3R5cGUgPSBjc3JfcGFyYW1ldGVycy5nZXQoImNlcnRpZmljYXRlX3R5cGUiKQogICAgbG9nZ2VyLmluZm8oIioqKipDZXJ0aWZpY2F0ZSB0eXBlKioqKiIpCiAgICBsb2dnZXIuaW5mbyhzdHIoY2VydGlmaWNhdGVfdHlwZSkpCiAgICAjIGNlcnRpZmljYXRlX3RlbXBsYXRlcyA9IGNzcl9wYXJhbWV0ZXJzLmdldCgidGVtcGxhdGUiKQogICAgZGF0YSA9IFt7ImNlcnRpZmljYXRlX2F1dGhvcml0eSI6Y2VydGlmaWNhdGVfYXV0aG9yaXR5fV0gKyBbeyJjZXJ0aWZpY2F0ZV90eXBlcyI6dmFsLmdldCgibmFtZSIpfSBmb3IgdmFsIGluIGNlcnRpZmljYXRlX3R5cGVdCiAgICAjICsgWyJjZXJ0aWZpY2F0ZV9hdXRob3JpdHkiOmNlcnRpZmljYXRlX2F1dGhvcml0eV0gCiAgICAjIGRhdGEgKz0gWyJjZXJ0aWZpY2F0ZV90eXBlIjpjZXJ0aWZpY2F0ZV90eXBlXSArIFsiY2VydGlmaWNhdGVfdGVtcGxhdGUiOmNlcnRpZmljYXRlX3RlbXBsYXRlc10KICAgIHByaW50KGpzb24uZHVtcHMoZGF0YSkpCg==",
        "_id" : null,
        "_keywords" : null
      }, {
        "name" : null,
        "description" : null,
        "version" : null,
        "type" : "script",
        "fieldIds" : [ "server_details" ],
        "responseMapping" : {
          "response" : {
            "" : ""
          }
        },
        "historyReferences" : [ ],
        "usedHistory" : null,
        "sessionId" : null,
        "scriptName" : "get_servers",
        "scriptData" : "aW1wb3J0IHN5cwppbXBvcnQgb3MKc3lzLnBhdGguaW5zZXJ0KDAsQVZYOjpIRUxQRVIpCnN5cy5wYXRoLmluc2VydCgwLEFWWDo6REVQRU5ERU5DSUVTKQppbXBvcnQgVVBTX0hlbHBlcnMKCnNlcnZlcl90eXBlID0gIjxzZXJ2ZXJfdHlwZT4iCnNlcnZlcl9tYXAgPSB7J01pY3Jvc29mdCc6ICJNaWNyb3NvZnQgU2VydmVyIiwgIkxpbnV4IjogIkxpbnV4U2VydmVyIiwgIk1pY3Jvc29mdCBJSVMiOiAiSUlTIn0KCnNlc3Npb25faWQgPSAiPCVzZXNzaW9uSWQlPiIKaG9va19uYW1lID0gIlVQU19HZXRfU2VydmVycyIKaG9va19pbnB1dCA9IHsidmVuZG9yIjogc2VydmVyX21hcFtzZXJ2ZXJfdHlwZV19CnJlc3BvbnNlID0gVVBTX0hlbHBlcnMuZXhlY3V0ZV9xdWVyeV9leHBsb3JlcihzZXNzaW9uX2lkLCBob29rX25hbWUsIGhvb2tfaW5wdXQpCmlmIHJlc3BvbnNlOgogICAgZGV0YWlscyA9IFt7J3NlcnZlcl9kZXRhaWxzJzogZWFjaFsnbmFtZSddfSBmb3IgZWFjaCBpbiByZXNwb25zZV0KICAgIGRldGFpbHMuYXBwZW5kKHsnc2VydmVyX2RldGFpbHMnOiAnQWRkIE5ldyBTZXJ2ZXInfSkKICAgIHByaW50KGpzb24uZHVtcHMoZGV0YWlscykpCmVsc2U6CiAgICBwcmludChqc29uLmR1bXBzKHsnZXJyb3InOiAnRGV2aWNlIE5vdCBGb3VuZC4nfSkp",
        "_id" : null,
        "_keywords" : null
      }, {
        "name" : null,
        "description" : null,
        "version" : null,
        "type" : "script",
        "fieldIds" : [ "input_type" ],
        "responseMapping" : {
          "response" : {
            "" : ""
          }
        },
        "historyReferences" : [ ],
        "usedHistory" : null,
        "sessionId" : null,
        "scriptName" : "Get_Certificate_Group",
        "scriptData" : "aW1wb3J0IHN5cwppbXBvcnQganNvbgppbXBvcnQgcmVxdWVzdHMKaW1wb3J0IG9zCgpmcm9tIGNvbmZpZ29iaiBpbXBvcnQgQ29uZmlnT2JqCiMgaW1wb3J0IFVQU19IZWxwZXIKCnRydWUgPSBUcnVlCmZhbHNlID0gRmFsc2UKbnVsbCA9IE5vbmUKCgpkZWYgaGFzTnVtYmVycyhpbnB1dFN0cmluZyk6CiAgICAjIGZvciBjaGFyIGluIGlucHV0U3RyaW5nWzozXToKICAgICMgICAgIGlmIG5vdCBjaGFyLmlzZGlnaXQoKToKICAgICMgICAgICAgICByZXR1cm4gRmFsc2UKICAgICMgcmV0dXJuIFRydWUKICAgIHJldHVybiBhbnkoY2hhci5pc2RpZ2l0KCkgZm9yIGNoYXIgaW4gaW5wdXRTdHJpbmcpCgpkZWYgZmV0Y2hfZ2F0ZXdheV9rZXkoKToKICAgIGNvbmZfY29udGVudCA9IHt9CiAgICBhYnNfcGF0aCA9IG9zLnBhdGguZGlybmFtZShvcy5wYXRoLmFic3BhdGgoX19maWxlX18pKQogICAgcHJvcF9maWxlX3BhdGggPSBhYnNfcGF0aCArICIvLi4vcHJvcGVydGllcy9hcHB2aWV3eC5wcm9wZXJ0aWVzIgogICAgY29uZmlnID0gQ29uZmlnT2JqKHByb3BfZmlsZV9wYXRoKQogICAgcmV0dXJuIGNvbmZpZ1snR0FURVdBWV9CQVNFX1VSTCddLCBjb25maWdbJ0dBVEVXQVlfS0VZJ10KCgpkZWYgZ2V0X2NlcnRfZ3JvdXBfbmFtZXMoKToKICAgIGdhdGV3YXlfdXJsLCBnYXRld2F5X2tleSA9IGZldGNoX2dhdGV3YXlfa2V5KCkKICAgIHVybCA9ICJ7fWF2eGFwaS9jZXJ0LWdyb3VwLWZldGNoLWJ5LXBlcm1pc3Npb24/cGVybWlzc2lvbj1SVyZnd2tleT17fSZnd3NvdXJjZT1leHRlcm5hbCIuZm9ybWF0KAogICAgICAgIGdhdGV3YXlfdXJsLCBnYXRld2F5X2tleSkKICAgIGhlYWRlcnMgPSB7CiAgICAgICAgInNlc3Npb25JZCI6ICc8JXNlc3Npb25JZCU+JywKICAgICAgICAiQ29udGVudC1UeXBlIjogImFwcGxpY2F0aW9uL2pzb24iLAogICAgICAgICJBY2NlcHQiOiAiYXBwbGljYXRpb24vanNvbiIKICAgIH0KICAgIHJlc3BvbnNlID0gcmVxdWVzdHMuZ2V0KAogICAgICAgIHVybD11cmwsIGhlYWRlcnM9aGVhZGVycywgdmVyaWZ5PUZhbHNlKQogICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKS5nZXQoInJlc3BvbnNlIikKCgoKaWYgX19uYW1lX18gPT0gJ19fbWFpbl9fJzoKICAgIGNlcnRpZmljYXRlX2dyb3VwID0gZ2V0X2NlcnRfZ3JvdXBfbmFtZXMoKQogICAgIyBwb2xpY3lfbmFtZSA9IFVQU19IZWxwZXIuZ2V0X3BvbGljeV9uYW1lKCc8JXNlc3Npb25JZCU+JyAsY2VydGlmaWNhdGVfZ3JvdXApCiAgICAjIGNzcl9wYXJhbWV0ZXJzID0gVVBTX0hlbHBlci5nZXRfY3NyX3BhcmFtc19mcm9tX3BvbGljeSgnPCVzZXNzaW9uSWQlPicsIHBvbGljeV9uYW1lKQogICAgIyBjZXJ0aWZpY2F0ZV9hdXRob3JpdHkgPSBjc3JfcGFyYW1ldGVycy5nZXQoImNlcnRpZmljYXRlX2F1dGhvcml0eSIpCiAgICAjIGNlcnRpZmljYXRlX3R5cGUgPSBjc3JfcGFyYW1ldGVycy5nZXQoImNlcnRpZmljYXRlX3R5cGUiKQogICAgIyBjZXJ0aWZpY2F0ZV90ZW1wbGF0ZXMgPSBjc3JfcGFyYW1ldGVycy5nZXQoInRlbXBsYXRlIikKCiAgICBjZXJ0X2dyb3VwX2xpc3QgPSBbdmFsIGZvciB2YWwgaW4gY2VydGlmaWNhdGVfZ3JvdXAgaWYgaGFzTnVtYmVycyh2YWwpXQogICAgaWYgbGVuKGNlcnRfZ3JvdXBfbGlzdCkgPT0gMToKICAgICAgICBjZXJ0X2dyb3VwX2xpc3QuYXBwZW5kKCIiKQogICAgIyBpZiBsZW4oY2VydF9ncm91cF9saXN0KSA9PSAxOgogICAgIyAgICAgY2VydF9ncm91cF9saXN0LmFwcGVuZCgiIikKICAgICMgY2VydF9ncm91cF9saXN0Lmluc2VydCgwLCJTZWxlY3QiKQogICAgCiAgICBkYXRhID0gW3siY2VydGlmaWNhdGVfZ3JvdXAiOiAiICJ9XSsgW3siY2VydGlmaWNhdGVfZ3JvdXAiOiB2YWx9IGZvciB2YWwgaW4gY2VydF9ncm91cF9saXN0XQogICAgIyArIFsiY2VydGlmaWNhdGVfYXV0aG9yaXR5IjpjZXJ0aWZpY2F0ZV9hdXRob3JpdHldIAogICAgIyBkYXRhICs9IFsiY2VydGlmaWNhdGVfdHlwZSI6Y2VydGlmaWNhdGVfdHlwZV0gKyBbImNlcnRpZmljYXRlX3RlbXBsYXRlIjpjZXJ0aWZpY2F0ZV90ZW1wbGF0ZXNdCiAgICBwcmludChqc29uLmR1bXBzKGRhdGEpKQo=",
        "_id" : null,
        "_keywords" : null
      }, {
        "name" : null,
        "description" : null,
        "version" : null,
        "type" : "script",
        "fieldIds" : [ "certificate_types" ],
        "responseMapping" : {
          "response" : {
            "" : ""
          }
        },
        "historyReferences" : [ ],
        "usedHistory" : null,
        "sessionId" : null,
        "scriptName" : "Get_certificate_types",
        "scriptData" : "aW1wb3J0IHN5cwppbXBvcnQganNvbgppbXBvcnQgcmVxdWVzdHMKaW1wb3J0IG9zCgpmcm9tIGNvbmZpZ29iaiBpbXBvcnQgQ29uZmlnT2JqCnN5cy5wYXRoLmluc2VydCgwLEFWWDo6SEVMUEVSKQpzeXMucGF0aC5pbnNlcnQoMCxBVlg6OkRFUEVOREVOQ0lFUykKaW1wb3J0IGFwcHZpZXd4CmltcG9ydCBVUFNfSGVscGVycwppbXBvcnQgbG9nZ2VyX3V0aWwKbG9nZ2VyID0gbG9nZ2VyX3V0aWwuZ2V0X2xvZ2dlcigiQlVMSyBDRVJUIC0gSW5zaWRlIGhvb2tzIHRvIGdldCBjZXJ0IGF1dGhvcml0eSIpCgp0cnVlID0gVHJ1ZQpmYWxzZSA9IEZhbHNlCm51bGwgPSBOb25lCgoKZGVmIGZldGNoX2dhdGV3YXlfa2V5KCk6CiAgICBjb25mX2NvbnRlbnQgPSB7fQogICAgYWJzX3BhdGggPSBvcy5wYXRoLmRpcm5hbWUob3MucGF0aC5hYnNwYXRoKF9fZmlsZV9fKSkKICAgIHByb3BfZmlsZV9wYXRoID0gYWJzX3BhdGggKyAiLy4uL3Byb3BlcnRpZXMvYXBwdmlld3gucHJvcGVydGllcyIKICAgIGNvbmZpZyA9IENvbmZpZ09iaihwcm9wX2ZpbGVfcGF0aCkKICAgIHJldHVybiBjb25maWdbJ0dBVEVXQVlfQkFTRV9VUkwnXSwgY29uZmlnWydHQVRFV0FZX0tFWSddCgoKZGVmIGdldF9jZXJ0X2dyb3VwX25hbWVzKCk6CiAgICBnYXRld2F5X3VybCwgZ2F0ZXdheV9rZXkgPSBmZXRjaF9nYXRld2F5X2tleSgpCiAgICB1cmwgPSAie31hdnhhcGkvY2VydC1ncm91cC1mZXRjaC1ieS1wZXJtaXNzaW9uP3Blcm1pc3Npb249UlcmZ3drZXk9e30mZ3dzb3VyY2U9ZXh0ZXJuYWwiLmZvcm1hdCgKICAgICAgICBnYXRld2F5X3VybCwgZ2F0ZXdheV9rZXkpCiAgICBoZWFkZXJzID0gewogICAgICAgICJzZXNzaW9uSWQiOiAnPCVzZXNzaW9uSWQlPicsCiAgICAgICAgIkNvbnRlbnQtVHlwZSI6ICJhcHBsaWNhdGlvbi9qc29uIiwKICAgICAgICAiQWNjZXB0IjogImFwcGxpY2F0aW9uL2pzb24iCiAgICB9CiAgICByZXNwb25zZSA9IHJlcXVlc3RzLmdldCgKICAgICAgICB1cmw9dXJsLCBoZWFkZXJzPWhlYWRlcnMsIHZlcmlmeT1GYWxzZSkKICAgIHJldHVybiByZXNwb25zZS5qc29uKCkuZ2V0KCJyZXNwb25zZSIpCgoKCmlmIF9fbmFtZV9fID09ICdfX21haW5fXyc6CiAgICBjZXJ0aWZpY2F0ZV9ncm91cCA9ICc8Y2VydGlmaWNhdGVfZ3JvdXA+JwogICAgcG9saWN5X25hbWUgPSBVUFNfSGVscGVycy5nZXRfcG9saWN5X25hbWUoJzwlc2Vzc2lvbklkJT4nICxjZXJ0aWZpY2F0ZV9ncm91cCkKICAgIGNzcl9wYXJhbWV0ZXJzID0gVVBTX0hlbHBlcnMuZ2V0X2Nzcl9wYXJhbXNfZnJvbV9wb2xpY3koJzwlc2Vzc2lvbklkJT4nLCBwb2xpY3lfbmFtZSkKICAgIGxvZ2dlci5pbmZvKCIqKioqKioqQ1NSX1BBUkFNUyoqKioqKioiKQogICAgbG9nZ2VyLmluZm8oc3RyKGNzcl9wYXJhbWV0ZXJzKSkKICAgIGNlcnRpZmljYXRlX2F1dGhvcml0eSA9IGNzcl9wYXJhbWV0ZXJzLmdldCgiY2VydGlmaWNhdGVfYXV0aG9yaXR5IikKICAgIGNlcnRpZmljYXRlX3R5cGUgPSBjc3JfcGFyYW1ldGVycy5nZXQoImNlcnRpZmljYXRlX3R5cGUiKQogICAgbG9nZ2VyLmluZm8oIioqKipDZXJ0aWZpY2F0ZSB0eXBlKioqKiIpCiAgICBsb2dnZXIuaW5mbyhzdHIoY2VydGlmaWNhdGVfdHlwZSkpCiAgICAjIGNlcnRpZmljYXRlX3RlbXBsYXRlcyA9IGNzcl9wYXJhbWV0ZXJzLmdldCgidGVtcGxhdGUiKQogICAgaWYgIjxlbnZpcm9ubWVudD4iPT0iVGVzdE5ldCI6CiAgICAgICAgZGF0YSA9IFt7ImNlcnRpZmljYXRlX3R5cGVzIjp2YWwuZ2V0KCJuYW1lIil9IGZvciB2YWwgaW4gY2VydGlmaWNhdGVfdHlwZSBpZiAiKGN1c3RvbWl6ZWQgZm9yIFVuaXRlZCBQYXJjZWwgU2VydmljZSkiIG5vdCBpbiB2YWwuZ2V0KCJuYW1lIiwiIildK1t7ImNlcnRpZmljYXRlX2F1dGhvcml0eSI6Y2VydGlmaWNhdGVfYXV0aG9yaXR5fV0jK1t7InJlcXVlc3Rvcl9kZXBhcnRtZW50X251bWJlciI6Y2VydGlmaWNhdGVfZ3JvdXB9XQogICAgZWxzZToKICAgICAgICBkYXRhID0gW3siY2VydGlmaWNhdGVfdHlwZXMiOnZhbC5nZXQoIm5hbWUiKX0gZm9yIHZhbCBpbiBjZXJ0aWZpY2F0ZV90eXBlXStbeyJjZXJ0aWZpY2F0ZV9hdXRob3JpdHkiOmNlcnRpZmljYXRlX2F1dGhvcml0eX1dIytbeyJyZXF1ZXN0b3JfZGVwYXJ0bWVudF9udW1iZXIiOmNlcnRpZmljYXRlX2dyb3VwfV0KICAgIAogICAgIyArIFsiY2VydGlmaWNhdGVfYXV0aG9yaXR5IjpjZXJ0aWZpY2F0ZV9hdXRob3JpdHldIAogICAgIyBkYXRhICs9IFsiY2VydGlmaWNhdGVfdHlwZSI6Y2VydGlmaWNhdGVfdHlwZV0gKyBbImNlcnRpZmljYXRlX3RlbXBsYXRlIjpjZXJ0aWZpY2F0ZV90ZW1wbGF0ZXNdCiAgICBwcmludChqc29uLmR1bXBzKGRhdGEpKQo=",
        "_id" : null,
        "_keywords" : null
      } ],
      "accessType" : null,
      "parentTemplate" : null,
      "hiddenTemplate" : false,
      "groupData" : {
        "treeData" : [ {
          "name" : "Certificate Inputs",
          "id" : 191
        }, {
          "name" : "Notes and Comments",
          "id" : 184
        }, {
          "name" : "Requestor Information",
          "id" : 435
        }, {
          "name" : "Department Information",
          "id" : 123,
          "is_open" : false,
          "children" : [ {
            "name" : "Application Information",
            "id" : 883
          } ]
        }, {
          "name" : "Installation Information",
          "id" : 589
        }, {
          "name" : "Vendor Information",
          "id" : 336
        }, {
          "name" : "Change Control and Application Testing",
          "id" : 932
        }, {
          "name" : "Managed Server Information",
          "id" : 685
        } ],
        "listData" : [ "Certificate Inputs", "Notes and Comments", "Requestor Information", "Department Information", "Department Information/Application Information", "Installation Information", "Vendor Information", "Change Control and Application Testing", "Managed Server Information" ]
      },
      "workflow_template_name" : null,
      "_keywords" : null
    },
    "configuration" : {
      "aclIdentifiers" : [ "super access" ],
      "permission" : [ "super access:submit" ],
      "skipFlow" : false,
      "emailConfiguration" : {
        "emailNotificationEnabled" : false,
        "createdNotificationConfig" : {
          "notifyUser" : false,
          "notifyTargetGroup" : false,
          "emailsList" : [ ]
        },
        "reviewedNotificationConfig" : {
          "notifyUser" : false,
          "notifyTargetGroup" : false,
          "emailsList" : [ ]
        },
        "submittedNotificationConfig" : {
          "notifyUser" : false,
          "notifyTargetGroup" : false,
          "emailsList" : [ ]
        },
        "rejectedNotificationConfig" : {
          "notifyUser" : false,
          "notifyTargetGroup" : false,
          "emailsList" : [ ]
        }
      },
      "multipleScenarioEnabled" : false,
      "maxScenarioCount" : 1,
      "enableSaveDraft" : false,
      "enableCancel" : true,
      "enableClose" : false,
      "enableBreakDown" : false,
      "labels" : {
        "submit" : "Submit",
        "reject" : "Back",
        "cancel" : "Cancel",
        "saveDraft" : "Save draft",
        "close" : "Exit"
      },
      "enableAutoApprove" : false,
      "failoverState" : 2,
      "successState" : 1,
      "dynamicAuth" : "",
      "regexList" : null,
      "regexOperation" : null,
      "regexPattern" : null,
      "accessMode" : null
    },
    "data" : null,
    "api_list" : null
  }, {
    "uniqueId" : null,
    "directoryUniqueId" : null,
    "source" : null,
    "tags" : [ ],
    "userName" : null,
    "objectType" : "TaskDetails",
    "sourceControlSettings" : null,
    "description" : "",
    "historyReferences" : [ "5e9d5ca0005e355cf216db32", "5e9d456e005e355cf216d912", "5f440045e876b464d0a63d4b", "5e9d458e005e355cf216d914", "5f36be05abff755debc45140", "5f44003f16749c335f1a4ca4", "5e9d5d48005e355cf216db3a", "5f44003c16749c335f1a4ca2", "5e9d58f6005e355cf216db2a", "5f36be09653c601144c9f0e7", "5e9d5d08005e355cf216db38", "5e9d5d53005e355cf216db3e", "5e9d5cd2005e355cf216db34", "5e9d54d5005e355cf216db27", "5e9d5d50005e355cf216db3c", "5f440042e876b464d0a63d49", "5f36bdf2abff755debc4513c" ],
    "usedHistory" : "63df82633bd38ff879a16d8f20040c1f",
    "sampleInput" : null,
    "sampleOutput" : null,
    "contentTab" : null,
    "successiveTasks" : {
      "incoming" : [ {
        "taskId" : "workflow_start_1",
        "taskName" : null,
        "subflowId" : "qIh2AzEx",
        "parentSubflowId" : "",
        "taskType" : "start",
        "flowName" : null,
        "linkType" : null
      } ],
      "success" : [ {
        "taskId" : "createform_1",
        "taskName" : null,
        "subflowId" : "qIh2AzEx",
        "parentSubflowId" : "",
        "taskType" : "form",
        "flowName" : null,
        "linkType" : null
      } ]
    },
    "flowPathID" : null,
    "ignoredForStatusComputation" : false,
    "flowName" : "",
    "subFlowID" : "qIh2AzEx",
    "globalData" : null,
    "input" : [ {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "sessionId",
      "value" : "<%sessionId%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "sessionId",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "input_type",
      "value" : "<%input_type%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "input_type",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "requestCreator",
      "value" : "<%requestCreator%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "requestCreator",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    } ],
    "notificationMessage" : {
      "0" : "",
      "1" : "",
      "2" : ""
    },
    "ancestor" : null,
    "metaData" : {
      "taskHeader" : "Script",
      "hide" : false,
      "lock" : false,
      "successState" : 1,
      "failoverState" : 2,
      "taskScope" : null,
      "hideFromStageView" : false,
      "mode" : "Developer",
      "nature" : "schedule",
      "lowCodeTask" : false
    },
    "parentSubFlowID" : "",
    "helpContent" : null,
    "name" : "",
    "syncExecution" : true,
    "_id" : null,
    "task_id" : "script_1",
    "task_name" : "Fetching SSO details",
    "task_type" : "script",
    "task_category" : "script",
    "component_type" : "others",
    "setNullProperties" : true,
    "folderName" : "For Export",
    "sub_group" : "script",
    "group_name" : "General",
    "viewable_type" : "custom",
    "scriptType" : "Python",
    "scriptContent" : "import sys\nimport os\nimport json\nimport gridfs\nfrom bson import ObjectId\n\nsys.path.insert(0,AVX::HELPER)\nsys.path.insert(0,AVX::DEPENDENCIES)\n\nimport UPS_Helpers\nimport appviewx\ndb = appviewx.db_connection().appviewx\n\nimport logger_util\nlogger = logger_util.get_logger(\"Fetching details from SSO\")\n\nnull = None\nsessionId = \"<%sessionId%>\"\ninput_type = \"<%input_type%>\"\n\nuser = db.user.find_one({\"loginName\":\"<%requestCreator%>\"})\nlogin_name = user[\"loginName\"][:7]\nfirst_name = user[\"firstName\"]\nlast_name = user[\"lastName\"]\nemail = user[\"email\"]\n\nAVX::OUTPUT({\"loginName\":login_name,\"firstName\":first_name,\"lastName\":last_name,\"emailId\":email})",
    "http_method" : "POST",
    "action_id" : "run-script"
  }, {
    "uniqueId" : "jkDppSeM",
    "directoryUniqueId" : "Uz8T1SM3",
    "source" : "DEFAULT",
    "tags" : [ "User interface", "Form" ],
    "userName" : "DEFAULT",
    "objectType" : "TaskDetails",
    "sourceControlSettings" : null,
    "description" : "",
    "historyReferences" : [ "5f90a364dba16200c07915ae", "5f90a36a3672d16c9970c846", "5f90a3b6ecabed5407a734f7", "5f90a3793672d16c9970c848" ],
    "usedHistory" : "ee842c87c0fff5fc8d9d4502b95573a3",
    "sampleInput" : null,
    "sampleOutput" : null,
    "contentTab" : "",
    "successiveTasks" : { },
    "flowPathID" : null,
    "ignoredForStatusComputation" : false,
    "flowName" : null,
    "subFlowID" : null,
    "globalData" : null,
    "input" : [ ],
    "notificationMessage" : null,
    "ancestor" : null,
    "metaData" : {
      "taskHeader" : "Form",
      "hide" : false,
      "lock" : false,
      "successState" : 1,
      "failoverState" : 2,
      "taskScope" : null,
      "hideFromStageView" : false,
      "mode" : "Developer",
      "nature" : "normal",
      "lowCodeTask" : false
    },
    "parentSubFlowID" : null,
    "helpContent" : "<p>Form task allows for building of a dynamic self-service form or catalog in order to capture user inputs as part of the workflow execution process.</p>",
    "dynamicAuth" : null,
    "regexList" : null,
    "regexOperation" : null,
    "regexPattern" : null,
    "accessMode" : null,
    "proceedProcess" : "Submit",
    "breakdownProcess" : "Back",
    "cancelProcess" : "Cancel",
    "saveDraftProcess" : "Save Draft",
    "closeProcess" : "Exit",
    "enableSaveDraft" : false,
    "enableCancel" : true,
    "enableClose" : false,
    "enableAutoApprove" : null,
    "enableBreakDown" : false,
    "availableGlobalData" : null,
    "_id" : null,
    "task_id" : "createform_2",
    "task_name" : "Form_2",
    "task_type" : "form",
    "task_category" : "form",
    "component_type" : "form",
    "setNullProperties" : true,
    "folderName" : null,
    "sub_group" : "form",
    "group_name" : "User interface",
    "viewable_type" : "default",
    "aclIdentifiers" : null,
    "template" : {
      "name" : "Form_2",
      "description" : null,
      "aclIdentifiers" : null,
      "fields" : [ {
        "labelName" : "dsdfs",
        "elementType" : "Multi-line with file upload",
        "values" : "",
        "fieldId" : "dfd",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : ""
      } ],
      "fieldScripts" : null,
      "accessType" : null,
      "parentTemplate" : null,
      "hiddenTemplate" : false,
      "groupData" : {
        "treeData" : [ ],
        "listData" : [ ]
      },
      "workflow_template_name" : null,
      "_keywords" : null
    },
    "configuration" : {
      "aclIdentifiers" : [ "super access" ],
      "permission" : [ "super access:submit" ],
      "skipFlow" : false,
      "emailConfiguration" : {
        "emailNotificationEnabled" : false,
        "createdNotificationConfig" : {
          "notifyUser" : false,
          "notifyTargetGroup" : false,
          "emailsList" : [ ]
        },
        "reviewedNotificationConfig" : {
          "notifyUser" : false,
          "notifyTargetGroup" : false,
          "emailsList" : [ ]
        },
        "submittedNotificationConfig" : {
          "notifyUser" : false,
          "notifyTargetGroup" : false,
          "emailsList" : [ ]
        },
        "rejectedNotificationConfig" : {
          "notifyUser" : false,
          "notifyTargetGroup" : false,
          "emailsList" : [ ]
        }
      },
      "multipleScenarioEnabled" : false,
      "maxScenarioCount" : 0,
      "enableSaveDraft" : true,
      "enableCancel" : true,
      "enableClose" : false,
      "enableBreakDown" : false,
      "labels" : {
        "cancel" : "Cancel",
        "submit" : "Submit",
        "reject" : "Back",
        "saveDraft" : "Save Draft",
        "close" : "Exit"
      },
      "enableAutoApprove" : false,
      "failoverState" : 2,
      "successState" : 1,
      "dynamicAuth" : null,
      "regexList" : null,
      "regexOperation" : null,
      "regexPattern" : null,
      "accessMode" : null
    },
    "data" : null,
    "api_list" : null
  } ],
  "subFlowID" : "qIh2AzEx",
  "taskGlobalData" : {
    "workflow_stop_1" : [ ],
    "CertcreateOOB_1" : [ ],
    "createform_1" : [ {
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : "Port",
      "key" : "port",
      "value" : "port",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "port",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : "Name of the Installer",
      "key" : "installer_name",
      "value" : "installer_name",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "installer_name",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : "Server",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : "Certificate Type",
      "key" : "certificate_type",
      "value" : "certificate_type",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "certificate_type",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : "Application Name",
      "key" : "application_name",
      "value" : "application_name",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "application_name",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : "Add New Server",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : "Server Details",
      "key" : "server_details",
      "value" : "server_details",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "server_details",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : "Vendor Email Address",
      "key" : "vendor_email_address",
      "value" : "vendor_email_address",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "vendor_email_address",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : "Prod,TestNet",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : "Environment",
      "key" : "environment",
      "value" : "environment",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "environment",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : "Common Name of Certificate Being Replaced:",
      "key" : "cname_replaced",
      "value" : "cname_replaced",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "cname_replaced",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : "Vendor liaison UPS Contact",
      "key" : "vendor_liaison",
      "value" : "vendor_liaison",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "vendor_liaison",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : "Gateway credential,Manual Entry",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : "Credential Type",
      "key" : "credential_type",
      "value" : "credential_type",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "credential_type",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : "SMC Assignment Group Name",
      "key" : "smc_grp",
      "value" : "smc_grp",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "smc_grp",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : "Additional Notes or Comments",
      "key" : "notes_comments",
      "value" : "notes_comments",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "notes_comments",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : "Street Address",
      "key" : "street_address",
      "value" : "street_address",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "street_address",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : "No,Yes",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : "Vendor hosted",
      "key" : "vendor_hosted",
      "value" : "vendor_hosted",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "vendor_hosted",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : "Postal code",
      "key" : "postal_code",
      "value" : "postal_code",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "postal_code",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : "Requestor Immediate Manager Name as UPS Email Address",
      "key" : "requestor_manager_name",
      "value" : "requestor_manager_name",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "requestor_manager_name",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : "Yes,No",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : "Read and Agreed to open the necessary change controls before installing certificate",
      "key" : "read_and_agree_checkbox",
      "value" : "read_and_agree_checkbox",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "read_and_agree_checkbox",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : "Name of Website / Application",
      "key" : "website_name",
      "value" : "website_name",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "website_name",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : "Remote,LocalSystem",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : "Gateway Location",
      "key" : "iis_gateway_location",
      "value" : "iis_gateway_location",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "iis_gateway_location",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : "Subject Alternative Name",
      "key" : "san",
      "value" : "san",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "san",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : "Certificate Group",
      "key" : "certificate_group",
      "value" : "certificate_group",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "certificate_group",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : "Username",
      "key" : "iis_username",
      "value" : "iis_username",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "iis_username",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : "<%firstName%>",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : "Requestor First Name",
      "key" : "requestor_first_name",
      "value" : "requestor_first_name",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "requestor_first_name",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : "1,2",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : "Validity",
      "key" : "validity",
      "value" : "validity",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "validity",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : "Certificate Location",
      "key" : "certificate_location",
      "value" : "certificate_location",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "certificate_location",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : "Requestor UPS Team Mailbox",
      "key" : "requestor_ups_team_mailbox",
      "value" : "requestor_ups_team_mailbox",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "requestor_ups_team_mailbox",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : "Certificate types",
      "key" : "certificate_types",
      "value" : "certificate_types",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "certificate_types",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : "Select,Create Certificate Only,Create and Push Certificate",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : "Creation Type",
      "key" : "creation_type",
      "value" : "creation_type",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "creation_type",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : "Team Mailbox for Installer",
      "key" : "installer_team_mailbox",
      "value" : "installer_team_mailbox",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "installer_team_mailbox",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : "Common Name",
      "key" : "testnet_common_name",
      "value" : "testnet_common_name",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "testnet_common_name",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : "Change Process Id",
      "key" : "change_process",
      "value" : "change_process",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "change_process",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : "Password",
      "key" : "password",
      "value" : "password",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "password",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : "Reason/Comments",
      "key" : "reason",
      "value" : "reason",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "reason",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : "<%lastName%>",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : "Requestor Last Name",
      "key" : "requestor_last_name",
      "value" : "requestor_last_name",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "requestor_last_name",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : "Common Name",
      "key" : "prod_common_name",
      "value" : "prod_common_name",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "prod_common_name",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : "Requestor Department Name",
      "key" : "requestor_department_name",
      "value" : "requestor_department_name",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "requestor_department_name",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : "Telephone Number for Installer",
      "key" : "installer_telephone_number",
      "value" : "installer_telephone_number",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "installer_telephone_number",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : "EliteSSL Certificate,Unified Communication Certificate,Private Unified Communications Certificate",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : "Template name",
      "key" : "template_name",
      "value" : "template_name",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "template_name",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : "Windows Gateway Name",
      "key" : "windows_gateway_name",
      "value" : "windows_gateway_name",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "windows_gateway_name",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : "New,Existing",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : "Select Gateway",
      "key" : "select_gateway",
      "value" : "select_gateway",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "select_gateway",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : "Common Name",
      "key" : "common_name",
      "value" : "common_name",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "common_name",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : "No,Yes",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : "Is this request replacing a currently installed certificate?",
      "key" : "is_replacing",
      "value" : "is_replacing",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "is_replacing",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : "PowerShell,WMI",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : "Gateway Type",
      "key" : "iis_gateway_type",
      "value" : "iis_gateway_type",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "iis_gateway_type",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : "Username",
      "key" : "username",
      "value" : "username",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "username",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : "<%loginName%>",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : "Requestor Employee Number",
      "key" : "requestor_employee_number",
      "value" : "requestor_employee_number",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "requestor_employee_number",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : "Name of Vendor",
      "key" : "vendor_name",
      "value" : "vendor_name",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "vendor_name",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : "Bulk Download Group Identifier",
      "key" : "bulk_dwnld_grp",
      "value" : "bulk_dwnld_grp",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "bulk_dwnld_grp",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : " 1,2",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : "Validity",
      "key" : "private_validity",
      "value" : "private_validity",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "private_validity",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : "Department Number of Installer",
      "key" : "installer_department_number",
      "value" : "installer_department_number",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "installer_department_number",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : "FQDN",
      "key" : "fqdn",
      "value" : "fqdn",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "fqdn",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : "Requestor Department Number",
      "key" : "requestor_department_number",
      "value" : "requestor_department_number",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "requestor_department_number",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : "Remote",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : "Gateway Location",
      "key" : "gateway_location",
      "value" : "gateway_location",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "gateway_location",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : "Reason/Comments",
      "key" : "change_control_reason",
      "value" : "change_control_reason",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "change_control_reason",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : "22",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : "SSH Port",
      "key" : "ssh_port",
      "value" : "ssh_port",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "ssh_port",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : "Windows Gateway URL",
      "key" : "windows_gateway_url",
      "value" : "windows_gateway_url",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "windows_gateway_url",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : "Password",
      "key" : "linux_password",
      "value" : "linux_password",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "linux_password",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : "No,Yes",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : "Have you completed the required change control ?",
      "key" : "completed_change_control",
      "value" : "completed_change_control",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "completed_change_control",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : "+1",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : "Requestor Telephone Number",
      "key" : "requestor_telephone_number",
      "value" : "requestor_telephone_number",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "requestor_telephone_number",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : "No,Yes",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : "Have you verified / tested your installation procedures in TestNet?  ",
      "key" : "verified_install_confirmation",
      "value" : "verified_install_confirmation",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "verified_install_confirmation",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : "<%emailId%>",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : "Requestor UPS Email Address",
      "key" : "requestor_ups_email_address",
      "value" : "requestor_ups_email_address",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "requestor_ups_email_address",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : "IP Address ",
      "key" : "ip_address",
      "value" : "ip_address",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "ip_address",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : "Vendor liaison Telephone",
      "key" : "vendor_liaison_telephone",
      "value" : "vendor_liaison_telephone",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "vendor_liaison_telephone",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : " ",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : "AVS Entry Number",
      "key" : "avs_entry_number",
      "value" : "avs_entry_number",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "avs_entry_number",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : "Windows Gateway Name",
      "key" : "iis_windows_gateway_name",
      "value" : "iis_windows_gateway_name",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "iis_windows_gateway_name",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : "Windows Gateway",
      "key" : "windows_gateway",
      "value" : "windows_gateway",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "windows_gateway",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : "Form Input,Bulk Input",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : "Input Type",
      "key" : "input_type",
      "value" : "input_type",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "input_type",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : "Vendor Telephone",
      "key" : "vendor_telephone",
      "value" : "vendor_telephone",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "vendor_telephone",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : "Server Name",
      "key" : "server_name",
      "value" : "server_name",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "server_name",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : "Windows Gateway URL",
      "key" : "iis_windows_gateway_url",
      "value" : "iis_windows_gateway_url",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "iis_windows_gateway_url",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : "Vendor liaison Email address",
      "key" : "vendor_liaison_email",
      "value" : "vendor_liaison_email",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "vendor_liaison_email",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : "Status Report Manager",
      "key" : "requestor_director_name",
      "value" : "requestor_director_name",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "requestor_director_name",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : "Password",
      "key" : "iis_password",
      "value" : "iis_password",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "iis_password",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : "Bulk Input File",
      "key" : "bulk_input_file",
      "value" : "bulk_input_file",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "bulk_input_file",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : "No",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : "Is this Certificate being Renewed?",
      "key" : "cert_renewal",
      "value" : "cert_renewal",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "cert_renewal",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : "Serial Number of certificate being replaced:",
      "key" : "serial_number",
      "value" : "serial_number",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "serial_number",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : "Windows Gateway",
      "key" : "iis_windows_gateway",
      "value" : "iis_windows_gateway",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "iis_windows_gateway",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : "Select,Microsoft,Microsoft IIS,Linux",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : "Server Type",
      "key" : "server_type",
      "value" : "server_type",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "server_type",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : "Certificate authority",
      "key" : "certificate_authority",
      "value" : "certificate_authority",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "certificate_authority",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : "Host Name",
      "key" : "host_name",
      "value" : "host_name",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "host_name",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : "Subject Alternative Name",
      "key" : "san_multi",
      "value" : "san_multi",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "san_multi",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : "Requestor Sr. Manager Name as UPS Email Address",
      "key" : "requestor_sr_manager_name",
      "value" : "requestor_sr_manager_name",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "requestor_sr_manager_name",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : "PowerShell,WMI",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : "Gateway type",
      "key" : "gateway_type",
      "value" : "gateway_type",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "gateway_type",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : "Host Name",
      "key" : "iis_host_name",
      "value" : "iis_host_name",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "iis_host_name",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : "Username",
      "key" : "linux_username",
      "value" : "linux_username",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "linux_username",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    } ],
    "script_1" : [ {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : "lastName",
      "key" : "lastName",
      "value" : "lastName",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "lastName",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : "loginName",
      "key" : "loginName",
      "value" : "loginName",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "loginName",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : "firstName",
      "key" : "firstName",
      "value" : "firstName",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "firstName",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : "emailId",
      "key" : "emailId",
      "value" : "emailId",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "emailId",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    } ],
    "CertcreateOOB_2" : [ ],
    "createform_2" : [ ]
  },
  "type" : null,
  "level" : 0,
  "maxDepth" : 0,
  "input" : null,
  "workflowName" : "Copy of UPS Certificate Request Workflow-Sep14V1",
  "description" : null,
  "flowName" : null,
  "workflowType" : "Default",
  "subFlowType" : "Default",
  "parentSubFlowID" : null,
  "logs" : [ ],
  "workflowVersion" : "master"
}, {
  "tasks" : [ {
    "uniqueId" : null,
    "directoryUniqueId" : null,
    "source" : null,
    "tags" : [ ],
    "userName" : null,
    "objectType" : "TaskDetails",
    "sourceControlSettings" : null,
    "description" : null,
    "historyReferences" : [ "5f440034e876b464d0a63d47" ],
    "usedHistory" : "46ba55201444b98fd35e5d3d392624e4",
    "sampleInput" : null,
    "sampleOutput" : null,
    "contentTab" : null,
    "successiveTasks" : { },
    "flowPathID" : null,
    "ignoredForStatusComputation" : true,
    "flowName" : null,
    "subFlowID" : null,
    "globalData" : null,
    "input" : [ ],
    "notificationMessage" : null,
    "ancestor" : null,
    "metaData" : {
      "taskHeader" : "stop",
      "hide" : false,
      "lock" : false,
      "successState" : 1,
      "failoverState" : 2,
      "taskScope" : null,
      "hideFromStageView" : false,
      "mode" : "Developer",
      "nature" : null,
      "lowCodeTask" : false
    },
    "parentSubFlowID" : null,
    "helpContent" : null,
    "rules" : { },
    "cleanUpFlowDetails" : { },
    "subFlowDetails" : [ ],
    "associatedRollbackWorkOrderDetail" : null,
    "_id" : null,
    "task_id" : "workflow_stop_1",
    "task_name" : "Stop",
    "task_type" : "stop",
    "task_category" : "stop",
    "component_type" : "others",
    "setNullProperties" : true,
    "folderName" : null,
    "sub_group" : null,
    "group_name" : null,
    "viewable_type" : "custom"
  } ],
  "subFlowID" : "YMp99IAZ",
  "taskGlobalData" : {
    "workflow_stop_1" : [ ]
  },
  "type" : null,
  "level" : 0,
  "maxDepth" : 0,
  "input" : null,
  "workflowName" : "Copy of UPS Certificate Request Workflow-Sep14V1",
  "description" : null,
  "flowName" : null,
  "workflowType" : "Rollback",
  "subFlowType" : "Default",
  "parentSubFlowID" : null,
  "logs" : [ ],
  "workflowVersion" : "master"
}, {
  "tasks" : [ {
    "uniqueId" : null,
    "directoryUniqueId" : null,
    "source" : null,
    "tags" : [ ],
    "userName" : null,
    "objectType" : "TaskDetails",
    "sourceControlSettings" : null,
    "description" : null,
    "historyReferences" : [ "5e316deb01df96337532d224", "5e31e3d528c04c1fc6cb6024", "5e0debd01a73b7686e35285b", "5e0f06f01a73b7686e354318", "5e0deade1a73b7686e352829", "5e334bb828c04c1fc6cb9173", "5e334bbb28c04c1fc6cb9189", "5e31e3cd28c04c1fc6cb601f", "5e0dea441a73b7686e3527fb", "5e0deb671a73b7686e35283a", "5e31362401df96337532c5d5" ],
    "usedHistory" : "4e5aa1abb15ce3a3ae6b5e837a613aa7",
    "sampleInput" : null,
    "sampleOutput" : null,
    "contentTab" : null,
    "successiveTasks" : {
      "incoming" : [ {
        "taskId" : "script_2",
        "taskName" : null,
        "subflowId" : "Js0RIoiy",
        "parentSubflowId" : "wXuhN9bL",
        "taskType" : "start",
        "flowName" : null,
        "linkType" : null
      } ]
    },
    "flowPathID" : null,
    "ignoredForStatusComputation" : true,
    "flowName" : null,
    "subFlowID" : null,
    "globalData" : null,
    "input" : [ ],
    "notificationMessage" : null,
    "ancestor" : null,
    "metaData" : {
      "taskHeader" : "stop",
      "hide" : false,
      "lock" : false,
      "successState" : 1,
      "failoverState" : 2,
      "taskScope" : null,
      "hideFromStageView" : false,
      "mode" : "Developer",
      "nature" : null,
      "lowCodeTask" : false
    },
    "parentSubFlowID" : null,
    "helpContent" : null,
    "rules" : { },
    "cleanUpFlowDetails" : { },
    "subFlowDetails" : [ ],
    "associatedRollbackWorkOrderDetail" : null,
    "_id" : null,
    "task_id" : "workflow_stop_1",
    "task_name" : "Stop flow",
    "task_type" : "stop",
    "task_category" : "stop",
    "component_type" : "others",
    "setNullProperties" : true,
    "folderName" : null,
    "sub_group" : null,
    "group_name" : null,
    "viewable_type" : "custom"
  }, {
    "uniqueId" : null,
    "directoryUniqueId" : null,
    "source" : null,
    "tags" : [ ],
    "userName" : null,
    "objectType" : "TaskDetails",
    "sourceControlSettings" : null,
    "description" : "",
    "historyReferences" : [ "5e33d95b28c04c1fc6cbbaeb", "5e33dc4328c04c1fc6cbbb4f", "5e0aefc440a4cc3fb25778da", "5e334bbb28c04c1fc6cb9188", "5e33109d28c04c1fc6cb8cc7", "5e0afa0840a4cc3fb2577adf", "5e0f06f01a73b7686e35431c", "5e31e3cd28c04c1fc6cb601e", "5e33c6da28c04c1fc6cbb86d", "5e0deb671a73b7686e35283e", "5e33db7d28c04c1fc6cbbb36", "5e3ab629facc3a1372b8924a", "5e15a0491a73b7686e366193", "5e33236828c04c1fc6cb8de8", "5e3321e228c04c1fc6cb8dc9", "5e157d421a73b7686e365e8f", "5e15a1101a73b7686e3661c6", "5e31e3d428c04c1fc6cb6021", "5e33440728c04c1fc6cb90b5", "5e33da1528c04c1fc6cbbb0e", "5e0b152740a4cc3fb2577bdc", "5e15a0b51a73b7686e3661a4", "5e0b105c40a4cc3fb2577b60", "5e33d2cc28c04c1fc6cbb92b", "5e0deadd1a73b7686e352825", "5e0afa1040a4cc3fb2577ae4", "5e3326e728c04c1fc6cb8e22", "5e31e6a928c04c1fc6cb6053", "5e0aefbf40a4cc3fb25778d4", "5e0aef1a40a4cc3fb2577848", "5e0b10c140a4cc3fb2577b6f", "5e1581871a73b7686e365fb4", "5e334ce828c04c1fc6cb9442", "5e0aef1e40a4cc3fb257784d", "5e158f751a73b7686e3660f5", "5e33495b28c04c1fc6cb90e6", "5e334bb828c04c1fc6cb916c", "5e316deb01df96337532d228", "5e334ba728c04c1fc6cb911b", "5e0dead31a73b7686e35281e", "5e0deab31a73b7686e35280d", "5e158e0a1a73b7686e3660ec", "5e31362401df96337532c5d9", "5e31e37928c04c1fc6cb6018", "5e33dabf28c04c1fc6cbbb1d", "5e33dced28c04c1fc6cbbb76", "5e15a1671a73b7686e3661d2", "5e31e3d528c04c1fc6cb6023", "5e0aef3c40a4cc3fb2577867", "5e0deabb1a73b7686e35280f", "5e157ff01a73b7686e365fae", "5e33dce728c04c1fc6cbbb74", "5e31e6fe28c04c1fc6cb6055", "5e0debd01a73b7686e35285f", "5e33b62728c04c1fc6cbb735" ],
    "usedHistory" : "4a484de3ed8f416b3c1b02d119aecad7",
    "sampleInput" : null,
    "sampleOutput" : null,
    "contentTab" : null,
    "successiveTasks" : {
      "incoming" : [ {
        "taskId" : "workflow_start_1",
        "taskName" : null,
        "subflowId" : "Js0RIoiy",
        "parentSubflowId" : "wXuhN9bL",
        "taskType" : "start",
        "flowName" : null,
        "linkType" : null
      } ],
      "success" : [ {
        "taskId" : "workflow_stop_1",
        "taskName" : null,
        "subflowId" : "Js0RIoiy",
        "parentSubflowId" : "wXuhN9bL",
        "taskType" : "stop",
        "flowName" : null,
        "linkType" : null
      } ]
    },
    "flowPathID" : null,
    "ignoredForStatusComputation" : false,
    "flowName" : "MS create certificates",
    "subFlowID" : "Js0RIoiy",
    "globalData" : null,
    "input" : [ {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "certificate_profile",
      "value" : "<%certificate_profile%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "certificate_profile",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "sessionId",
      "value" : "<%sessionId%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "sessionId",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "status_list",
      "value" : "<%status_list%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "status_list",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "requestId",
      "value" : "<%requestId%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "requestId",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "read_only",
      "value" : "<%read_only%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "read_only",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "cert_authority",
      "value" : "<%cert_authority%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "cert_authority",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "assign_group",
      "value" : "<%assign_group%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "assign_group",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "certificate_details",
      "value" : "<%certificate_details%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "certificate_details",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    } ],
    "notificationMessage" : {
      "0" : "",
      "1" : "",
      "2" : ""
    },
    "ancestor" : null,
    "metaData" : {
      "taskHeader" : "Script",
      "hide" : false,
      "lock" : false,
      "successState" : 1,
      "failoverState" : 2,
      "taskScope" : null,
      "hideFromStageView" : false,
      "mode" : "Developer",
      "nature" : "normal",
      "lowCodeTask" : false
    },
    "parentSubFlowID" : "wXuhN9bL",
    "helpContent" : null,
    "name" : "",
    "syncExecution" : true,
    "_id" : null,
    "task_id" : "script_2",
    "task_name" : "MS Certificate Creation",
    "task_type" : "script",
    "task_category" : "script",
    "component_type" : "others",
    "setNullProperties" : true,
    "folderName" : "AppViewX certificates",
    "sub_group" : "script",
    "group_name" : "General",
    "viewable_type" : "custom",
    "scriptType" : "Python",
    "scriptContent" : "import sys\r\nimport requests\r\nimport json\r\nimport time\r\nimport random\r\nimport requests\r\nfrom bson import ObjectId\r\nfrom datetime import datetime\r\nimport ast\r\nimport os\r\nfrom configobj import ConfigObj\r\n\r\nsys.path.insert(0,AVX::HELPER)\r\nsys.path.insert(0,AVX::DEPENDENCIES)\r\nimport appviewx\r\ndb = appviewx.db_connection().appviewx\r\nimport logger_util\r\nlogger = logger_util.get_logger('Get key-type and bit length')\r\ntrue = True\r\nfalse = False\r\nnull = None\r\n\r\nserver_map = {'Microsoft': \"Microsoft Server\", \"Linux\": \"LinuxServer\", \"Microsoft IIS\": \"IIS\"}\r\ncertificate_details = \"<%csr_parameters[<%certificate_details%>]%>\"\r\nstatus_list = \"<%status_list%>\"\r\nsession_id = \"<%sessionId%>\"\r\n\r\nimport base64\r\ndef encrypt_password(password):\r\n    if password:\r\n        enc_pass = base64.b64encode(password.encode(\"utf-8\"))\r\n        encrypted_pass = str(enc_pass,\"utf-8\")\r\n        return encrypted_pass\r\n    return ''\r\n\r\ndef fetch_gateway_key():\r\n    conf_content = {}\r\n    abs_path = os.path.dirname(os.path.abspath(__file__))\r\n    prop_file_path = abs_path + \"/../properties/appviewx.properties\"\r\n    config = ConfigObj(prop_file_path)\r\n    return config['GATEWAY_BASE_URL'], config['GATEWAY_KEY']\r\n\r\ndef cert_ca_connector_info(csr):\r\n    gateway_url, gateway_key = fetch_gateway_key()\r\n    url = \"{}avxapi/cert-ca-connectorinfo-save?&gwkey={}&gwsource=external\".format(gateway_url, gateway_key)\r\n    headers = {\r\n        \"sessionId\": '<%sessionId%>',\r\n        \"Content-Type\": \"application/json\",\r\n        \"Accept\": \"application/json\"\r\n    }\r\n    san = [\"dNSNames\"]\r\n    \r\n    if csr.get(\"directory_name\"):\r\n        san.append(\"directoryNames\")\r\n    if csr.get(\"email_san\"):\r\n        san.append(\"rfc822Names\")\r\n    if csr.get(\"ip_address\"):\r\n        san.append(\"iPAddresses\")\r\n    if csr.get(\"registered_id_san\"):\r\n        san.append(\"registeredIDs\")\r\n    if csr.get(\"url_san\"):\r\n        san.append(\"uniformResourceIdentifiers\")\r\n    if csr.get(\"other_name_san\"):\r\n        san.append(\"otherNames\")\r\n    if len(san)>1:\r\n        san.insert(0,\"multiselect-all\")\r\n        \r\n    san_dns = []\r\n    san_dns_r = []\r\n    \r\n    if csr.get(\"dns\"):\r\n        san_dns.append(csr.get(\"common_name\"))\r\n        san_dns.extend(csr.get(\"dns\").split(\",\"))\r\n    \r\n    \r\n    payload = {\r\n        \"payload\" : {\r\n            \"csrGenerationSource\": \"appviewx\",\r\n            \"caConnectorInfo\": {\r\n                \"_id\": \"\",\r\n                \"certificateUuid\": \"\",\r\n                \"existingUuid\": \"\",\r\n                \"certificateAuthority\": \"Microsoft Enterprise\",\r\n                \"isAutoRenewal\":  false,\r\n                \"renewBefore\": \"0\",\r\n                \"autoRegenerateEnabled\": false,\r\n                \"regenerateBeforeInDays\": \"0\",\r\n                \"caSettingName\": csr.get(\"ca_account\"),\r\n                \"certificateType\": \"\",\r\n                \"name\": str(csr.get('certificate_authority'))+\" CA connector\",\r\n                \"description\": \"\",\r\n                \"file\": \"\",\r\n                \"csrParameters\": {\r\n                    \"commonName\": csr.get(\"common_name\"),\r\n                    \"subjectAlternativeNames\": san,\r\n                    \"directoryNames\": csr.get(\"directory_name\"),\r\n                    \"dNSNames\": csr.get(\"dns\") or \"\",\r\n                    \"rfc822Names\": csr.get(\"email_san\") or \"\",\r\n                    \"iPAddresses\": csr.get(\"ip_address_san\") or \"\",\r\n                    \"registeredIDs\": csr.get(\"registered_id_san\"),\r\n                    \"uniformResourceIdentifiers\": csr.get(\"url_san\"),\r\n                    \"otherNames\": csr.get(\"other_name_san\"),\r\n                    \"organization\": csr.get(\"organization\") or \"\",\r\n                    \"organizationUnit\": csr.get(\"organization_unit\") or \"\",\r\n                    \"locality\": csr.get(\"locality\") or \"\",\r\n                    \"state\": csr.get(\"state\") or \"\",\r\n                    \"country\": csr.get(\"country\") or \"\",\r\n                    \"mailAddress\": csr.get(\"email_id\") or \"\",\r\n                    \"encryptedChallengePassword\": encrypt_password(csr.get(\"confirm_pass\")),\r\n                    \"hashFunction\": csr.get(\"hash_function\"),\r\n                    \"keyType\": csr.get(\"key_type\"),\r\n                    \"bitLength\": csr.get(\"bitLength\") ,\r\n                    \"postalCode\": \"\",\r\n                    \"certificateCategories\": [csr.get(\"certificate_category\")],\r\n                    \"enhancedSANTypes\": {\r\n                        \"directoryNames\": csr.get(\"directory_name\").split(\";\") if csr.get(\"directory_name\") else [],\r\n                        \"dNSNames\": san_dns,\r\n                        \"rfc822Names\": csr.get(\"email_san\").split(\",\") if csr.get(\"email_san\") else [],\r\n                        \"iPAddresses\": csr.get(\"ip_address_san\").split(\",\") if csr.get(\"ip_address_san\") else [],\r\n                        \"registeredIDs\": csr.get(\"registered_id_san\").split(\",\") if csr.get(\"registered_id_san\") else [],\r\n                        \"uniformResourceIdentifiers\": csr.get(\"url_san\").split(\",\") if csr.get(\"url_san\") else [],\r\n                        \"otherNames\": csr.get(\"other_name_san\").split(\",\") if csr.get(\"other_name_san\") else []\r\n                    }\r\n                },\r\n                \"certAttachments\": {\r\n                    \"userDefinedFileName\": \"\",\r\n                    \"comments\": \"\",\r\n                    \"fileName\": \"\",\r\n                    \"attachmentFile\": \"\"\r\n                },\r\n                \"certAttributes\": csr.get(\"certificate_attributes\"),\r\n                \"genericFields\": {\r\n                },\r\n                \"vendorSpecificDetails\": {\r\n                    \"templateName\": csr.get(\"template\")\r\n                }\r\n            },\r\n            \"certificateGroup\": {\r\n                \"name\": csr.get(\"certificate_group\")\r\n            },\r\n            \"fileIds\": []\r\n        }\r\n    }\r\n    \r\n    logger.info(str(payload))\r\n    # AVX::LOG(\"Payload-->>\"+str(payload))\r\n    response1 = requests.post(url=url, headers=headers, data=json.dumps(payload), verify=False)\r\n    response = response1.json().get(\"response\")\r\n    logger.info(\"caConnectorInfo - response\")\r\n    logger.info(response1.text)\r\n    # AVX::LOG(\"Response-->>\"+str(response))\r\n    if not response1:\r\n        logger.info(\"REASON \" +str(response1.reason))\r\n        AVX::LOG(\"REASON \" +str(response1.reason))\r\n        \r\n    return response\r\n\r\ndef cert_ca_connector_info_from_upload_csr(csr):\r\n    gateway_url, gateway_key = fetch_gateway_key()\r\n    url = \"{}avxapi/cert-ca-connectorinfo-save?&gwkey={}&gwsource=external\".format(gateway_url, gateway_key)\r\n    headers = {\r\n        \"sessionId\": '<%sessionId%>',\r\n        \"Content-Type\": \"application/json\",\r\n        \"Accept\": \"application/json\"\r\n    }\r\n    \r\n    san = [\"dNSNames\"]\r\n    \r\n    if csr.get(\"directory_name_san_r\"):\r\n        san.append(\"directoryNames\")\r\n    if csr.get(\"email_san_r\"):\r\n        san.append(\"rfc822Names\")\r\n    if csr.get(\"ip_address_san_r\"):\r\n        san.append(\"iPAddresses\")\r\n    if csr.get(\"registered_id_san_r\"):\r\n        san.append(\"registeredIDs\")\r\n    if csr.get(\"url_san_r\"):\r\n        san.append(\"uniformResourceIdentifiers\")\r\n    if csr.get(\"other_name_san_r\"):\r\n        san.append(\"otherNames\")\r\n    if len(san)>1:\r\n        san.insert(0,\"multiselect-all\")\r\n        \r\n    san_dns_r = []\r\n    \r\n    if csr.get(\"dns_r\"):\r\n        san_dns_r.append(csr.get(\"cn\"))\r\n        san_dns_r.extend(csr.get(\"dns_r\").split(\",\"))\r\n\r\n    payload = {\r\n        \"payload\" : {\r\n            \"csrGenerationSource\": \"appviewx\",\r\n            \"caConnectorInfo\": {\r\n                \"_id\": \"\",\r\n                \"certificateUuid\": \"\",\r\n                \"existingUuid\": \"\",\r\n                \"certificateAuthority\": \"<%cert_authority%>\",\r\n                \"isAutoRenewal\": true if csr.get(\"renew_auto_r\")==\"Yes\" else false,\r\n                \"renewBefore\":csr.get(\"start_renew_r\",\"0\"),\r\n                \"autoRegenerateEnabled\": true if csr.get(\"regen_auto_r\")==\"Yes\" else false,\r\n                \"regenerateBeforeInDays\": csr.get(\"start_regen_r\",\"0\"),\r\n                \"caSettingName\": csr.get(\"ca_account_r\"),\r\n                \"certificateType\": \"\",\r\n                \"name\": str(\"<%cert_authority%>\")+\" CA connector\",\r\n                \"description\": \"\",\r\n                \"file\": \"\",\r\n                \"csrParameters\": {\r\n                    \"commonName\": csr.get(\"cn\"),\r\n                    \"subjectAlternativeNames\": san,\r\n                    \"directoryNames\": csr.get(\"directory_name_r\"),\r\n                    \"dNSNames\": csr.get(\"dns_r\") or \"\",\r\n                    \"rfc822Names\": csr.get(\"email_san_r\") or \"\",\r\n                    \"iPAddresses\": csr.get(\"ip_address_r\") or \"\",\r\n                    \"registeredIDs\": csr.get(\"registered_id_san_r\"),\r\n                    \"uniformResourceIdentifiers\": csr.get(\"url_san_r\"),\r\n                    \"otherNames\": csr.get(\"other_name_san_r\"),\r\n                    \"organization\": csr.get(\"org_r\") or \"\",\r\n                    \"organizationUnit\": csr.get(\"org_unit_r\") or \"\",\r\n                    \"locality\": csr.get(\"locality_r\") or \"\",\r\n                    \"state\": csr.get(\"state_r\") or \"\",\r\n                    \"country\": csr.get(\"country_r\") or \"\",\r\n                    \"mailAddress\": csr.get(\"email_r\") or \"\",\r\n                    \"encryptedChallengePassword\": encrypted_pass or \"\",\r\n                    \"hashFunction\": csr.get(\"hash_function_r\"),\r\n                    \"keyType\": csr.get(\"key_type_r\"),\r\n                    \"bitLength\": csr.get(\"bit_length_r\"),\r\n                    \"postalCode\": \"\",\r\n                    \"certificateCategories\": [\"<%certificate_profile%>\", \"Client\"] if \"<%certificate_profile%>\" == \"Server\" else [\"<%certificate_profile%>\"],\r\n                    \"enhancedSANTypes\": {\r\n                        \"directoryNames\": csr.get(\"directory_name_r\").split(\";\") if csr.get(\"directory_name_r\") else [],\r\n                        \"dNSNames\":san_dns_r,\r\n                        \"rfc822Names\": csr.get(\"email_san_r\").split(\",\") if csr.get(\"email_san_r\") else [],\r\n                        \"iPAddresses\": csr.get(\"ip_address_san_r\").split(\",\") if csr.get(\"ip_address_san_r\") else [],\r\n                        \"registeredIDs\": csr.get(\"registered_id_san\").split(\",\") if csr.get(\"registered_id_san\") else [],\r\n                        \"uniformResourceIdentifiers\": csr.get(\"url_san\").split(\",\") if csr.get(\"url_san\") else [],\r\n                        \"otherNames\": csr.get(\"other_name_san_r\").split(\",\") if csr.get(\"other_name_san_r\") else []\r\n                    }\r\n                },\r\n                \"certAttachments\": {\r\n                    \"userDefinedFileName\": \"\",\r\n                    \"comments\": \"\",\r\n                    \"fileName\": \"\",\r\n                    \"attachmentFile\": \"\"\r\n                },\r\n                \"certAttributes\": {\r\n                },\r\n                \"genericFields\": {\r\n                },\r\n                \"vendorSpecificDetails\": {\r\n                    \"templateName\": csr.get(\"template_name_r\")\r\n                }\r\n            },\r\n            \"certificateGroup\": {\r\n                \"name\": \"<%assign_group%>\"\r\n            },\r\n            \"fileIds\": []\r\n        }\r\n    }\r\n    \r\n    logger.info(\"qqq\"+str(payload))\r\n    response = requests.post(url=url, headers=headers, data=json.dumps(payload), verify=False)\r\n    response = response.json().get(\"response\")\r\n    logger.info(response)\r\n    return response.get(\"uuid\")\r\n\r\ndef cert_submit_new_csr(uuid):\r\n    gateway_url, gateway_key = fetch_gateway_key()\r\n    url = \"{}avxapi/cert-submit-csr-hv?&gwkey={}&gwsource=external\".format(gateway_url, gateway_key)\r\n    headers = {\r\n        \"sessionId\": '<%sessionId%>',\r\n        \"Content-Type\": \"application/json\",\r\n        \"Accept\": \"application/json\"\r\n    }\r\n    payload =  {\r\n        \"payload\":{\r\n            \"certificateUuid\":uuid,\r\n            \"comments\":\"\",\r\n            \"action\":\"Submit\",\r\n            \"submit\":true\r\n        }\r\n    }\r\n    # AVX::LOG(\"PAYLOAD\"+str(payload))\r\n    response = requests.post(url=url, headers=headers, data=json.dumps(payload), verify=False)\r\n    response = response.json()\r\n    # AVX::LOG(\"Response\"+str(response))\r\n    logger.info(response)\r\n    return response\r\n\r\ndef check_strict_or_suggestive(csr):\r\n    \"\"\"\r\n    Function to Fetch the configured certificate group\r\n    \r\n    :return: \"Strict\" or \"Suggestive\"\r\n    \"\"\"\r\n    gateway_url, gateway_key = fetch_gateway_key()\r\n    cat = 'server'\r\n    if csr['certificate_category'] == 'Server':\r\n        cat = 'server'\r\n    elif csr['certificate_category'] == 'Client':\r\n        cat = 'client'\r\n    elif csr['certificate_category'] == 'Code Signing':\r\n        cat = 'codeSigning'\r\n        \r\n    url = \"{}avxapi/cert-get-policy-by-groupname?certificateGroupName={}&certificateCategory={}&gwkey={}&gwsource=external\".format(gateway_url, csr['certificate_group'], cat, gateway_key)\r\n\r\n    headers = {\"sessionId\": \"<%sessionId%>\", \"Content-Type\": \"application/json\"}\r\n    response = requests.get(url=url, headers=headers, verify=False)\r\n    response = response.json()\r\n    logger.info('check_strict_or_suggestive')\r\n    logger.info(response)\r\n    \r\n    return response.get(\"response\", {}).get(\"type\", '')\r\n    \r\ndef strict_cert_ca_connector_info(csr):\r\n    AVX::LOG(str(\"---STRICT---\"))\r\n    gateway_url, gateway_key = fetch_gateway_key()\r\n    cat = 'server'\r\n    if csr['certificate_category'] == 'Server':\r\n        cat = 'server'\r\n    elif csr['certificate_category'] == 'Client':\r\n        cat = 'client'\r\n    elif csr['certificate_category'] == 'Code Signing':\r\n        cat = 'codeSigning'\r\n        \r\n    # url = \"{}avxapi/cert-get-policy-by-groupname?certificateGroupName={}&certificateCategory={}&gwkey={}&gwsource=external\".format(gateway_url, csr['certificate_group'], cat, gateway_key)\r\n\r\n    # headers = {\"sessionId\": \"<%sessionId%>\", \"Content-Type\": \"application/json\"}\r\n    # response = requests.get(url=url, headers=headers, verify=False)\r\n    # response = response.json()\r\n\r\n    # data = {}\r\n    # for cert_policy_ca_acc_detail in response.get(\"response\").get(\"certificatePolicyCaAccountDetails\"):\r\n    #     if cert_policy_ca_acc_detail.get(\"certificateAuthority\") == csr[\"certificate_authority\"]:\r\n    #         csr_params = cert_policy_ca_acc_detail.get(\"certPolicyCsrParameter\")\r\n    #         data['common_name'] = csr_params.get(\"commonName\")\r\n    #         data['dns'] = csr_params.get('subjectAlternativeNames')\r\n    #         data['org'] = csr_params.get(\"organization\")\r\n    #         data['org_unit'] = csr_params.get('organizationUnit')\r\n    #         data['locality'] = csr_params.get('locality')\r\n    #         data['state'] = csr_params.get('state')\r\n    #         data['country'] = csr_params.get('country')\r\n    #         data['email'] = ','.join(csr_params.get('mailAddress'))\r\n    \r\n    \r\n    \r\n    url = \"{}avxapi/cert-ca-connectorinfo-save?&gwkey={}&gwsource=external\".format(gateway_url, gateway_key)\r\n    headers = {\r\n        \"sessionId\": '<%sessionId%>',\r\n        \"Content-Type\": \"application/json\",\r\n        \"Accept\": \"application/json\"\r\n    }\r\n    san = [\"dNSNames\"]\r\n    \r\n    if csr.get(\"directory_name\"):\r\n        san.append(\"directoryNames\")\r\n    if csr.get(\"email_san\"):\r\n        san.append(\"rfc822Names\")\r\n    if csr.get(\"ip_address\"):\r\n        san.append(\"iPAddresses\")\r\n    if csr.get(\"registered_id_san\"):\r\n        san.append(\"registeredIDs\")\r\n    if csr.get(\"url_san\"):\r\n        san.append(\"uniformResourceIdentifiers\")\r\n    if csr.get(\"other_name_san\"):\r\n        san.append(\"otherNames\")\r\n    if len(san)>1:\r\n        san.insert(0,\"multiselect-all\")\r\n        \r\n    san_dns = []\r\n    san_dns_r = []\r\n    \r\n    if csr.get(\"dns\"):\r\n        san_dns.append(csr.get(\"common_name\"))\r\n        san_dns.extend(csr.get(\"dns\", '').split(\",\"))\r\n    \r\n    \r\n    payload = {\r\n        \"payload\" : {\r\n            \"csrGenerationSource\": \"appviewx\",\r\n            \"caConnectorInfo\": {\r\n                \"_id\": \"\",\r\n                \"certificateUuid\": \"\",\r\n                \"existingUuid\": \"\",\r\n                \"certificateAuthority\": \"Microsoft Enterprise\",\r\n                \"isAutoRenewal\":  false,\r\n                \"renewBefore\":\"0\",\r\n                \"autoRegenerateEnabled\": false,\r\n                \"regenerateBeforeInDays\": \"0\",\r\n                \"caSettingName\": csr.get(\"ca_account\"),\r\n                \"certificateType\": \"\",\r\n                \"name\": str(csr['certificate_authority'])+\" CA connector\",\r\n                \"description\": \"\",\r\n                \"file\": \"\",\r\n                \"csrParameters\": {\r\n                    \"commonName\": csr.get(\"common_name\"),\r\n                    \"subjectAlternativeNames\": san,\r\n                    \"directoryNames\": csr.get(\"directory_name\", ''),\r\n                    \"dNSNames\": ','.join(csr.get(\"dns\", '').split(\",\")) or \"\",\r\n                    \"rfc822Names\": csr.get(\"email_san\") or \"\",\r\n                    \"iPAddresses\": csr.get(\"ip_address_san\") or \"\",\r\n                    \"registeredIDs\": csr.get(\"registered_id_san\") or \"\",\r\n                    \"uniformResourceIdentifiers\": csr.get(\"url_san\") or \"\",\r\n                    \"otherNames\": csr.get(\"other_name_san\") or \"\",\r\n                    \"organization\": csr.get(\"organization\", ''),\r\n                    \"organizationUnit\": csr.get(\"organization_unit\", ''),\r\n                    \"locality\": csr.get(\"locality\", ''),\r\n                    \"state\": csr.get(\"state\", ''),\r\n                    \"country\": csr.get(\"country\", ''),\r\n                    \"mailAddress\": csr.get(\"email_id\", ''),\r\n                    \"encryptedChallengePassword\": encrypt_password(\"confirm_pass\"),\r\n                    \"hashFunction\": csr.get(\"hash_function\"),\r\n                    \"keyType\": csr.get(\"key_type\"),\r\n                    \"bitLength\": csr.get(\"bit_length\"),\r\n                    \"postalCode\": \"\",\r\n                    \"certificateCategories\": [csr.get(\"certificate_category\")],\r\n                    \"enhancedSANTypes\": {\r\n                        \"directoryNames\": csr.get(\"directory_name\", '').split(\";\") if csr.get(\"directory_name\") else [],\r\n                        \"dNSNames\": san_dns,\r\n                        \"rfc822Names\": csr.get(\"email_san\", '').split(\",\") if csr.get(\"email_san\") else [],\r\n                        \"iPAddresses\": csr.get(\"ip_address_san\", '').split(\",\") if csr.get(\"ip_address_san\") else [],\r\n                        \"registeredIDs\": csr.get(\"registered_id_san\", '').split(\",\") if csr.get(\"registered_id_san\") else [],\r\n                        \"uniformResourceIdentifiers\": csr.get(\"url_san\", '').split(\",\") if csr.get(\"url_san\") else [],\r\n                        \"otherNames\": csr.get(\"other_name_san\", '').split(\",\") if csr.get(\"other_name_san\") else []\r\n                    }\r\n                },\r\n                \"certAttachments\": {\r\n                    \"userDefinedFileName\": \"\",\r\n                    \"comments\": \"\",\r\n                    \"fileName\": \"\",\r\n                    \"attachmentFile\": \"\"\r\n                },\r\n                \"certAttributes\": csr['certificate_attributes'],\r\n                \"genericFields\": {\r\n                },\r\n                \"vendorSpecificDetails\": {\r\n                    \"templateName\": csr.get(\"template\", '')\r\n                }\r\n            },\r\n            \"certificateGroup\": {\r\n                \"name\": csr.get(\"certificate_group\", '')\r\n            },\r\n            \"fileIds\": []\r\n        }\r\n    }\r\n    \r\n    logger.info(\"PAYLOAD--->>>\"+str(payload))\r\n    # AVX::LOG(\"***---Payload-->>\"+str(payload))\r\n    response1 = requests.post(url=url, headers=headers, data=json.dumps(payload), verify=False)\r\n    response = response1.json().get(\"response\")\r\n    logger.info(\"caConnectorInfo - Response\")\r\n    logger.info(response1.text)\r\n    # AVX::LOG(\"Response-->>\"+str(response))\r\n    return response\r\n\r\ndef strict_cert_ca_connector_info_upload_csr(csr):\r\n    AVX::LOG(str(\"---STRICT---\"))\r\n    gateway_url, gateway_key = fetch_gateway_key()\r\n    cat = 'server'\r\n    if '<%certificate_profile%>' == 'Server':\r\n        cat = 'server'\r\n    elif '<%certificate_profile%>' == 'Client':\r\n        cat = 'client'\r\n    elif '<%certificate_profile%>' == 'Code Signing':\r\n        cat = 'codeSigning'\r\n        \r\n    url = \"{}avxapi/cert-get-policy-by-groupname?certificateGroupName={}&certificateCategory={}&gwkey={}&gwsource=external\".format(gateway_url,'<%assign_group%>', cat, gateway_key)\r\n\r\n    headers = {\"sessionId\": \"<%sessionId%>\", \"Content-Type\": \"application/json\"}\r\n    response = requests.get(url=url, headers=headers, verify=False)\r\n    response = response.json()\r\n\r\n    data = {}\r\n    for cert_policy_ca_acc_detail in response.get(\"response\", {}).get(\"certificatePolicyCaAccountDetails\"):\r\n        if cert_policy_ca_acc_detail.get(\"certificateAuthority\") == \"<%cert_authority%>\":\r\n            csr_params = cert_policy_ca_acc_detail.get(\"certPolicyCsrParameter\")\r\n            data['cn'] = csr_params.get(\"commonName\")\r\n            data['dns_r'] = csr_params.get(\"subjectAlternativeNames\")\r\n            data['org_r'] = csr_params.get(\"organization\")\r\n            data['org_unit_r'] = csr_params.get('organizationUnit')\r\n            data['locality_r'] = csr_params.get('locality')\r\n            data['state_r'] = csr_params.get('state')\r\n            data['country_r'] = csr_params.get('country')\r\n            data['email_r'] = ','.join(csr_params.get('mailAddress',[]))\r\n    \r\n    \r\n    \r\n    url = \"{}avxapi/cert-ca-connectorinfo-save?&gwkey={}&gwsource=external\".format(gateway_url, gateway_key)\r\n    headers = {\r\n        \"sessionId\": '<%sessionId%>',\r\n        \"Content-Type\": \"application/json\",\r\n        \"Accept\": \"application/json\"\r\n    }\r\n    san = [\"dNSNames\"]\r\n    \r\n    if csr.get(\"directory_name_san_r\"):\r\n        san.append(\"directoryNames\")\r\n    if csr.get(\"email_san_r\"):\r\n        san.append(\"rfc822Names\")\r\n    if csr.get(\"ip_address_san_r\"):\r\n        san.append(\"iPAddresses\")\r\n    if csr.get(\"registered_id_san_r\"):\r\n        san.append(\"registeredIDs\")\r\n    if csr.get(\"url_san_r\"):\r\n        san.append(\"uniformResourceIdentifiers\")\r\n    if csr.get(\"other_name_san_r\"):\r\n        san.append(\"otherNames\")\r\n    if len(san)>1:\r\n        san.insert(0,\"multiselect-all\")\r\n        \r\n    san_dns = []\r\n    san_dns_r = []\r\n    \r\n    if csr.get(\"dns_r\"):\r\n        san_dns.append(csr.get(\"cn\"))\r\n        if data['dns_r']:\r\n            san_dns.extend(data['dns_r'])\r\n        san_dns.extend(csr.get(\"dns_r\", '').split(\",\"))\r\n    \r\n    \r\n    payload = {\r\n        \"payload\" : {\r\n            \"csrGenerationSource\": \"appviewx\",\r\n            \"caConnectorInfo\": {\r\n                \"_id\": \"\",\r\n                \"certificateUuid\": \"\",\r\n                \"existingUuid\": \"\",\r\n                \"certificateAuthority\": \"Microsoft Enterprise\",\r\n                \"isAutoRenewal\": true if csr.get(\"renew_auto_r\", '')==\"Yes\" else false,\r\n                \"renewBefore\":csr.get(\"start_renew_r\",\"0\"),\r\n                \"autoRegenerateEnabled\": true if csr.get(\"regen_auto_r\", '')==\"Yes\" else false,\r\n                \"regenerateBeforeInDays\": csr.get(\"start_regen_r\",\"0\"),\r\n                \"caSettingName\": csr.get(\"ca_account\"),\r\n                \"certificateType\": \"\",\r\n                \"name\": str(\"<%cert_authority%>\")+\" CA connector\",\r\n                \"description\": \"\",\r\n                \"file\": \"\",\r\n                \"csrParameters\": {\r\n                    \"commonName\": csr.get(\"cn\"),\r\n                    \"subjectAlternativeNames\": san,\r\n                    \"directoryNames\": csr.get(\"directory_name_san_r\"),\r\n                    \"dNSNames\": csr.get(\"dns_r\") or \"\",\r\n                    \"rfc822Names\": csr.get(\"email_san_r\") or \"\",\r\n                    \"iPAddresses\": csr.get(\"ip_address_san_r\") or \"\",\r\n                    \"registeredIDs\": csr.get(\"registered_id_san_r\"),\r\n                    \"uniformResourceIdentifiers\": csr.get(\"url_san_r\"),\r\n                    \"otherNames\": csr.get(\"other_name_san_r\"),\r\n                    \"organization\": data.get('org_r') if data.get(\"org_r\") else csr.get(\"org_r\"),\r\n                    \"organizationUnit\": data.get(\"org_unit_r\") if data.get(\"org_unit_r\") else csr.get(\"org_unit_r\"),\r\n                    \"locality\": data.get(\"locality_r\") if data.get(\"locality_r\") else csr.get(\"locality_r\"),\r\n                    \"state\": data.get(\"state_r\") if data.get(\"state_r\") else csr.get(\"state_r\"),\r\n                    \"country\": data.get(\"country_r\") if data.get(\"country_r\") else csr.get(\"country_r\"),\r\n                    \"mailAddress\": data.get(\"email_r\") if data.get(\"email_r\") else csr.get(\"email_r\"),\r\n                    \"encryptedChallengePassword\": encrypted_pass or \"\",\r\n                    \"hashFunction\": csr.get(\"hash_function_r\"),\r\n                    \"keyType\": csr.get(\"key_type_r\"),\r\n                    \"bitLength\": csr.get(\"bit_length_r\"),\r\n                    \"postalCode\": \"\",\r\n                    \"certificateCategories\": [\"<%certificate_profile%>\", \"Client\"] if \"<%certificate_profile%>\" == \"Server\" else [\"<%certificate_profile%>\"],\r\n                    \"enhancedSANTypes\": {\r\n                        \"directoryNames\": csr.get(\"directory_name_san_r\").split(\";\") if csr.get(\"directory_name_san_r\") else [],\r\n                        \"dNSNames\": san_dns,\r\n                        \"rfc822Names\": csr.get(\"email_san_r\").split(\",\") if csr.get(\"email_san_r\") else [],\r\n                        \"iPAddresses\": csr.get(\"ip_address_san_r\").split(\",\") if csr.get(\"ip_address_san_r\") else [],\r\n                        \"registeredIDs\": csr.get(\"registered_id_san_r\").split(\",\") if csr.get(\"registered_id_san_r\") else [],\r\n                        \"uniformResourceIdentifiers\": csr.get(\"url_san_r\").split(\",\") if csr.get(\"url_san_r\") else [],\r\n                        \"otherNames\": csr.get(\"other_name_san_r\").split(\",\") if csr.get(\"other_name_san_r\") else []\r\n                    }\r\n                },\r\n                \"certAttachments\": {\r\n                    \"userDefinedFileName\": \"\",\r\n                    \"comments\": \"\",\r\n                    \"fileName\": \"\",\r\n                    \"attachmentFile\": \"\"\r\n                },\r\n                \"certAttributes\": {\r\n                },\r\n                \"genericFields\": {\r\n                },\r\n                \"vendorSpecificDetails\": {\r\n                    \"templateName\": csr.get(\"template_name_r\")\r\n                }\r\n            },\r\n            \"certificateGroup\": {\r\n                \"name\": \"<%assign_group%>\"\r\n            },\r\n            \"fileIds\": []\r\n        }\r\n    }\r\n    \r\n    logger.info(\"PAYLOAD--->>>\"+str(payload))\r\n    # AVX::LOG(\"***---Payload-->>\"+str(payload))\r\n    response = requests.post(url=url, headers=headers, data=json.dumps(payload), verify=False)\r\n    response = response.json().get(\"response\")\r\n    logger.info(response)\r\n    # AVX::LOG(\"Response-->>\"+str(response))\r\n    return response\r\n\r\ndef get_app_connector_payload(uuid, device_name, device_type, certificate_push_location):\r\n    '''\r\n    Method to generate payload for app connector creation\r\n    '''\r\n    certificate_id = str(db.certificate.find_one({'uuid': uuid},{'_id':1})['_id'])\r\n    if device_type == 'LinuxServer':    \r\n        payload = {\r\n            \"payload\":\r\n             {\r\n            \"certificateId\": certificate_id,\r\n            \"selectedProfiles\": [device_name],\r\n            \"generalInformation\": {\r\n              \"category\": \"Server\",\r\n              \"vendor\": device_type,\r\n              \"name\": device_type + \" Connector_\" + str(random.randint(0,999)),\r\n              \"description\": \"\"\r\n            },\r\n            \"pushDetails\": {\r\n              \"scriptLocation\": \"appviewx\",\r\n              \"preValidationScriptPath\": \"\",\r\n              \"postValidationScriptPath\": \"\",\r\n              \"overwrite\": True,\r\n              \"pushAutomatically\": False,\r\n              \"securePush\": True\r\n            },\r\n            \"validationSettings\":{},\r\n            \"certificateDetails\": {\r\n              \"certificateType\": \"PEM-.crt\",\r\n              \"certificateLocation\": certificate_push_location + \"/certificate_push_\" + 'R<%requestId%>' + \".crt\",\r\n              \"keyLocation\": certificate_push_location + \"/certificate_push_\" + 'R<%requestId%>' + \".key\",\r\n              \"pushRootAndIntermediateCertificates\": False,\r\n              \"intermediateCertificateFileName\": []\r\n            }\r\n          }}\r\n    if device_type == 'Microsoft Server':\r\n        payload = {\r\n        \"payload\":{\r\n           \"generalInformation\":{\r\n              \"category\":\"Server\",\r\n              \"vendor\": device_type,\r\n              \"name\": device_type + \"_Connector_\" + str(random.randint(0,999)),\r\n              \"description\":\"\"\r\n           },\r\n           \"certificateDetails\":{\r\n              \"certificateType\":\"PEM-.crt\",\r\n              \"pushLocation\": certificate_push_location,\r\n              \"certificateFileName\":\"certificate_push_\" + 'R<%requestId%>' + \".crt\",\r\n              \"pfxPassword\":\"\",\r\n              \"aliasName\":\"\",\r\n              \"keyStorePassword\":\"\",\r\n              \"privateKeyFileName\":\"certificate_push_\" + 'R<%requestId%>' + \".key\",\r\n              \"pushRootAndIntermediateCertificates\":false,\r\n              \"intermediateCertificateFileName\":[]\r\n           },\r\n           \"pushDetails\":{\r\n              \"scriptLocation\":\"appviewx\",\r\n              \"preValidationScriptPath\":\"\",\r\n              \"postValidationScriptPath\":\"\",\r\n              \"overwrite\":False,\r\n              \"pushAutomatically\":False,\r\n              \"securePush\":False\r\n           },\r\n           \"certificateId\": certificate_id,\r\n           \"selectedProfiles\":[ device_name],\r\n           \"validationSettings\":{\r\n\r\n           }\r\n        }\r\n        }\r\n    if device_type == 'IIS':\r\n        payload = {\r\n        \"payload\": {\r\n            \"generalInformation\": {\r\n                \"category\": \"Server\",\r\n                \"vendor\": device_type,\r\n                \"name\": device_type + \"_Connector_\" + str(random.randint(0,999)),\r\n                \"description\": \"\"\r\n            },\r\n            \"certificateDetails\": {\r\n                \"locationType\": \"Certificate store\",\r\n                \"keyStoreLocation\": \"Personal\",\r\n                \"certificateType\": \"PKCS12-.pfx\",\r\n                \"certificateLocation\": \"\",\r\n                \"certificateFileName\": \"certificate_push_\" + 'R<%requestId%>' + \".pfx\",\r\n                \"pushRootAndIntermediateCertificates\": True,\r\n                \"intermediateCertificateFileName\": []\r\n            },\r\n            \"pushDetails\": {\r\n                \"scriptLocation\": \"appviewx\",\r\n                \"preValidationScriptPath\": \"\",\r\n                \"postValidationScriptPath\": \"\",\r\n                \"overwrite\": False,\r\n                \"pushAutomatically\": False,\r\n                \"securePush\": False\r\n            },\r\n            \"certificateId\": certificate_id,\r\n            \"selectedProfiles\": [device_name],\r\n            \"validationSettings\": {}\r\n        }\r\n        }\r\n    logger.info(\"APP Connector - Payload\")\r\n    logger.info(payload)\r\n    return payload\r\n\r\n\r\ndef create_app_connector(payload):\r\n    '''\r\n    Method to create app connector\r\n    '''\r\n    if payload:\r\n        gateway_url, gateway_key = fetch_gateway_key()\r\n        logger.info(\"***************************************create_app_connector - payload******************************\")\r\n        logger.info(payload)\r\n        app_ids = list()\r\n        url = \"{}avxapi/cert-application-connector-info-save?gwkey={}&gwsource=external\".format(gateway_url, gateway_key)\r\n        headers = {\"sessionId\":session_id, \"Content-Type\":\"application/json\"}\r\n        response = requests.post(url = url, headers = headers, data = json.dumps(payload), verify = False)\r\n        logger.info(response.text)\r\n        app_id =  response.json()['response'][0] if response.json()['response'] else ''\r\n        return app_id\r\n    \r\ndef push_cert_to_device(app_id):\r\n    '''\r\n    Method to push certificate to device\r\n    '''\r\n    gateway_url, gateway_key = fetch_gateway_key()\r\n    logger.info(\"push_cert_to_device\")\r\n    url = \"{}avxapi/cert-application-connector-push-to-device?gwkey={}&gwsource=external\".format(gateway_url, gateway_key)\r\n    headers = {\"sessionId\":session_id, \"Content-Type\":\"application/json\"}\r\n    payload = {\"payload\": { \"applicationConnectorIds\": [app_id], \"comments\": \"\"}}\r\n    logger.info(\"PUSH CERT TO DEVICE\")\r\n    logger.info(payload)\r\n    response = requests.post(url = url, headers = headers, data = json.dumps(payload), verify = False)\r\n    logger.info(response.content)\r\n\r\ndef get_request_object_ids(app_id):\r\n    \"\"\"\r\n    Function to get the requestObjectIds from database\r\n    \"\"\"\r\n    request_object_ids = [str(val.get(\"requestObjectId\")) for val in db.visualworkflow_request_inputoutput.find({\"output.data.requestData.fieldInfo.values\":app_id},{\"requestObjectId\":1})]\r\n    return request_object_ids\r\n\r\ndef get_request_id(uuid):\r\n    '''\r\n    Method to get the request id \r\n    '''\r\n    app_ids = [uuid]\r\n    request_ids = []\r\n    for value in app_ids:\r\n        req_obj_ids = get_request_object_ids(value)\r\n        request_id = [db.visualworkflow_request.find_one({\"_id\":ObjectId(val)},{\"requestId\":1}).get(\"requestId\") for val in req_obj_ids]\r\n        request_ids.append(max(request_id))\r\n    logger.info(\"GET REQUEST ID\")\r\n    logger.info(request_ids)\r\n    return request_ids\r\n\r\ndef get_status(req_id):\r\n    \"\"\"\r\n    Function to get the status of the given rquest\r\n    \"\"\"\r\n    status = db.visualworkflow_request.find_one({\"requestId\":req_id},{\"status_code\":1}).get(\"status_code\")\r\n    return status\r\n\r\n\r\ndef get_request_status(request_ids, cert_id):\r\n    '''\r\n    Method to get the request status\r\n    '''\r\n    success_list = list()\r\n    failed_list = list()\r\n    cert_uuid = str()\r\n    while len(success_list)+len(failed_list) != len(request_ids):\r\n        for val in request_ids:\r\n            if val not in success_list and val not in failed_list:\r\n                status = get_status(val)\r\n                if status == 1:\r\n                    success_list.append(val)\r\n                elif status != 0:\r\n                    failed_list.append(val)\r\n                else:\r\n                    time.sleep(20)\r\n    if cert_id:\r\n        cert_details = db.certificate.find_one({\"_id\": ObjectId(cert_id)},{\"commonName\": 1,\"serialNumber\": 1, 'uuid': 1})\r\n        cert_uuid = cert_details.get(\"uuid\",\"\")\r\n    AVX::LOG(cert_uuid)\r\n    for val in failed_list:\r\n        AVX::LOG(str(val) + \" Request Failed\")\r\n    for val in success_list:\r\n        AVX::LOG(str(val) + \" Request Success\")\r\n    logger.info(\"GET REQUEST STATUS\")\r\n    logger.info(success_list)\r\n    logger.info(failed_list)\r\n    if not failed_list:\r\n        return \"Success\", cert_uuid\r\n    return \"Failure\", cert_uuid\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    uuid_list = []\r\n    cert_uuid = str()\r\n    app_status = 'NA'\r\n    cert_status = 'Failure'\r\n    policy_type = check_strict_or_suggestive(certificate_details)\r\n    if certificate_details:\r\n        common_name = certificate_details.get('common_name')\r\n        if policy_type == \"Strict\":     \r\n            response = strict_cert_ca_connector_info(certificate_details)\r\n            if response:\r\n                uuid = response.get('uuid')\r\n                cert_id = response.get('id')\r\n                if uuid:\r\n                    resp = cert_submit_new_csr(uuid)\r\n                    request_ids = get_request_id(uuid)\r\n                    cert_status, cert_uuid = get_request_status(request_ids, cert_id)\r\n            else:\r\n                AVX::LOG(\"Kindly check the CSR inputs for the common name \"+str(certificate_details.get(\"common_name\")))\r\n            AVX::LOG(str(\"Since the certificate policy is Strict, the certificate policy CSR parameters have been updated for the following common name : \")+str(certificate_details.get(\"common_name\")))\r\n        else:\r\n            response = cert_ca_connector_info(certificate_details)\r\n            if response:\r\n                uuid = response.get('uuid')\r\n                cert_id = response.get('id')\r\n                if uuid:\r\n                    resp = cert_submit_new_csr(uuid)\r\n                    request_ids = get_request_id(uuid)\r\n                    cert_status, cert_uuid = get_request_status(request_ids, cert_id)\r\n            else:\r\n                AVX::LOG(\"Kindly check the inputs paramters for the common name : \"+str(certificate_details.get(\"common_name\")))\r\n\r\n        logger.info(cert_uuid)\r\n        logger.info(cert_status)\r\n        if cert_status == \"Success\":\r\n            device_name =  certificate_details['server_details'] if certificate_details['server_details'] != 'Add New Server' else certificate_details['server_name']\r\n            payload = get_app_connector_payload(cert_uuid, device_name, server_map[certificate_details[\"server_type\"]], certificate_details['certificate_location'])\r\n            app_id = create_app_connector(payload)\r\n            if certificate_details['creation_type'] == \"Create and Push Certificate\":\r\n                if app_id:\r\n                    push_cert_to_device(app_id)\r\n                    request_ids = get_request_id(app_id)\r\n                    app_status, dummy_uuid = get_request_status(request_ids, '')\r\n                else:\r\n                    app_status = \"Failure\"\r\n\r\n        status_list.append({'Common Name': common_name, 'Certificate Creation Status': cert_status, 'Certificate Push Status': app_status})\r\n\r\n\r\n            # AVX::LOG(str(resp))\r\n        # cert_ca_connector_info()\r\n    # elif '<%read_only%>':\r\n    #     for csr in <%read_only%>:\r\n    #         if policy_type == \"Strict\":\r\n    #             uuid = strict_cert_ca_connector_info_upload_csr(csr)\r\n    #             if uuid:\r\n    #                 resp = cert_submit_new_csr(uuid)\r\n    #             else:\r\n    #                 AVX::LOG(\"Kindly check the input parameters for the common name : \"+str(csr.get(\"cn\")))\r\n    #         else:\r\n    #             uuid = cert_ca_connector_info_from_upload_csr(csr)\r\n    #             if uuid:\r\n    #                 resp = cert_submit_new_csr(uuid)\r\n    #             else:\r\n    #                 AVX::LOG(\"Kindly check the input parameters for the common name : \"+str(csr.get(\"cn\")))\r\n            # AVX::LOG(str(resp))\r\n    AVX::OUTPUT({\"status_list\":status_list})\r\n",
    "http_method" : "POST",
    "action_id" : "run-script"
  } ],
  "subFlowID" : "IuQy5PCy",
  "taskGlobalData" : {
    "workflow_stop_1" : [ ],
    "script_2" : [ {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : "status_list",
      "key" : "status_list",
      "value" : "status_list",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "status_list",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    } ]
  },
  "type" : null,
  "level" : 2,
  "maxDepth" : -1,
  "input" : null,
  "workflowName" : "Copy of UPS Certificate Request Workflow-Sep14V1",
  "description" : "",
  "flowName" : "MS create certificates V1",
  "workflowType" : "Default",
  "subFlowType" : "Flow",
  "parentSubFlowID" : "XrwrzBIA",
  "logs" : [ {
    "user" : null,
    "time" : 1600347772515,
    "message" : "Flow created successfully with : MS create certificates V1 for the workflow : Copy of UPS Certificate Request Workflow-Sep14V1"
  }, {
    "user" : null,
    "time" : 1603181344796,
    "message" : "Flow created successfully with : MS create certificates V1 for the workflow : Copy of UPS Certificate Request Workflow-Sep14V1"
  }, {
    "user" : null,
    "time" : 1603309192840,
    "message" : "Flow created successfully with : MS create certificates V1 for the workflow : Copy of UPS Certificate Request Workflow-Sep14V1"
  } ],
  "workflowVersion" : "master"
}, {
  "tasks" : [ {
    "uniqueId" : null,
    "directoryUniqueId" : null,
    "source" : null,
    "tags" : [ ],
    "userName" : null,
    "objectType" : "TaskDetails",
    "sourceControlSettings" : null,
    "description" : null,
    "historyReferences" : [ "5e33fba028c04c1fc6cbc7f8", "5e0debd01a73b7686e35285b", "5e316deb01df96337532d22a", "5e0deade1a73b7686e352829", "5e33fb9628c04c1fc6cbc7f3", "5e2302eb5c621f7dcc619c62", "5e31362701df96337532c5df", "5e0dea441a73b7686e3527fb", "5e0deb671a73b7686e35283a" ],
    "usedHistory" : "64675603172eb7a9fac7d6dbad2780f0",
    "sampleInput" : null,
    "sampleOutput" : null,
    "contentTab" : null,
    "successiveTasks" : {
      "incoming" : [ {
        "taskId" : "script_2",
        "taskName" : null,
        "subflowId" : "e68t8hQe",
        "parentSubflowId" : "wXuhN9bL",
        "taskType" : "start",
        "flowName" : null,
        "linkType" : null
      } ]
    },
    "flowPathID" : null,
    "ignoredForStatusComputation" : true,
    "flowName" : null,
    "subFlowID" : null,
    "globalData" : null,
    "input" : [ ],
    "notificationMessage" : null,
    "ancestor" : null,
    "metaData" : {
      "taskHeader" : "stop",
      "hide" : false,
      "lock" : false,
      "successState" : 1,
      "failoverState" : 2,
      "taskScope" : null,
      "hideFromStageView" : false,
      "mode" : "Developer",
      "nature" : null,
      "lowCodeTask" : false
    },
    "parentSubFlowID" : null,
    "helpContent" : null,
    "rules" : { },
    "cleanUpFlowDetails" : { },
    "subFlowDetails" : [ ],
    "associatedRollbackWorkOrderDetail" : null,
    "_id" : null,
    "task_id" : "workflow_stop_1",
    "task_name" : "Stop flow",
    "task_type" : "stop",
    "task_category" : "stop",
    "component_type" : "others",
    "setNullProperties" : true,
    "folderName" : null,
    "sub_group" : null,
    "group_name" : null,
    "viewable_type" : "custom"
  }, {
    "uniqueId" : null,
    "directoryUniqueId" : null,
    "source" : null,
    "tags" : [ ],
    "userName" : null,
    "objectType" : "TaskDetails",
    "sourceControlSettings" : null,
    "description" : "",
    "historyReferences" : [ "5e0f16751a73b7686e354567", "5e83bc4de506e309b536d2e1", "5e0aefc440a4cc3fb25778da", "5e33fba028c04c1fc6cbc7f7", "5e9f18d59be4b065b9369324", "5ea28a703f46f614edf6ee13", "5e0f166d1a73b7686e35455b", "5ea28f3b3f46f614edf6ee32", "5e0afa0840a4cc3fb2577adf", "5f511941c3d56076c71b2b72", "5f3169a1abff755debc3a8b3", "5f46ab2fe876b464d0a7549f", "5e33fb9628c04c1fc6cbc7f2", "5e27e7fb8908b64a8b412f17", "5f46a9c5e876b464d0a75489", "5f63527875715a637ff082a1", "5e0f3bde1a73b7686e35475b", "5e83b7dce506e309b536d2be", "5e258fff8908b64a8b40dc1a", "5e27e2f18908b64a8b412e7e", "5f34c5b1abff755debc44cfc", "5e0deb671a73b7686e35283e", "5e26eb4a8908b64a8b410dbe", "5f626424c3d56076c71db24b", "5e35cd1028c04c1fc6cc009d", "5e83b389e506e309b536d2a8", "5e0f39c21a73b7686e354757", "5e0f3b9d1a73b7686e354759", "5e83a008e506e309b536d283", "5e9ee7c7005e355cf216fa46", "5e370d9487cbf51789153504", "5f348d63abff755debc44c02", "5e27e7398908b64a8b412efd", "5e83b9efe506e309b536d2cf", "5f635569c3d56076c71db42f", "5e33fb9f28c04c1fc6cbc7f5", "5f63560075715a637ff082b5", "5e341f3728c04c1fc6cbcb94", "5e35cdca28c04c1fc6cc00ad", "5f635355c3d56076c71db418", "5e0b152740a4cc3fb2577bdc", "5e0b105c40a4cc3fb2577b60", "5e258eaf8908b64a8b40dbfc", "5ea28dbe3f46f614edf6ee30", "5e0deadd1a73b7686e352825", "5e0f388f1a73b7686e354754", "5e33fb9128c04c1fc6cbc7f0", "5f3571d0abff755debc44e11", "5e8398d4e506e309b536d0ab", "5f6264a5c3d56076c71db24d", "5e0afa1040a4cc3fb2577ae4", "5e31362701df96337532c5e2", "5f51177ec3d56076c71b2b6e", "5e0aefbf40a4cc3fb25778d4", "5f357652653c601144c951f7", "5e0aef1a40a4cc3fb2577848", "5e0b10c140a4cc3fb2577b6f", "5e0aef1e40a4cc3fb257784d", "5e2302eb5c621f7dcc619c65", "5e8391d9e506e309b536d046", "5e0f37b41a73b7686e354752", "5f511908c3d56076c71b2b70", "5e3408c428c04c1fc6cbca5e", "5e27f6538908b64a8b412fad", "5f34918cd755510dac08568a", "5f6281a575715a637ff003e9", "5e83bcb2e506e309b536d2e4", "5e316deb01df96337532d22d", "5f5f7abbabff755debcbc16b", "5f635995c3d56076c71db448", "5e83b3fee506e309b536d2aa", "5ea2933e3f46f614edf6ee64", "5f626a3475715a637ff0035a", "5e258e678908b64a8b40dbf2", "5e0dead31a73b7686e35281e", "5e12ce941a73b7686e3577a8", "5e0deab31a73b7686e35280d", "5e34180b28c04c1fc6cbcac8", "5f5f9af475715a637fef0677", "5f51170dc3d56076c71b2b6c", "5e258d9f8908b64a8b40dbda", "5f36b87d653c601144c9f0b8", "5f62651875715a637ff00350", "5e0aef3c40a4cc3fb2577867", "5e0deabb1a73b7686e35280f", "5f62663ec3d56076c71db250", "5f46bd443919916a91e1396c", "5e0f37721a73b7686e354750", "5e83aec4e506e309b536d2a1", "5e0debd01a73b7686e35285f", "5f3570f7abff755debc44e0b", "5f357192abff755debc44e0d" ],
    "usedHistory" : "afc4f72bbb43df0cd41daff9e4b83aa7",
    "sampleInput" : null,
    "sampleOutput" : null,
    "contentTab" : null,
    "successiveTasks" : {
      "incoming" : [ {
        "taskId" : "workflow_start_1",
        "taskName" : null,
        "subflowId" : "e68t8hQe",
        "parentSubflowId" : "wXuhN9bL",
        "taskType" : "start",
        "flowName" : null,
        "linkType" : null
      } ],
      "success" : [ {
        "taskId" : "workflow_stop_1",
        "taskName" : null,
        "subflowId" : "e68t8hQe",
        "parentSubflowId" : "wXuhN9bL",
        "taskType" : "stop",
        "flowName" : null,
        "linkType" : null
      } ]
    },
    "flowPathID" : null,
    "ignoredForStatusComputation" : false,
    "flowName" : "Sectigo create certificates V1",
    "subFlowID" : "IiI49K52",
    "globalData" : null,
    "input" : [ {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "challenge_pwd",
      "value" : "<%challenge_pwd%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "challenge_pwd",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "username",
      "value" : "<%username%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "username",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "server_details",
      "value" : "<%server_details%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "server_details",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "certificate_types",
      "value" : "<%certificate_types%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "certificate_types",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "input_type",
      "value" : "<%input_type%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "input_type",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "password",
      "value" : "<%password%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "password",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "assign_group",
      "value" : "<%assign_group%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "assign_group",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "certificate_details",
      "value" : "<%certificate_details%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "certificate_details",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "iis_password",
      "value" : "<%iis_password%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "iis_password",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "street_address",
      "value" : "<%street_address%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "street_address",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "certificate_profile",
      "value" : "<%certificate_profile%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "certificate_profile",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "postal_code",
      "value" : "<%postal_code%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "postal_code",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "sessionId",
      "value" : "<%sessionId%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "sessionId",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "template_name",
      "value" : "<%template_name%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "template_name",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "status_list",
      "value" : "<%status_list%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "status_list",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "server_type",
      "value" : "<%server_type%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "server_type",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "ups_ui_link",
      "value" : "(~ups_ui_link~)",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "ups_ui_link",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "requestId",
      "value" : "<%requestId%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "requestId",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "linux_password",
      "value" : "<%linux_password%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "linux_password",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "san_multi",
      "value" : "<%san_multi%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "san_multi",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "san",
      "value" : "<%san%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "san",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "iis_username",
      "value" : "<%iis_username%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "iis_username",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "cert_authority",
      "value" : "<%cert_authority%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "cert_authority",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "linux_username",
      "value" : "<%linux_username%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "linux_username",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    } ],
    "notificationMessage" : {
      "0" : "CSR submission is being signed by our Certificate Authority. An email will be sent to requester when certificate is issued. You may exit from the tool at this point.",
      "1" : "",
      "2" : ""
    },
    "ancestor" : null,
    "metaData" : {
      "taskHeader" : "Script",
      "hide" : false,
      "lock" : false,
      "successState" : 1,
      "failoverState" : 2,
      "taskScope" : null,
      "hideFromStageView" : false,
      "mode" : "Developer",
      "nature" : "normal",
      "lowCodeTask" : false
    },
    "parentSubFlowID" : "XrwrzBIA",
    "helpContent" : null,
    "name" : "",
    "syncExecution" : true,
    "_id" : null,
    "task_id" : "script_2",
    "task_name" : "Sectigo Certificate Creation",
    "task_type" : "script",
    "task_category" : "script",
    "component_type" : "others",
    "setNullProperties" : true,
    "folderName" : "AppViewX certificates",
    "sub_group" : "script",
    "group_name" : "General",
    "viewable_type" : "custom",
    "scriptType" : "Python",
    "scriptContent" : "import sys\r\nimport json\r\nimport time\r\nimport random\r\nimport requests\r\nfrom bson import ObjectId\r\nfrom datetime import datetime\r\nimport ast\r\nimport os\r\nfrom configobj import ConfigObj\r\nsys.path.insert(0,AVX::HELPER)\r\nsys.path.insert(0,AVX::DEPENDENCIES)\r\nimport Decrypt_Python3\r\nimport appviewx\r\ndb = appviewx.db_connection().appviewx\r\nimport logger_util\r\nlogger = logger_util.get_logger('Sectigo Create Certificate - <%requestId%>')\r\ntrue = True\r\nfalse = False\r\nnull = None\r\n\r\nserver_map = {'Microsoft': \"Microsoft Server\", \"Linux\": \"LinuxServer\", \"Microsoft IIS\": \"IIS\"}\r\ncertificate_details = \"<%csr_parameters[<%certificate_details%>]%>\"\r\nstatus_list = \"<%status_list%>\"\r\nsession_id = \"<%sessionId%>\"\r\n\r\nimport base64\r\ndivision_id =\"\"\r\n\r\ninput_type = '<%input_type%>'\r\n\r\ndef encrypt_pass(password):\r\n    # password = \"<%challenge_pwd%>\"\r\n    \r\n    encrypted_pass = \"\"\r\n    \r\n    if password:\r\n        enc_pass = base64.b64encode(password.encode(\"utf-8\"))\r\n        encrypted_pass = str(enc_pass,\"utf-8\")\r\n    \r\n    return encrypted_pass\r\n\r\n\r\ndef fetch_gateway_key():\r\n    conf_content = {}\r\n    abs_path = os.path.dirname(os.path.abspath(__file__))\r\n    prop_file_path = abs_path + \"/../properties/appviewx.properties\"\r\n    config = ConfigObj(prop_file_path)\r\n    return config['GATEWAY_BASE_URL'], config['GATEWAY_KEY']\r\n\r\n\r\ndef cert_ca_connector_info(csr):\r\n    gateway_url, gateway_key = fetch_gateway_key()\r\n    url = \"{}avxapi/cert-ca-connectorinfo-save?&gwkey={}&gwsource=external\".format(gateway_url, gateway_key)\r\n    headers = {\r\n        \"sessionId\": '<%sessionId%>',\r\n        \"Content-Type\": \"application/json\",\r\n        \"Accept\": \"application/json\"\r\n    }\r\n    \r\n    san = []\r\n    san_dns = []\r\n    \r\n    # if csr.get(\"san\", ''):\r\n    #     san.append(\"dNSNames\")\r\n    #     if operation_type == 'Create':\r\n    #         san_dns.append(csr.get(\"cert_cn\", ''))\r\n    #     san_dns.extend(csr.get(\"dns\", '').split(\",\"))\r\n    \r\n    # certificateCategories = \"\"\r\n    # if operation_type == 'Create':\r\n    #     certificateCategories = [\"<%certificate_profile%>\", \"Client\"] if \"<%certificate_profile%>\" == \"Server\" else [\"<%certificate_profile%>\"]\r\n    # else:\r\n    #     cert_profile = csr.get('cert_profile_regen')\r\n    #     certificateCategories = [cert_profile, \"Client\"] if cert_profile == \"Server\" else [cert_profile]\r\n    san = \"\"\r\n    if \"Multi-Domain\" in \"<%certificate_types%>\":\r\n        san = \"<%san_multi%>\".split(\",\")\r\n    if \"Unified\" in \"<%certificate_types%>\":\r\n        san = \"<%san%>\".split(\",\")\r\n    logger.info(\"*****SAN : \"+str(san))\r\n    payload = {\r\n        \"payload\" : {\r\n            \"csrGenerationSource\": \"appviewx\",\r\n            \"caConnectorInfo\": {\r\n                \"_id\": \"\",\r\n                \"certificateUuid\": \"\",\r\n                \"existingUuid\": \"\",\r\n                \"certificateAuthority\": csr.get('certificate_authority'),\r\n                \"isAutoRenewal\": false ,\r\n                \"renewBefore\": \"0\",\r\n                \"autoRegenerateEnabled\": false ,\r\n                \"regenerateBeforeInDays\": \"0\",\r\n                \"caSettingName\": csr.get(\"ca_account\") or \"\",\r\n                \"certificateType\": \"<%certificate_types%>\" or \"<%template_name%>\",\r\n                \"name\": csr.get('certificate_authority', '') +\" <%certificate_types%>\" if \"<%certificate_types%>\" else \" <%template_name%>\" +\" connector\",\r\n                \"description\": \"\",\r\n                \"file\": \"\",\r\n                \"csrParameters\": {\r\n                    \"commonName\": csr.get(\"common_name\"),\r\n                    \"subjectAlternativeNames\": \",\".join(san) if san else csr.get(\"san\", '') ,\r\n                    \"dNSNames\": csr.get(\"dns\", ''),\r\n                    \"organization\": csr.get(\"organization\") or \"\",\r\n                    \"organizationUnit\": csr.get(\"organization_unit\") or \"\",\r\n                    \"streetAddress\":\"<%street_address%>\",\r\n                    \"postalCode\":\"<%postal_code%>\",\r\n                    \"locality\": csr.get(\"locality\") or \"\",\r\n                    \"state\": csr.get(\"state\") or \"\",\r\n                    \"country\": csr.get(\"country\") or \"\",\r\n                    \"mailAddress\": csr.get(\"email_id\") or \"\",\r\n                    \"encryptedChallengePassword\": encrypt_pass(csr.get(\"challenge_pwd\", '')),\r\n                    \"hashFunction\": csr.get(\"hash_function\"),\r\n                    \"keyType\": csr.get(\"key_type\"),\r\n                    \"bitLength\": csr.get(\"bit_length\"),\r\n                    \"certificateCategories\": [csr.get(\"certificate_category\", '')],\r\n                    \"enhancedSANTypes\": {\r\n                        \"dNSNames\" : san if san else csr.get(\"san\", \"\").split()\r\n                    }\r\n                },\r\n                \"certAttachments\": {\r\n                    \"userDefinedFileName\": \"\",\r\n                    \"comments\": \"\",\r\n                    \"fileName\": \"\",\r\n                    \"attachmentFile\": \"\"\r\n                },\r\n                \"certAttributes\": csr.get(\"certificate_attributes\"),\r\n                \"genericFields\": {\r\n                },\r\n                \"validityInDays\": 365*int(csr.get(\"validity\")),\r\n                \"vendorSpecificDetails\": {\r\n                    \"orderId\": \"\",\r\n                    \"numberServer\": \"1\" if 'Wildcard' in \"<%certificate_types%>\" else \"\",#csr.get(\"number_of_server\", \"\"),\r\n                    \"serverType\": csr.get(\"website_name\", \"\")\r\n                }\r\n            },\r\n            \"certificateGroup\": {\r\n                \"name\": csr.get('certificate_group')\r\n            },\r\n            \"fileIds\": []\r\n        }\r\n    }\r\n    if 'Multi-Domain' in csr.get(\"certificate_type\", ''):\r\n        payload['payload']['caConnectorInfo']['csrParameters']['enhancedSANTypes'].update({'dNSNames': csr.get('san').split(',') if csr.get(\"san\",\"\").split(\",\") else []})\r\n    AVX::LOG(\"Save CA Connector info payload:\"+str(payload))\r\n    logger.info(\"Save CA Connector info payload:\"+str(payload))\r\n    response = requests.post(url=url, headers=headers, data=json.dumps(payload), verify=False)\r\n    if response.status_code in (\"407\", 407):\r\n        time.sleep(2)\r\n        cert_ca_connector_info(csr)\r\n    logger.info(response.json())\r\n    logger.info(\"Save CA Connector info response:\"+str(response))\r\n    response = response.json().get(\"response\")\r\n    logger.info(\"Save CA Connector info response:\"+str(response))\r\n    return response\r\n    \r\ndef bulk_cert_ca_connector_info(csr):\r\n    gateway_url, gateway_key = fetch_gateway_key()\r\n    url = \"{}avxapi/cert-ca-connectorinfo-save?&gwkey={}&gwsource=external\".format(gateway_url, gateway_key)\r\n    headers = {\r\n        \"sessionId\": '<%sessionId%>',\r\n        \"Content-Type\": \"application/json\",\r\n        \"Accept\": \"application/json\"\r\n    }\r\n    \r\n    san = []\r\n    san_dns = []\r\n    \r\n    # if csr.get(\"san\", ''):\r\n    #     san.append(\"dNSNames\")\r\n    #     if operation_type == 'Create':\r\n    #         san_dns.append(csr.get(\"cert_cn\", ''))\r\n    #     san_dns.extend(csr.get(\"dns\", '').split(\",\"))\r\n    \r\n    # certificateCategories = \"\"\r\n    # if operation_type == 'Create':\r\n    #     certificateCategories = [\"<%certificate_profile%>\", \"Client\"] if \"<%certificate_profile%>\" == \"Server\" else [\"<%certificate_profile%>\"]\r\n    # else:\r\n    #     cert_profile = csr.get('cert_profile_regen')\r\n    #     certificateCategories = [cert_profile, \"Client\"] if cert_profile == \"Server\" else [cert_profile]\r\n        \r\n    payload = {\r\n        \"payload\" : {\r\n            \"csrGenerationSource\": \"appviewx\",\r\n            \"caConnectorInfo\": {\r\n                \"_id\": \"\",\r\n                \"certificateUuid\": \"\",\r\n                \"existingUuid\": \"\",\r\n                \"certificateAuthority\": csr.get('certificate_authority'),\r\n                \"isAutoRenewal\": false ,\r\n                \"renewBefore\": \"0\",\r\n                \"autoRegenerateEnabled\": false ,\r\n                \"regenerateBeforeInDays\": \"0\",\r\n                \"caSettingName\": csr.get(\"ca_account\") or \"\",\r\n                \"certificateType\": \"<%template_name%>\",\r\n                \"name\": csr.get('certificate_authority', '') +\" <%template_name%>\" +\" connector\",\r\n                \"description\": \"\",\r\n                \"file\": \"\",\r\n                \"csrParameters\": {\r\n                    \"commonName\": csr.get(\"common_name\"),\r\n                    \"subjectAlternativeNames\": \"\" ,\r\n                    \"dNSNames\": csr.get(\"dns\", ''),\r\n                    \"organization\": csr.get(\"organization\") or \"\",\r\n                    \"organizationUnit\": csr.get(\"organization_unit\") or \"\",\r\n                    \"streetAddress\":\"<%street_address%>\",\r\n                    \"postalCode\":\"<%postal_code%>\",\r\n                    \"locality\": csr.get(\"locality\") or \"\",\r\n                    \"state\": csr.get(\"state\") or \"\",\r\n                    \"country\": csr.get(\"country\") or \"\",\r\n                    \"mailAddress\": csr.get(\"email_id\") or \"\",\r\n                    \"encryptedChallengePassword\": encrypt_pass(csr.get(\"challenge_pwd\", '')),\r\n                    \"hashFunction\": csr.get(\"hash_function\"),\r\n                    \"keyType\": csr.get(\"key_type\"),\r\n                    \"bitLength\": csr.get(\"bit_length\"),\r\n                    \"certificateCategories\": [csr.get(\"certificate_category\", '')],\r\n                    \"enhancedSANTypes\": {\r\n                        \"dNSNames\" : csr.get(\"san\",\"\").split(\",\") if \"Unified\" in \"<%template_name%>\" else []\r\n                    }\r\n                },\r\n                \"certAttachments\": {\r\n                    \"userDefinedFileName\": \"\",\r\n                    \"comments\": \"\",\r\n                    \"fileName\": \"\",\r\n                    \"attachmentFile\": \"\"\r\n                },\r\n                \"certAttributes\": csr.get(\"certificate_attributes\"),\r\n                \"genericFields\": {\r\n                },\r\n                \"validityInDays\": 365*int(csr.get(\"validity\")),\r\n                \"vendorSpecificDetails\": {\r\n                    \"orderId\": \"\",\r\n                    \"numberServer\": csr.get(\"number_of_server\", \"\"),\r\n                    \"serverType\": csr.get(\"website_name\", \"\")\r\n                }\r\n            },\r\n            \"certificateGroup\": {\r\n                \"name\": csr.get('certificate_group')\r\n            },\r\n            \"fileIds\": []\r\n        }\r\n    }\r\n    if 'Multi-Domain' in csr.get(\"certificate_type\", ''):\r\n        payload['payload']['caConnectorInfo']['csrParameters']['enhancedSANTypes'].update({'dNSNames': csr.get('san').split(',') if csr.get(\"san\") else []})\r\n\r\n    logger.info(\"Save CA Connector info payload:\"+str(payload))\r\n    response = requests.post(url=url, headers=headers, data=json.dumps(payload), verify=False)\r\n    logger.info(response.json())\r\n    if response.status_code in (\"407\", 407):\r\n        time.sleep(2)\r\n        bulk_cert_ca_connector_info(csr)\r\n    logger.info(\"Save CA Connector info response:\"+str(response))\r\n    response = response.json().get(\"response\")\r\n    logger.info(\"Save CA Connector info response:\"+str(response))\r\n    return response\r\n\r\n\r\ndef cert_ca_connector_info_from_upload_csr(csr):\r\n    gateway_url, gateway_key = fetch_gateway_key()\r\n    url = \"{}avxapi/cert-ca-connectorinfo-save?&gwkey={}&gwsource=external\".format(gateway_url, gateway_key)\r\n    headers = {\r\n        \"sessionId\": '<%sessionId%>',\r\n        \"Content-Type\": \"application/json\",\r\n        \"Accept\": \"application/json\"\r\n    }\r\n    \r\n    san = []\r\n    san_dns = []\r\n    \r\n    if csr.get(\"dns_uploadcsr\"):\r\n        san.append(\"multiselect-all\")\r\n        san.append(\"dNSNames\")\r\n        if operation_type == 'Create':\r\n            san_dns.append(csr.get(\"cn_uploadcsr\"))\r\n        san_dns.extend(csr.get(\"dns_uploadcsr\").split(\",\"))\r\n    \r\n    \r\n    certificateCategories = \"\"\r\n    if operation_type == 'Create':\r\n        certificateCategories = [\"<%certificate_profile%>\", \"Client\"] if \"<%certificate_profile%>\" == \"Server\" else [\"<%certificate_profile%>\"]\r\n    else:\r\n        cert_profile = csr.get('cert_profile_regen_uploadcsr')\r\n        certificateCategories = [cert_profile, \"Client\"] if cert_profile == \"Server\" else [cert_profile]\r\n    \r\n    payload = {\r\n        \"payload\" : {\r\n            \"csrGenerationSource\": \"appviewx\",\r\n            \"caConnectorInfo\": {\r\n                \"_id\": \"\",\r\n                \"certificateUuid\": \"\",\r\n                \"existingUuid\": \"\",\r\n                \"certificateAuthority\": \"<%cert_authority%>\",\r\n                \"isAutoRenewal\": false if csr.get(\"renew_uploadcsr\") == \"No\" else true,\r\n                \"renewBefore\": csr.get(\"renew_before_uploadcsr\",\"0\"),\r\n                \"autoRegenerateEnabled\": false if csr.get(\"regen_uploadcsr\") == \"No\" else true,\r\n                \"regenerateBeforeInDays\": csr.get(\"regen_before_uploadcsr\",\"0\"),\r\n                \"caSettingName\": csr.get(\"ca_account_uploadcsr\"),\r\n                \"certificateType\": csr.get(\"cert_type_uploadcsr\"),\r\n                \"name\": \"<%cert_authority%> \"+csr.get(\"cert_type_uploadcsr\")+\" connector\",\r\n                \"description\": \"\",\r\n                \"file\": \"\",\r\n                \"csrParameters\": {\r\n                    \"commonName\": csr.get(\"cn_uploadcsr\"),\r\n                    \"subjectAlternativeNames\": san,\r\n                    \"dNSNames\": csr.get(\"dns_uploadcsr\") or \"\",\r\n                    \"streetAddress\" : csr.get(\"org_address_uploadcsr\"),\r\n                    \"organization\": csr.get(\"org_uploadcsr\") or \"\",\r\n                    \"organizationUnit\": csr.get(\"org_unit_uploadcsr\") or \"\",\r\n                    \"locality\": csr.get(\"city_uploadcsr\") or \"\",\r\n                    \"state\": csr.get(\"state_uploadcsr\") or \"\",\r\n                    \"country\": csr.get(\"country_uploadcsr\") or \"\",\r\n                    \"mailAddress\": csr.get(\"email_uploadcsr\") or \"\",\r\n                    \"encryptedChallengePassword\": \"\",#check challenge password\r\n                    \"hashFunction\": csr.get(\"hash_uploadcsr\"),\r\n                    \"keyType\": csr.get(\"key_uploadcsr\"),\r\n                    \"bitLength\": csr.get(\"bit_uploadcsr\"),\r\n                    \"postalCode\": csr.get(\"zip_uploadcsr\"),\r\n                    \"certificateCategories\": certificateCategories,\r\n                    \"enhancedSANTypes\": {\r\n                        \"dNSNames\": san_dns,\r\n                    }\r\n                },\r\n                \"certAttachments\": {\r\n                    \"userDefinedFileName\": \"\",\r\n                    \"comments\": \"\",\r\n                    \"fileName\": \"\",\r\n                    \"attachmentFile\": \"\"\r\n                },\r\n                \"certAttributes\": {\r\n                },\r\n                \"genericFields\": {\r\n                },\r\n                \"validityInDays\": 365*int(csr.get(\"validity_uploadcsr\")),\r\n                \"vendorSpecificDetails\": {\r\n                    \"orderId\": \"\",\r\n                    \"numberServer\":csr.get(\"number_of_server_uploadcsr\"),\r\n                    \"serverType\": csr.get(\"server_type_uploadcsr\")\r\n                }\r\n            },\r\n            \"certificateGroup\": {\r\n                \"name\": \"<%assign_group%>\"\r\n            },\r\n            \"fileIds\": []\r\n        }\r\n    }\r\n    \r\n    logger.info(\"Save CA Connector info payload:\"+str(payload))\r\n    response = requests.post(url=url, headers=headers, data=json.dumps(payload), verify=False)\r\n    logger.info(response.json())\r\n    if response.status_code in (\"407\", 407):\r\n        time.sleep(2)\r\n        cert_ca_connector_info_from_upload_csr(csr)\r\n    if response.status_code != 200:\r\n        AVX::LOG(\"For the given common name \"+str(csr.get(\"cn_uploadcsr\"))+\" \"+str(response.reason))\r\n        return ''\r\n    logger.info(\"Save CA Connector info response:\"+str(response.json()))\r\n    response = response.json().get(\"response\")\r\n    logger.info(\"Save CA Connector info response:\"+str(response))\r\n    return response.get(\"uuid\")\r\n\r\n\r\ndef cert_submit_new_csr(uuid):\r\n    gateway_url, gateway_key = fetch_gateway_key()\r\n    url = \"{}avxapi/cert-submit-csr-hv?&gwkey={}&gwsource=external\".format(gateway_url, gateway_key)\r\n    headers = {\r\n        \"sessionId\": '<%sessionId%>',\r\n        \"Content-Type\": \"application/json\",\r\n        \"Accept\": \"application/json\"\r\n    }\r\n    payload =  {\r\n        \"payload\":{\r\n            \"certificateUuid\":uuid,\r\n            \"comments\":\"\",\r\n            \"action\":\"Submit\",\r\n            \"submit\":true\r\n        }\r\n    }\r\n    \r\n    logger.info('Cert Submit CSR Payload'+str(payload))\r\n    response = requests.post(url=url, headers=headers, data=json.dumps(payload), verify=False)\r\n    if response.status_code in (\"407\", 407):\r\n        time.sleep(2)\r\n        cert_submit_new_csr(uuid)\r\n    response = response.json()\r\n    \r\n    logger.info(\"Cert Submit CSR response\"+str(response))\r\n    return response\r\n\r\n\r\n# def get_divisionId(group_name, ca_setting_name, ca_division):\r\n#     digicert_divisions = []\r\n#     gateway_url, gateway_key = fetch_gateway_key()\r\n#     url = \"{}avxapi/cert-ca-settings-getbycaname?certificateAuthority=DigiCert&certificateCategory=Server&certificateGroup={}&gwkey={}&gwsource=external\".format(\r\n#     gateway_url, group_name, gateway_key)\r\n#     headers = {\r\n#         \"sessionId\": '<%sessionId%>',\r\n#         \"Content-Type\": \"application/json\",\r\n#         \"Accept\": \"application/json\"\r\n#     }\r\n#     response = requests.get(url=url, headers=headers, verify=False)\r\n#     response = response.json().get(\"response\")\r\n#     for setting in response:\r\n#         if setting['name'] == ca_setting_name:\r\n#             cert_divisions = setting['rbacCertTypesHierarchy']['divisions']\r\n#             for div in cert_divisions:\r\n#                 if div['name'] == ca_division:\r\n#                     return div['id']\r\n                \r\n#     return \"\"\r\n    \r\n\r\ndef trigger_regenerate_api(old_uuid, new_uuid):\r\n    gateway_url, gateway_key = fetch_gateway_key()\r\n    url_submit_csr = \"{}avxapi/cert-lifecycle?gwkey={}&gwsource=external\".format(gateway_url, gateway_key)\r\n    payload_data = {\"payload\": {\"action\":\"Regenerate\",\"certificateUuid\":new_uuid,\"sourceUuid\":old_uuid,\"comments\":\"\"}}\r\n    logger.info(\"Regenerate payload:\"+str(payload_data))\r\n    headers = {\"sessionId\":'<%sessionId%>',\"Content-Type\": \"application/json\", \"Accept\": \"application/json\"}\r\n    response = requests.post(url_submit_csr, headers = headers, data = json.dumps(payload_data), verify = False)\r\n    if response.status_code in (\"407\", 407):\r\n        time.sleep(2)\r\n        trigger_regenerate_api(old_uuid, new_uuid)\r\n    #submit_csr_response = json.loads(submit_csr_response.text)\r\n    logger.info(\"Trigger regenerate response\"+str(response))\r\n    if response.status_code == 200:\r\n        return True\r\n    else:\r\n        return False\r\n    # if submit_csr_response.get(\"response\").get(\"viewResponse\").get(\"message\") == \"Cert Submit triggered successfully.\":\r\n    #     logger.info('-------- Cert Submit triggered successfully. --------')\r\n    #     AVX::LOG(\"Cert Submit triggered successfully.\")\r\n    #     return True\r\n    # else:\r\n    #     logger.info('----- Cert Submit trigger failed. ------')\r\n    #     logger.info(submit_csr_response.get(\"response\").get(\"viewResponse\").get(\"message\"))\r\n    #     AVX::LOG(\"Cert Submit trigger failed.\")\r\n    #     return False\r\n\r\n\r\ndef strict_cert_ca_connector_info(csr):\r\n    AVX::LOG(str(\"---STRICT---\"))\r\n    logger.info(\"---Strict---\")\r\n    gateway_url, gateway_key = fetch_gateway_key()\r\n    cat = 'server'\r\n    if '<%certificate_profile%>' == 'Server':\r\n        cat = 'server'\r\n    elif '<%certificate_profile%>' == 'Client':\r\n        cat = 'client'\r\n    elif '<%certificate_profile%>' == 'Code Signing':\r\n        cat = 'codeSigning'\r\n        \r\n    url = \"{}avxapi/cert-get-policy-by-groupname?certificateGroupName={}&certificateCategory={}&gwkey={}&gwsource=external\".format(gateway_url,'<%assign_group%>', cat, gateway_key)\r\n\r\n    headers = {\"sessionId\": \"<%sessionId%>\", \"Content-Type\": \"application/json\"}\r\n    response = requests.get(url=url, headers=headers, verify=False)\r\n    if response.status_code in (\"407\", 407):\r\n        time.sleep(2)\r\n        strict_cert_ca_connector_info(csr)\r\n    response = response.json()\r\n\r\n    data = {}\r\n    for cert_policy_ca_acc_detail in response.get(\"response\").get(\"certificatePolicyCaAccountDetails\"):\r\n        if cert_policy_ca_acc_detail.get(\"certificateAuthority\") == \"<%cert_authority%>\":\r\n            csr_params = cert_policy_ca_acc_detail.get(\"certPolicyCsrParameter\")\r\n\r\n            data['org'] = csr_params.get(\"organization\")\r\n            data['org_unit'] = csr_params.get('organizationUnit')\r\n            data['city'] = csr_params.get('locality')\r\n            data['state'] = csr_params.get('state')\r\n            data['country'] = csr_params.get('country')\r\n            data['email'] = ','.join(csr_params.get('mailAddress'))\r\n            data['subject_alternative_names'] = csr_params.get('subjectAlternativeNames')\r\n            \r\n            if cat == \"client\":\r\n                data['rfc822Names'] = csr_params.get('subjectAlternativeNames')\r\n    \r\n    \r\n    \r\n    url = \"{}avxapi/cert-ca-connectorinfo-save?&gwkey={}&gwsource=external\".format(gateway_url, gateway_key)\r\n    headers = {\r\n        \"sessionId\": '<%sessionId%>',\r\n        \"Content-Type\": \"application/json\",\r\n        \"Accept\": \"application/json\"\r\n    }\r\n    san = []\r\n    san_dns = []\r\n    \r\n    if csr.get(\"dns\"):\r\n        san.append(\"multiselect-all\")\r\n        san.append(\"dNSNames\")\r\n        if operation_type == 'Create':\r\n            san_dns.append(csr.get(\"cert_cn\"))\r\n            san_dns.append(',')\r\n        san_dns.extend(csr.get(\"dns\").split(\",\"))\r\n    \r\n    certificateCategories = \"\"\r\n    if operation_type == 'Create':\r\n        certificateCategories = [\"<%certificate_profile%>\", \"Client\"] if \"<%certificate_profile%>\" == \"Server\" else [\"<%certificate_profile%>\"]\r\n    else:\r\n        cert_profile = csr.get('cert_profile_regen')\r\n        certificateCategories = [cert_profile, \"Client\"] if cert_profile == \"Server\" else [cert_profile]\r\n    \r\n    \r\n    \r\n    payload = {\r\n        \"payload\" : {\r\n            \"csrGenerationSource\": \"appviewx\",\r\n            \"caConnectorInfo\": {\r\n                \"_id\": \"\",\r\n                \"certificateUuid\": \"\",\r\n                \"existingUuid\": \"\",\r\n                \"certificateAuthority\": \"<%cert_authority%>\",\r\n                \"isAutoRenewal\": false if csr.get(\"renew_automatically\") == \"No\" else true,\r\n                \"renewBefore\": csr.get(\"renew_before\",\"0\"),\r\n                \"autoRegenerateEnabled\": false if csr.get(\"regen_automatically\") == \"No\" else true,\r\n                \"regenerateBeforeInDays\": csr.get(\"regen_before\",\"0\"),\r\n                \"caSettingName\": csr.get(\"ca_account\") or \"\",\r\n\r\n                \"certificateType\": csr.get(\"cert_type\") or \"\",\r\n                \"name\": \"<%cert_authority%> \"+csr.get(\"cert_type\")+\" connector\",\r\n                \"description\": \"\",\r\n                \"file\": \"\",\r\n                \"csrParameters\": {\r\n                    \"commonName\": csr.get(\"cert_cn\"),\r\n                    \"subjectAlternativeNames\": san,\r\n                    \"dNSNames\": csr.get(\"dns\") or \"\",\r\n\r\n                    \"streetAddress\" : csr.get(\"org_address\"),\r\n                    \"organization\": data.get('org') if data.get(\"org\") else csr.get(\"org\"),\r\n                    \"organizationUnit\": data.get(\"org_unit\") if data.get(\"org_unit\") else csr.get(\"org_unit\"),\r\n                    \"locality\": data.get(\"city\") if data.get(\"city\") else csr.get(\"city\"),\r\n                    \"state\": data.get(\"state\") if data.get(\"state\") else csr.get(\"state\"),\r\n                    \"country\": data.get(\"country\") if data.get(\"country\") else csr.get(\"country\"),\r\n                    \"postalCode\": csr.get(\"zip_code\") or \"\",\r\n                    \"mailAddress\": data.get(\"email\") if data.get(\"email\") else csr.get(\"email\"),\r\n                    \"encryptedChallengePassword\": encrypt_pass(csr.get(\"challenge_pwd\")) or \"\",\r\n                    \"hashFunction\": csr.get(\"hash_function\"),\r\n                    \"keyType\": csr.get(\"key_type_bit_len\").split('-')[0].strip(),\r\n                    \"bitLength\": csr.get(\"key_type_bit_len\").split('-')[1].strip(),\r\n                    \"certificateCategories\": certificateCategories,\r\n                    \"enhancedSANTypes\": {\r\n                        \"dNSNames\": san_dns\r\n                    }\r\n                },\r\n                \"certAttachments\": {\r\n                    \"userDefinedFileName\": \"\",\r\n                    \"comments\": \"\",\r\n                    \"fileName\": \"\",\r\n                    \"attachmentFile\": \"\"\r\n                },\r\n                \"certAttributes\": {\r\n                },\r\n                \"genericFields\": {\r\n                },\r\n                \"validityInDays\": 365*int(csr.get(\"validity\")),\r\n                \"vendorSpecificDetails\": {\r\n                    \"orderId\": \"\",\r\n                    \"numberServer\":csr.get(\"number_of_server\"),\r\n                    \"caCertId\": csr.get(\"ca_cert_id\") or \"\",\r\n                    \"serverType\": csr.get(\"server_type\") or \"\"\r\n                }\r\n            },\r\n            \"certificateGroup\": {\r\n                \"name\": \"<%assign_group%>\"\r\n            },\r\n            \"fileIds\": []\r\n        }\r\n    }\r\n\r\n    logger.info(\"Save CA Connector info payload:\"+str(payload))\r\n    response = requests.post(url=url, headers=headers, data=json.dumps(payload), verify=False)\r\n    logger.info(response.json())\r\n    if response.status_code in (\"407\", 407):\r\n        time.sleep(2)\r\n        strict_cert_ca_connector_info(csr)\r\n    if response.status_code != 200:\r\n        AVX::LOG(\"For the given common name \"+str(csr.get(\"cert_cn\"))+\" due to \"+str(response.reason))\r\n        return ''\r\n    response = response.json().get(\"response\")\r\n    logger.info(\"Save CA Connector info response:\"+str(response))\r\n    return response.get(\"uuid\")\r\n\r\n\r\ndef check_strict_or_suggestive():\r\n    \"\"\"\r\n    Function to Fetch the configured certificate group\r\n    \r\n    :return: \"Strict\" or \"Suggestive\"\r\n    \"\"\"\r\n    gateway_url, gateway_key = fetch_gateway_key()\r\n    cat = 'server'\r\n    if '<%certificate_profile%>' == 'Server':\r\n        cat = 'server'\r\n    elif '<%certificate_profile%>' == 'Client':\r\n        cat = 'client'\r\n    elif '<%certificate_profile%>' == 'Code Signing':\r\n        cat = 'codeSigning'\r\n        \r\n    url = \"{}avxapi/cert-get-policy-by-groupname?certificateGroupName={}&certificateCategory={}&gwkey={}&gwsource=external\".format(gateway_url,'<%assign_group%>', cat, gateway_key)\r\n\r\n    headers = {\"sessionId\": \"<%sessionId%>\", \"Content-Type\": \"application/json\"}\r\n    response = requests.get(url=url, headers=headers, verify=False)\r\n    if response.status_code in (\"407\", 407):\r\n        time.sleep(2)\r\n        check_strict_or_suggestive()\r\n    response = response.json()\r\n    \r\n    # logger.info('&&&\\n')\r\n    # logger.info(str(response))\r\n    \r\n    return response.get(\"response\").get(\"type\")\r\n\r\ndef strict_cert_ca_connectorinfo_multidomain_ssl(csr):\r\n    \r\n    AVX::LOG(str(\"---STRICT---\"))\r\n    logger.info(\"---Strict---\")\r\n    \r\n    gateway_url, gateway_key = fetch_gateway_key()\r\n    cat = 'server'\r\n    if '<%certificate_profile%>' == 'Server':\r\n        cat = 'server'\r\n    elif '<%certificate_profile%>' == 'Client':\r\n        cat = 'client'\r\n    elif '<%certificate_profile%>' == 'Code Signing':\r\n        cat = 'codeSigning'\r\n        \r\n    url = \"{}avxapi/cert-get-policy-by-groupname?certificateGroupName={}&certificateCategory={}&gwkey={}&gwsource=external\".format(gateway_url,'<%assign_group%>', cat, gateway_key)\r\n\r\n    headers = {\"sessionId\": \"<%sessionId%>\", \"Content-Type\": \"application/json\"}\r\n    response = requests.get(url=url, headers=headers, verify=False)\r\n    if response.status_code in (\"407\", 407):\r\n        time.sleep(2)\r\n        strict_cert_ca_connectorinfo_multidomain_ssl(csr)\r\n    response = response.json()\r\n\r\n    strict_policy_data = {}\r\n    for cert_policy_ca_acc_detail in response.get(\"response\").get(\"certificatePolicyCaAccountDetails\"):\r\n        if cert_policy_ca_acc_detail.get(\"certificateAuthority\") == \"<%cert_authority%>\":\r\n            csr_params = cert_policy_ca_acc_detail.get(\"certPolicyCsrParameter\")\r\n\r\n            strict_policy_data['org_multidomain_ssl_cert'] = csr_params.get(\"organization\")\r\n            strict_policy_data['org_unit'] = csr_params.get('organizationUnit')\r\n            strict_policy_data['city_multidomain_ssl_cert'] = csr_params.get('locality')\r\n            strict_policy_data['state_multidomain_ssl_cert'] = csr_params.get('state')\r\n            strict_policy_data['country_multidomain_ssl_cert'] = csr_params.get('country')\r\n            strict_policy_data['email'] = ','.join(csr_params.get('mailAddress'))\r\n            strict_policy_data['dns_multidomain_ssl_cert'] = csr_params.get('subjectAlternativeNames')\r\n            \r\n            if cat == \"client\":\r\n                strict_policy_data['rfc822Names'] = csr_params.get('subjectAlternativeNames')\r\n    \r\n    \r\n    \r\n    url = \"{}avxapi/cert-ca-connectorinfo-save?&gwkey={}&gwsource=external\".format(gateway_url, gateway_key)\r\n    headers = {\r\n        \"sessionId\": '<%sessionId%>',\r\n        \"Content-Type\": \"application/json\",\r\n        \"Accept\": \"application/json\"\r\n    }\r\n    san = []\r\n    san_dns = []\r\n    \r\n    if csr.get(\"dns_multidomain_ssl_cert\"):\r\n        san.append(\"multiselect-all\")\r\n        san.append(\"dNSNames\")\r\n        # if operation_type == 'Create':\r\n        #     san_dns.append(csr.get(\"cert_cn\"))\r\n        san_dns.extend(csr.get(\"dns_multidomain_ssl_cert\").split(\",\"))\r\n    \r\n    certificateCategories = \"\"\r\n    if operation_type == 'Create':\r\n        certificateCategories = [\"<%certificate_profile%>\", \"Client\"] if \"<%certificate_profile%>\" == \"Server\" else [\"<%certificate_profile%>\"]\r\n    else:\r\n        cert_profile = csr.get('cert_profile_regen')\r\n        certificateCategories = [cert_profile, \"Client\"] if cert_profile == \"Server\" else [cert_profile]\r\n    \r\n    new_san_data = strict_policy_data['dns_multidomain_ssl_cert'] if strict_policy_data['dns_multidomain_ssl_cert'] else san_dns\r\n    if not isinstance(new_san_data, list):\r\n        new_san_data = new_san_data.split(\",\")\r\n    \r\n    payload = {\r\n        \"payload\" : {\r\n            \"csrGenerationSource\": \"appviewx\",\r\n            \"caConnectorInfo\": {\r\n                \"_id\": \"\",\r\n                \"certificateUuid\": \"\",\r\n                \"existingUuid\": \"\",\r\n                \"certificateAuthority\": \"<%cert_authority%>\",\r\n                \"isAutoRenewal\": false if csr.get(\"renew_automatically\") == \"No\" else true,\r\n                \"renewBefore\": csr.get(\"renew_before\",\"0\"),\r\n                \"autoRegenerateEnabled\": false if csr.get(\"regen_automatically\") ==\"No\" else true,\r\n                \"regenerateBeforeInDays\": csr.get(\"regen_before\",\"0\"),\r\n                \"caSettingName\": csr.get(\"ca_account\") or \"\",\r\n                \"certificateType\": csr.get(\"cert_type\") or \"\",\r\n                \"name\": \"<%cert_authority%> \"+csr.get(\"cert_type\")+\" connector\",\r\n                \"description\": \"\",\r\n                \"file\": \"\",\r\n                \"csrParameters\": {\r\n                    \"commonName\": csr.get(\"cert_cn\"),\r\n                    \"subjectAlternativeNames\": san,\r\n                    \"dNSNames\": ','.join(strict_policy_data['dns_multidomain_ssl_cert']) if strict_policy_data['dns_multidomain_ssl_cert'] else ','.join(san_dns),\r\n\r\n                    \"organization\": strict_policy_data.get('org_multidomain_ssl_cert') if strict_policy_data.get(\"org_multidomain_ssl_cert\") else csr.get(\"org_multidomain_ssl_cert\"),\r\n                    \"organizationUnit\": strict_policy_data.get(\"org_unit\") if strict_policy_data.get(\"org_unit\") else csr.get(\"org_unit\"),\r\n                    \"locality\": strict_policy_data.get(\"city_multidomain_ssl_cert\") if strict_policy_data.get(\"city_multidomain_ssl_cert\") else csr.get(\"city_multidomain_ssl_cert\"),\r\n                    \"state\": strict_policy_data.get(\"state_multidomain_ssl_cert\") if strict_policy_data.get(\"state_multidomain_ssl_cert\") else csr.get(\"state_multidomain_ssl_cert\"),\r\n                    \"country\": strict_policy_data.get(\"country_multidomain_ssl_cert\") if strict_policy_data.get(\"country_multidomain_ssl_cert\") else csr.get(\"country_multidomain_ssl_cert\"),\r\n                    \"postalCode\": csr.get(\"zip_code_multidomain_ssl_cert\") or \"\",\r\n                    \"mailAddress\": strict_policy_data.get(\"email\") if strict_policy_data.get(\"email\") else csr.get(\"email\"),\r\n                    \"encryptedChallengePassword\": encrypt_pass(csr.get(\"challenge_pwd\")) or \"\",\r\n                    \"hashFunction\": csr.get(\"hash_function\"),\r\n                    \"keyType\": csr.get(\"key_type_bit_len\").split('-')[0].strip(),\r\n                    \"bitLength\": csr.get(\"key_type_bit_len\").split('-')[1].strip(),\r\n                    \"certificateCategories\": certificateCategories,\r\n                    \"enhancedSANTypes\": {\r\n                        \"dNSNames\": new_san_data\r\n                    }\r\n                },\r\n                \"certAttachments\": {\r\n                    \"userDefinedFileName\": \"\",\r\n                    \"comments\": \"\",\r\n                    \"fileName\": \"\",\r\n                    \"attachmentFile\": \"\"\r\n                },\r\n                \"certAttributes\": {\r\n                },\r\n                \"genericFields\": {\r\n                },\r\n                \"validityInDays\": 365*int(csr.get(\"validity\")),\r\n                \"vendorSpecificDetails\": {\r\n                    \"orderId\": \"\",\r\n                    \"numberServer\":csr.get(\"number_of_server\"),\r\n                    \"caCertId\": csr.get(\"ca_cert_id\") or \"\",\r\n                    \"serverType\": csr.get(\"server_type\") or \"\"\r\n                }\r\n            },\r\n            \"certificateGroup\": {\r\n                \"name\": \"<%assign_group%>\"\r\n            },\r\n            \"fileIds\": []\r\n        }\r\n    }\r\n\r\n    logger.info(\"Save CA Connector info payload:\"+str(payload))\r\n    \r\n    response = requests.post(url=url, headers=headers, data=json.dumps(payload), verify=False)\r\n    logger.info(response.json())\r\n    if response.status_code in (\"407\", 407):\r\n        time.sleep(2)\r\n        strict_cert_ca_connectorinfo_multidomain_ssl(csr)\r\n    if response.status_code != 200:\r\n        AVX::LOG(\"For the given common name \"+str(csr.get(\"cert_cn\"))+\" due to \"+str(response.reason))\r\n        return ''\r\n    response = response.json().get(\"response\")\r\n    logger.info(\"Save CA Connector info response:\"+str(response))\r\n    return response.get(\"uuid\")\r\n\r\ndef cert_ca_connectorinfo_multidomain_ssl(csr):\r\n    \r\n    gateway_url, gateway_key = fetch_gateway_key()\r\n    url = \"{}avxapi/cert-ca-connectorinfo-save?&gwkey={}&gwsource=external\".format(gateway_url, gateway_key)\r\n    headers = {\r\n        \"sessionId\": '<%sessionId%>',\r\n        \"Content-Type\": \"application/json\",\r\n        \"Accept\": \"application/json\"\r\n    }\r\n    \r\n    san = []\r\n    san_dns = []\r\n    \r\n    if csr.get(\"dns_multidomain_ssl_cert\"):\r\n        san.append(\"multiselect-all\")\r\n        san.append(\"dNSNames\")\r\n        # if operation_type == 'Create':\r\n        #     san_dns.append(csr.get(\"cert_cn\"))\r\n        san_dns.extend(csr.get(\"dns_multidomain_ssl_cert\").split(\",\"))\r\n    \r\n    certificateCategories = \"\"\r\n    if operation_type == 'Create':\r\n        certificateCategories = [\"<%certificate_profile%>\", \"Client\"] if \"<%certificate_profile%>\" == \"Server\" else [\"<%certificate_profile%>\"]\r\n    else:\r\n        cert_profile = csr.get('cert_profile_regen')\r\n        certificateCategories = [cert_profile, \"Client\"] if cert_profile == \"Server\" else [cert_profile]\r\n        \r\n    payload = {\r\n        \"payload\" : {\r\n            \"csrGenerationSource\": \"appviewx\",\r\n            \"caConnectorInfo\": {\r\n                \"_id\": \"\",\r\n                \"certificateUuid\": \"\",\r\n                \"existingUuid\": \"\",\r\n                \"certificateAuthority\": \"<%cert_authority%>\",\r\n                \"isAutoRenewal\": true if csr.get(\"renew_automatically\") == \"Yes\" else false,\r\n                \"renewBefore\": csr.get(\"renew_before\",\"0\"),\r\n                \"autoRegenerateEnabled\": true if csr.get(\"regen_automatically\") == \"Yes\" else false,\r\n                \"regenerateBeforeInDays\": csr.get(\"regen_before\",\"0\"),\r\n                \"caSettingName\": csr.get(\"ca_account\") or \"\",\r\n                \r\n                \"certificateType\": csr.get(\"cert_type\") or \"\",\r\n                \"name\": \"<%cert_authority%> \"+csr.get(\"cert_type\")+\" connector\",\r\n                \"description\": \"\",\r\n                \"file\": \"\",\r\n                \"csrParameters\": {\r\n                    \"commonName\": csr.get(\"cert_cn\"),\r\n                    \"subjectAlternativeNames\": san,\r\n                    \"dNSNames\": csr.get(\"dns_multidomain_ssl_cert\") or \"\",\r\n                    \r\n                    \"organization\": csr.get(\"org_multidomain_ssl_cert\") or \"\",\r\n                    \"organizationUnit\": csr.get(\"org_unit\") or \"\",\r\n                    \"streetAddress\":csr.get(\"org_address_multidomain_ssl_cert\") or \"\",\r\n                    \"locality\": csr.get(\"city_multidomain_ssl_cert\") or \"\",\r\n                    \"state\": csr.get(\"state_multidomain_ssl_cert\") or \"\",\r\n                    \"country\": csr.get(\"country_multidomain_ssl_cert\") or \"\",\r\n                    \"postalCode\": csr.get(\"zip_code_multidomain_ssl_cert\") or \"\",\r\n                    \"mailAddress\": csr.get(\"email_address\") or \"\",\r\n                    \"encryptedChallengePassword\": encrypt_pass(csr.get(\"challenge_pwd\")) or \"\",\r\n                    \"hashFunction\": csr.get(\"hash_function\"),\r\n                    \"keyType\": csr.get(\"key_type_bit_len\").split('-')[0].strip(),\r\n                    \"bitLength\": csr.get(\"key_type_bit_len\").split('-')[1].strip(),\r\n                    \"certificateCategories\": certificateCategories,\r\n                    \"enhancedSANTypes\": {\r\n                        \"dNSNames\": san_dns\r\n                    }\r\n                },\r\n                \"certAttachments\": {\r\n                    \"userDefinedFileName\": \"\",\r\n                    \"comments\": \"\",\r\n                    \"fileName\": \"\",\r\n                    \"attachmentFile\": \"\"\r\n                },\r\n                \"certAttributes\": {\r\n                },\r\n                \"genericFields\": {\r\n                },\r\n                \"validityInDays\": 365*int(csr.get(\"validity\")),\r\n                \"vendorSpecificDetails\": {\r\n                    \"orderId\": \"\",\r\n                    \"numberServer\":csr.get(\"number_of_server\"),\r\n                    \"serverType\": csr.get(\"server_type\") or \"\"\r\n                }\r\n            },\r\n            \"certificateGroup\": {\r\n                \"name\": \"<%assign_group%>\"\r\n            },\r\n            \"fileIds\": []\r\n        }\r\n    }\r\n    \r\n    logger.info(\"Save CA Connector info payload:\"+str(payload))\r\n    response = requests.post(url=url, headers=headers, data=json.dumps(payload), verify=False)\r\n    logger.info(response.json())\r\n    if response.status_code in (\"407\", 407):\r\n        time.sleep(2)\r\n        cert_ca_connectorinfo_multidomain_ssl(csr)\r\n    if response.status_code != 200:\r\n        AVX::LOG(\"For the given common name \"+str(csr.get(\"cert_cn\"))+\" \"+str(response.reason))\r\n        return ''\r\n    logger.info(\"Save CA Connector info response:\"+str(response))\r\n    response = response.json().get(\"response\")\r\n    logger.info(\"Save CA Connector info response:\"+str(response))\r\n    return response.get(\"uuid\")\r\n\r\ndef strict_cert_ca_connector_info_uploadcsr(csr):\r\n    AVX::LOG(str(\"---STRICT---\"))\r\n    logger.info(\"---Strict---\")\r\n    gateway_url, gateway_key = fetch_gateway_key()\r\n    cat = 'server'\r\n    if '<%certificate_profile%>' == 'Server':\r\n        cat = 'server'\r\n    elif '<%certificate_profile%>' == 'Client':\r\n        cat = 'client'\r\n    elif '<%certificate_profile%>' == 'Code Signing':\r\n        cat = 'codeSigning'\r\n        \r\n    url = \"{}avxapi/cert-get-policy-by-groupname?certificateGroupName={}&certificateCategory={}&gwkey={}&gwsource=external\".format(gateway_url,'<%assign_group%>', cat, gateway_key)\r\n\r\n    headers = {\"sessionId\": \"<%sessionId%>\", \"Content-Type\": \"application/json\"}\r\n    response = requests.get(url=url, headers=headers, verify=False)\r\n    if response.status_code in (\"407\", 407):\r\n        time.sleep(2)\r\n        strict_cert_ca_connector_info_uploadcsr(csr)\r\n    response = response.json()\r\n\r\n    strict_data = {}\r\n    for cert_policy_ca_acc_detail in response.get(\"response\").get(\"certificatePolicyCaAccountDetails\"):\r\n        if cert_policy_ca_acc_detail.get(\"certificateAuthority\") == \"<%cert_authority%>\":\r\n            csr_params = cert_policy_ca_acc_detail.get(\"certPolicyCsrParameter\")\r\n\r\n            strict_data['org'] = csr_params.get(\"organization\")\r\n            strict_data['org_unit'] = csr_params.get('organizationUnit')\r\n            strict_data['city'] = csr_params.get('locality')\r\n            strict_data['state'] = csr_params.get('state')\r\n            strict_data['country'] = csr_params.get('country')\r\n            strict_data['email'] = ','.join(csr_params.get('mailAddress'))\r\n            strict_data['subject_alternative_names'] = csr_params.get('subjectAlternativeNames')\r\n            \r\n            if cat == \"client\":\r\n                strict_data['rfc822Names'] = csr_params.get('subjectAlternativeNames')\r\n    \r\n    \r\n    \r\n    url = \"{}avxapi/cert-ca-connectorinfo-save?&gwkey={}&gwsource=external\".format(gateway_url, gateway_key)\r\n    headers = {\r\n        \"sessionId\": '<%sessionId%>',\r\n        \"Content-Type\": \"application/json\",\r\n        \"Accept\": \"application/json\"\r\n    }\r\n    san = []\r\n    san_dns = []\r\n    \r\n    if csr.get(\"dns_uploadcsr\"):\r\n        san.append(\"multiselect-all\")\r\n        san.append(\"dNSNames\")\r\n        # if operation_type == 'Create':\r\n        #     san_dns.append(csr.get(\"cert_cn\"))\r\n\r\n        # san_dns.extend(csr.get(\"dns_uploadcsr\").split(\",\"))\r\n    \r\n    certificateCategories = \"\"\r\n    if operation_type == 'Create':\r\n        certificateCategories = [\"<%certificate_profile%>\", \"Client\"] if \"<%certificate_profile%>\" == \"Server\" else [\"<%certificate_profile%>\"]\r\n    else:\r\n        cert_profile = csr.get('cert_profile_regen')\r\n        certificateCategories = [cert_profile, \"Client\"] if cert_profile == \"Server\" else [cert_profile]\r\n    new_san_data = strict_data['subject_alternative_names'] if strict_data['subject_alternative_names'] else csr.get(\"dns_uploadcsr\")\r\n    if not isinstance(new_san_data, list):\r\n        new_san_data = new_san_data.split(\",\")\r\n    \r\n    \r\n    payload = {\r\n        \"payload\" : {\r\n            \"csrGenerationSource\": \"appviewx\",\r\n            \"caConnectorInfo\": {\r\n                \"_id\": \"\",\r\n                \"certificateUuid\": \"\",\r\n                \"existingUuid\": \"\",\r\n                \"certificateAuthority\": \"<%cert_authority%>\",\r\n                \"isAutoRenewal\": true if csr.get(\"renew_uploadcsr\") == \"Yes\" else false,\r\n                \"renewBefore\": csr.get(\"renew_before_uploadcsr\",\"0\"),\r\n                \"autoRegenerateEnabled\": true if csr.get(\"regen_uploadcsr\") == \"Yes\" else false,\r\n                \"regenerateBeforeInDays\": csr.get(\"regen_before_uploadcsr\",\"0\"),\r\n                \"caSettingName\": csr.get(\"ca_account_uploadcsr\") or \"\",\r\n\r\n                \"certificateType\": csr.get(\"cert_type_uploadcsr\") or \"\",\r\n                \"name\": \"<%cert_authority%> \"+csr.get(\"cert_type_uploadcsr\")+\" connector\",\r\n                \"description\": \"\",\r\n                \"file\": \"\",\r\n                \"csrParameters\": {\r\n                    \"commonName\": csr.get(\"cn_uploadcsr\"),\r\n                    \"subjectAlternativeNames\": san,\r\n                    \"dNSNames\": ','.join(strict_data['subject_alternative_names']) if strict_data['subject_alternative_names'] else csr.get(\"dns_uploadcsr\"),\r\n                    \"streetAddress\" : csr.get(\"org_address_uploadcsr\"),\r\n                    \"organization\": strict_data.get('org') if strict_data.get(\"org\") else csr.get(\"org_uploadcsr\"),\r\n                    \"organizationUnit\": strict_data.get(\"org_unit\") if strict_data.get(\"org_unit\") else csr.get(\"org_unit_uploadcsr\"),\r\n                    \"locality\": strict_data.get(\"city\") if strict_data.get(\"city\") else csr.get(\"city_uploadcsr\"),\r\n                    \"state\": strict_data.get(\"state\") if strict_data.get(\"state\") else csr.get(\"state_uploadcsr\"),\r\n                    \"country\": strict_data.get(\"country\") if strict_data.get(\"country\") else csr.get(\"country_uploadcsr\"),\r\n                    \"postalCode\": csr.get(\"zip_uploadcsr\") or \"\",\r\n                    \"mailAddress\": strict_data.get(\"email\") if strict_data.get(\"email\") else csr.get(\"email_uploadcsr\"),\r\n                    \"encryptedChallengePassword\": encrypt_pass(csr.get(\"challenge_pwd\")) or \"\",\r\n                    \"hashFunction\": csr.get(\"hash_uploadcsr\"),\r\n                    \"keyType\": csr.get(\"key_uploadcsr\"),\r\n                    \"bitLength\": csr.get(\"bit_uploadcsr\"),\r\n                    \"certificateCategories\": certificateCategories,\r\n                    \"enhancedSANTypes\": {\r\n                        \"dNSNames\": new_san_data\r\n                    }\r\n                },\r\n                \"certAttachments\": {\r\n                    \"userDefinedFileName\": \"\",\r\n                    \"comments\": \"\",\r\n                    \"fileName\": \"\",\r\n                    \"attachmentFile\": \"\"\r\n                },\r\n                \"certAttributes\": {\r\n                },\r\n                \"genericFields\": {\r\n                },\r\n                \"validityInDays\": 365*int(csr.get(\"validity_uploadcsr\")),\r\n                \"vendorSpecificDetails\": {\r\n                    \"orderId\": \"\",\r\n                    \"numberServer\":csr.get(\"number_of_server_uploadcsr\"),\r\n                    \"caCertId\": csr.get(\"ca_cert_id\") or \"\",\r\n                    \"serverType\": csr.get(\"server_type_uploadcsr\") or \"\"\r\n                }\r\n            },\r\n            \"certificateGroup\": {\r\n                \"name\": \"<%assign_group%>\"\r\n            },\r\n            \"fileIds\": []\r\n        }\r\n    }\r\n    logger.info(\"Payload for STRICT CSR UPLOAD \"+str(payload))\r\n    logger.info(\"Save CA Connector info payload:\"+str(payload))\r\n    response = requests.post(url=url, headers=headers, data=json.dumps(payload), verify=False)\r\n    logger.info(response.json())\r\n    if response.status_code in (\"407\", 407):\r\n        time.sleep(2)\r\n        strict_cert_ca_connector_info_uploadcsr(csr)\r\n    if response.status_code != 200:\r\n        AVX::LOG(\"For the given common name \"+str(csr.get(\"cn_uploadcsr\"))+\" due to \"+str(response.reason))\r\n        return ''\r\n    response = response.json().get(\"response\")\r\n    logger.info(\"Save CA Connector info response:\"+str(response))\r\n    return response\r\n\r\n\r\ndef get_app_connector_payload(uuid, device_name, device_type, certificate_push_location):\r\n    '''\r\n    Method to generate payload for app connector creation\r\n    '''\r\n    certificate_id = str(db.certificate.find_one({'uuid': uuid},{'_id':1})['_id'])    \r\n    if device_type == 'LinuxServer':\r\n        payload = {\r\n            \"payload\":\r\n             {\r\n            \"certificateId\": certificate_id,\r\n            \"selectedProfiles\": [device_name],\r\n            \"generalInformation\": {\r\n              \"category\": \"Server\",\r\n              \"vendor\": device_type,\r\n              \"name\": device_type + \" Connector_\" + str(random.randint(0,999)),\r\n              \"description\": \"\"\r\n            },\r\n            \"pushDetails\": {\r\n              \"scriptLocation\": \"appviewx\",\r\n              \"preValidationScriptPath\": \"\",\r\n              \"postValidationScriptPath\": \"\",\r\n              \"overwrite\": True,\r\n              \"pushAutomatically\": False,\r\n              \"securePush\": True\r\n            },\r\n            \"validationSettings\":{},\r\n            \"certificateDetails\": {\r\n              \"certificateType\": \"PEM-.crt\",\r\n              \"certificateLocation\": certificate_push_location + \"/certificate_push_\" + 'R<%requestId%>' + \".crt\",\r\n              \"keyLocation\": certificate_push_location + \"/certificate_push_\" + 'R<%requestId%>' + \".key\",\r\n              \"pushRootAndIntermediateCertificates\": False,\r\n              \"intermediateCertificateFileName\": []\r\n            }\r\n          }}\r\n    if device_type == 'Microsoft Server':\r\n        payload = {\r\n        \"payload\":{\r\n           \"generalInformation\":{\r\n              \"category\":\"Server\",\r\n              \"vendor\": device_type,\r\n              \"name\": device_type + \"_Connector_\" + str(random.randint(0,999)),\r\n              \"description\":\"\"\r\n           },\r\n           \"certificateDetails\":{\r\n              \"certificateType\":\"PEM-.crt\",\r\n              \"pushLocation\": certificate_push_location,\r\n              \"certificateFileName\":\"certificate_push_\" + 'R<%requestId%>' + \".crt\",\r\n              \"pfxPassword\":\"\",\r\n              \"aliasName\":\"\",\r\n              \"keyStorePassword\":\"\",\r\n              \"privateKeyFileName\":\"certificate_push_\" + 'R<%requestId%>' + \".key\",\r\n              \"pushRootAndIntermediateCertificates\":false,\r\n              \"intermediateCertificateFileName\":[]\r\n           },\r\n           \"pushDetails\":{\r\n              \"scriptLocation\":\"appviewx\",\r\n              \"preValidationScriptPath\":\"\",\r\n              \"postValidationScriptPath\":\"\",\r\n              \"overwrite\":False,\r\n              \"pushAutomatically\":False,\r\n              \"securePush\":False\r\n           },\r\n           \"certificateId\": certificate_id,\r\n           \"selectedProfiles\":[ device_name ],\r\n           \"validationSettings\":{\r\n\r\n           }\r\n        }\r\n        }\r\n\r\n    if device_type == 'IIS':\r\n        payload = {\r\n        \"payload\": {\r\n            \"generalInformation\": {\r\n                \"category\": \"Server\",\r\n                \"vendor\": device_type,\r\n                \"name\": device_type + \"_Connector_\" + str(random.randint(0,999)),\r\n                \"description\": \"\"\r\n            },\r\n            \"certificateDetails\": {\r\n                \"locationType\": \"Certificate store\",\r\n                \"keyStoreLocation\": \"Personal\",\r\n                \"certificateType\": \"PKCS12-.pfx\",\r\n                \"certificateLocation\": \"\",\r\n                \"certificateFileName\": \"certificate_push_\" + 'R<%requestId%>' + \".pfx\",\r\n                \"pushRootAndIntermediateCertificates\": True,\r\n                \"intermediateCertificateFileName\": []\r\n            },\r\n            \"pushDetails\": {\r\n                \"scriptLocation\": \"appviewx\",\r\n                \"preValidationScriptPath\": \"\",\r\n                \"postValidationScriptPath\": \"\",\r\n                \"overwrite\": False,\r\n                \"pushAutomatically\": False,\r\n                \"securePush\": False\r\n            },\r\n            \"certificateId\": certificate_id,\r\n            \"selectedProfiles\": [device_name],\r\n            \"validationSettings\": {}\r\n        }\r\n        }\r\n    logger.info(\"APP Connector - Payload\")\r\n    logger.info(payload)\r\n    return payload\r\n\r\ndef create_app_connector(payload):\r\n    '''\r\n    Method to create app connector\r\n    '''\r\n    if payload:\r\n        gateway_url, gateway_key = fetch_gateway_key()\r\n        logger.info(\"***************************************create_app_connector - payload******************************\")\r\n        logger.info(payload)\r\n        app_ids = list()\r\n        url = \"{}avxapi/cert-application-connector-info-save?gwkey={}&gwsource=external\".format(gateway_url, gateway_key)\r\n        headers = {\"sessionId\":session_id, \"Content-Type\":\"application/json\"}\r\n        response = requests.post(url = url, headers = headers, data = json.dumps(payload), verify = False)\r\n        if response.status_code in (\"407\", 407):\r\n            time.sleep(2)\r\n            create_app_connector(payload)\r\n        logger.info(response.text)\r\n        app_id =  response.json()['response'][0] if response.json()['response'] else ''\r\n        return app_id\r\n    \r\ndef push_cert_to_device(app_id):\r\n    '''\r\n    Method to push certificate to device\r\n    '''\r\n    gateway_url, gateway_key = fetch_gateway_key()\r\n    logger.info(\"push_cert_to_device\")\r\n    url = \"{}avxapi/cert-application-connector-push-to-device?gwkey={}&gwsource=external\".format(gateway_url, gateway_key)\r\n    headers = {\"sessionId\":session_id, \"Content-Type\":\"application/json\"}\r\n    payload = {\"payload\": { \"applicationConnectorIds\": [app_id], \"comments\": \"\"}}\r\n    logger.info(\"PUSH CERT TO DEVICE\")\r\n    logger.info(payload)\r\n    \r\n    response = requests.post(url = url, headers = headers, data = json.dumps(payload), verify = False)\r\n    if response.status_code in (\"407\", 407):\r\n        time.sleep(2)\r\n        push_cert_to_device(app_id)\r\n    logger.info(response.content)\r\n\r\ndef get_request_object_ids(app_id):\r\n    \"\"\"\r\n    Function to get the requestObjectIds from database\r\n    \"\"\"\r\n    request_object_ids = [str(val.get(\"requestObjectId\")) for val in db.visualworkflow_request_inputoutput.find({\"output.data.requestData.fieldInfo.values\":app_id},{\"requestObjectId\":1})]\r\n    return request_object_ids\r\n\r\ndef get_request_id(uuid):\r\n    '''\r\n    Method to get the request id \r\n    '''\r\n    app_ids = [uuid]\r\n    request_ids = []\r\n    for value in app_ids:\r\n        req_obj_ids = get_request_object_ids(value)\r\n        request_id = [db.visualworkflow_request.find_one({\"_id\":ObjectId(val)},{\"requestId\":1}).get(\"requestId\") for val in req_obj_ids]\r\n        request_ids.append(max(request_id))\r\n    logger.info(\"GET REQUEST ID\")\r\n    logger.info(request_ids)\r\n    return request_ids\r\n\r\ndef get_status(req_id):\r\n    \"\"\"\r\n    Function to get the status of the given rquest\r\n    \"\"\"\r\n    status = db.visualworkflow_request.find_one({\"requestId\":req_id},{\"status_code\":1}).get(\"status_code\")\r\n    return status\r\n\r\n\r\ndef get_request_status(request_ids, cert_id):\r\n    '''\r\n    Method to get the request status\r\n    '''\r\n    success_list = list()\r\n    failed_list = list()\r\n    cert_uuid = str()\r\n    while len(success_list)+len(failed_list) != len(request_ids):\r\n        for val in request_ids:\r\n            if val not in success_list and val not in failed_list:\r\n                status = get_status(val)\r\n                if status == 1:\r\n                    success_list.append(val)\r\n                elif status != 0:\r\n                    failed_list.append(val)\r\n                else:\r\n                    time.sleep(20)\r\n    if cert_id:\r\n        cert_details = db.certificate.find_one({\"_id\": ObjectId(cert_id)},{\"commonName\": 1,\"serialNumber\": 1, 'uuid': 1})\r\n        cert_uuid = cert_details.get(\"uuid\",\"\")\r\n    AVX::LOG(cert_uuid)\r\n    for val in failed_list:\r\n        AVX::LOG(str(val) + \" Request Failed\")\r\n    for val in success_list:\r\n        AVX::LOG(str(val) + \" Request Success\")\r\n    logger.info(\"GET REQUEST STATUS\")\r\n    logger.info(success_list)\r\n    logger.info(failed_list)\r\n    if not failed_list:\r\n        return \"Success\", cert_uuid\r\n    return \"Failure\", cert_uuid\r\n\r\ndef get_username_password(server_type):\r\n    if server_type == \"Microsoft\":\r\n        return \"<%username%>\",\"<%password%>\"\r\n    if server_type == \"Microsoft IIS\":\r\n        return \"<%iis_username%>\", \"<%iis_password%>\"\r\n    if server_type == \"Linux\":\r\n        return \"<%linux_username%>\", \"<%linux_password%>\"\r\n    return '',''\r\n    \r\n\r\nif __name__ == \"__main__\":\r\n    cert_uuid = str()\r\n    app_status = 'NA'\r\n    cert_status = 'Failure'\r\n    failure_status = \"No\"\r\n    cert_url = \"\"\r\n    uuid_list = []\r\n    status = True\r\n    common_name = \"\"\r\n    if certificate_details:\r\n        common_name = certificate_details.get('common_name')\r\n        if \"<%input_type%>\" == \"Form Input\":\r\n            response = cert_ca_connector_info(certificate_details)\r\n        else:\r\n            response = bulk_cert_ca_connector_info(certificate_details)\r\n        if response:\r\n            uuid = response.get('uuid')\r\n            cert_id = response.get('id')\r\n            if uuid:\r\n                resp = cert_submit_new_csr(uuid)\r\n                request_ids = get_request_id(uuid)\r\n                cert_status, cert_uuid = get_request_status(request_ids, cert_id)\r\n                cert_url = \"(~ups_ui_link~)\"+\"appviewx/app#certificate/server/holisticView/\"+str(cert_id)+\"/\"+str(common_name)\r\n        else:\r\n            AVX::LOG(\"Kindly check the CSR inputs for the common name \"+str(certificate_details.get(\"common_name\")))\r\n\r\n        logger.info(\"-----------------------Certificate Creation Complete---------------------\")\r\n        logger.info(cert_uuid)\r\n        logger.info(cert_status)\r\n        if cert_status == \"Success\" and certificate_details[\"creation_type\"] == \"Create and Push Certificate\":\r\n            device_name = certificate_details['server_details'] if certificate_details['server_details'] != 'Add New Server' else certificate_details['server_name']\r\n            validate_credentials = True\r\n            cred_type = \"Gateway credential\"\r\n            if '<%input_type%>' == 'Form Input' and \"<%server_details%>\" != 'Add New Server':\r\n                cred_type = db.device.find_one({\"name\":\"<%server_details%>\"},{\"credentialType\":1})['credentialType']\r\n            logger.info(\"CRED_TYPE : \"+str(cred_type))\r\n            \r\n            if \"<%input_type%>\" == \"Form Input\" and \"<%server_details%>\" != \"Add New Server\" and cred_type != \"Gateway credential\":\r\n                username,password = get_username_password(\"<%server_type%>\")\r\n                validate_device_creds = Decrypt_Python3.getpassword(device_name)\r\n                # if username != validate_device_creds[0] or password != validate_device_creds[1]:\r\n                #     validate_credentials = False\r\n                #     app_status = \"Invalid Credentials\"\r\n            else:\r\n                AVX::LOG(\"Credentil type of the following device : \"+str(\"<%server_details%>\") +\" is Gateway credentials. Therefore we can not process Manual Entry.\")\r\n                logger.info(\"\\n\\nUSERNAME : \"+str(username)+\"  PASSWORD : \"+str(password)+\"  \"+str(validate_device_creds)+\"\\n\\n\")\r\n            payload = get_app_connector_payload(cert_uuid, device_name, server_map[certificate_details[\"server_type\"]], certificate_details['certificate_location'])\r\n            if certificate_details['creation_type'] == \"Create and Push Certificate\" and validate_credentials:\r\n                app_id = create_app_connector(payload)\r\n                if app_id:\r\n                    push_cert_to_device(app_id)\r\n                    request_ids = get_request_id(app_id)\r\n                    app_status, dummy_uuid = get_request_status(request_ids, '')\r\n                else:\r\n                    app_status = \"Failure\"\r\n\r\n        status_list.append({'Common Name': common_name, 'Certificate Creation Status': cert_status, 'Certificate Push Status': app_status,\"cert_url\":cert_url})\r\n        if \"<%input_type%>\" == \"Form Input\" and app_status == \"Failure\":\r\n            failure_status = \"Yes\"\r\n        # if \"<%input_type%>\" != \"Form Input\":\r\n        #     cert_url = \"Please go to Menu--->Inventory--->Certificate to view and download your Certificate \"\r\n    cert_url = \"Please go to Menu--->Inventory--->Certificate to view and download your Certificate \"\r\n    output = {'status_list': status_list,\"failure_status\":failure_status, \"common_name_sec\":common_name, \"cert_url\":cert_url}\r\n    AVX::OUTPUT(output)",
    "http_method" : "POST",
    "action_id" : "run-script"
  } ],
  "subFlowID" : "IiI49K52",
  "taskGlobalData" : {
    "workflow_stop_1" : [ ],
    "script_2" : [ {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : "failure_status",
      "key" : "failure_status",
      "value" : "failure_status",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "failure_status",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : "cert_url",
      "key" : "cert_url",
      "value" : "cert_url",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "cert_url",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : "status_list",
      "key" : "status_list",
      "value" : "status_list",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "status_list",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : "common_name_sec",
      "key" : "common_name_sec",
      "value" : "common_name_sec",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "common_name_sec",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    } ]
  },
  "type" : null,
  "level" : 2,
  "maxDepth" : -1,
  "input" : null,
  "workflowName" : "Copy of UPS Certificate Request Workflow-Sep14V1",
  "description" : "",
  "flowName" : "Sectigo create certificates V1",
  "workflowType" : "Default",
  "subFlowType" : "Flow",
  "parentSubFlowID" : "XrwrzBIA",
  "logs" : [ {
    "user" : null,
    "time" : 1600347772523,
    "message" : "Flow created successfully with : Sectigo create certificates V1 for the workflow : Copy of UPS Certificate Request Workflow-Sep14V1"
  }, {
    "user" : null,
    "time" : 1603181344811,
    "message" : "Flow created successfully with : Sectigo create certificates V1 for the workflow : Copy of UPS Certificate Request Workflow-Sep14V1"
  }, {
    "user" : null,
    "time" : 1603309192858,
    "message" : "Flow created successfully with : Sectigo create certificates V1 for the workflow : Copy of UPS Certificate Request Workflow-Sep14V1"
  } ],
  "workflowVersion" : "master"
}, {
  "tasks" : [ {
    "uniqueId" : null,
    "directoryUniqueId" : null,
    "source" : null,
    "tags" : [ ],
    "userName" : null,
    "objectType" : "TaskDetails",
    "sourceControlSettings" : null,
    "description" : null,
    "historyReferences" : [ "5e0ddbcc1a73b7686e35272b", "5e33b98a28c04c1fc6cbb78c", "5e33defb28c04c1fc6cbbbe4", "5e33b5a928c04c1fc6cbb72d", "5e31369e01df96337532c636", "5f197a39211d593ce57cc9b8", "5f5f7c13653c601144d3228c", "5e33df2828c04c1fc6cbbc0f", "5f1979e2211d593ce57cc9ae", "5e316deb01df96337532d210", "5e3135d201df96337532c5a8", "5e31e50128c04c1fc6cb602d", "5e31e51e28c04c1fc6cb603d", "5e334bd928c04c1fc6cb91fe", "5e334c7028c04c1fc6cb943a", "5f5f7c01653c601144d32286" ],
    "usedHistory" : "f47d753b5e5f0de6004750c6edfd0969",
    "sampleInput" : null,
    "sampleOutput" : null,
    "contentTab" : null,
    "successiveTasks" : {
      "incoming" : [ {
        "taskId" : "join_5",
        "taskName" : null,
        "subflowId" : "XrwrzBIA",
        "parentSubflowId" : "qIh2AzEx",
        "taskType" : "start",
        "flowName" : null,
        "linkType" : null
      } ]
    },
    "flowPathID" : null,
    "ignoredForStatusComputation" : true,
    "flowName" : null,
    "subFlowID" : null,
    "globalData" : null,
    "input" : [ ],
    "notificationMessage" : null,
    "ancestor" : null,
    "metaData" : {
      "taskHeader" : "stop",
      "hide" : false,
      "lock" : false,
      "successState" : 1,
      "failoverState" : 2,
      "taskScope" : null,
      "hideFromStageView" : false,
      "mode" : "Developer",
      "nature" : null,
      "lowCodeTask" : false
    },
    "parentSubFlowID" : null,
    "helpContent" : null,
    "rules" : { },
    "cleanUpFlowDetails" : { },
    "subFlowDetails" : [ ],
    "associatedRollbackWorkOrderDetail" : null,
    "_id" : null,
    "task_id" : "workflow_stop_1",
    "task_name" : "Stop flow",
    "task_type" : "stop",
    "task_category" : "stop",
    "component_type" : "others",
    "setNullProperties" : true,
    "folderName" : null,
    "sub_group" : null,
    "group_name" : null,
    "viewable_type" : "custom"
  }, {
    "uniqueId" : null,
    "directoryUniqueId" : null,
    "source" : null,
    "tags" : [ ],
    "userName" : null,
    "objectType" : "TaskDetails",
    "sourceControlSettings" : null,
    "description" : null,
    "historyReferences" : [ "5e31367d01df96337532c622", "5e316deb01df96337532d214", "5e33205c28c04c1fc6cb8da1", "5e33209428c04c1fc6cb8da9", "5e31362401df96337532c5dd", "5e31369301df96337532c62f" ],
    "usedHistory" : "3754b029285ab156f161d131503165e2",
    "sampleInput" : null,
    "sampleOutput" : null,
    "contentTab" : null,
    "successiveTasks" : {
      "incoming" : [ {
        "taskId" : "decision_1",
        "taskName" : null,
        "subflowId" : "wXuhN9bL",
        "parentSubflowId" : "owy9e09I",
        "taskType" : "start",
        "flowName" : null,
        "linkType" : null
      } ],
      "success" : [ {
        "taskId" : "join_1",
        "taskName" : null,
        "subflowId" : "wkzaUXpL",
        "parentSubflowId" : "iM5chT1L",
        "taskType" : "join",
        "flowName" : null,
        "linkType" : null
      } ]
    },
    "flowPathID" : null,
    "ignoredForStatusComputation" : false,
    "flowName" : "MS create certificates V1",
    "subFlowID" : "IuQy5PCy",
    "globalData" : null,
    "input" : [ ],
    "notificationMessage" : null,
    "ancestor" : null,
    "metaData" : null,
    "parentSubFlowID" : "XrwrzBIA",
    "helpContent" : null,
    "workflowDetail" : null,
    "workflowTaskComponentDetail" : null,
    "_id" : null,
    "task_id" : "AppViewXcreatecertificates_4",
    "task_name" : "MS create certificates V1",
    "task_type" : "flow",
    "task_category" : null,
    "component_type" : "others",
    "setNullProperties" : true,
    "folderName" : "CertOOB",
    "sub_group" : null,
    "group_name" : null,
    "viewable_type" : "custom"
  }, {
    "uniqueId" : null,
    "directoryUniqueId" : null,
    "source" : null,
    "tags" : [ ],
    "userName" : null,
    "objectType" : "TaskDetails",
    "sourceControlSettings" : null,
    "description" : null,
    "historyReferences" : [ "5e31368501df96337532c625", "5e31369601df96337532c632", "5e33209628c04c1fc6cb8dac", "5e33205c28c04c1fc6cb8da2", "5e31362701df96337532c5e7", "5e316deb01df96337532d215" ],
    "usedHistory" : "f8a563413c8415a0dcb10bd0bef73f2f",
    "sampleInput" : null,
    "sampleOutput" : null,
    "contentTab" : null,
    "successiveTasks" : {
      "incoming" : [ {
        "taskId" : "decision_1",
        "taskName" : null,
        "subflowId" : "wXuhN9bL",
        "parentSubflowId" : "owy9e09I",
        "taskType" : "start",
        "flowName" : null,
        "linkType" : null
      } ],
      "success" : [ {
        "taskId" : "join_1",
        "taskName" : null,
        "subflowId" : "wkzaUXpL",
        "parentSubflowId" : "iM5chT1L",
        "taskType" : "join",
        "flowName" : null,
        "linkType" : null
      } ]
    },
    "flowPathID" : null,
    "ignoredForStatusComputation" : false,
    "flowName" : "Sectigo create certificates V1",
    "subFlowID" : "IiI49K52",
    "globalData" : null,
    "input" : [ ],
    "notificationMessage" : null,
    "ancestor" : null,
    "metaData" : null,
    "parentSubFlowID" : "XrwrzBIA",
    "helpContent" : null,
    "workflowDetail" : null,
    "workflowTaskComponentDetail" : null,
    "_id" : null,
    "task_id" : "AppViewXcreatecertificates_5",
    "task_name" : "Sectigo create certificates V1",
    "task_type" : "flow",
    "task_category" : null,
    "component_type" : "others",
    "setNullProperties" : true,
    "folderName" : "CertOOB",
    "sub_group" : null,
    "group_name" : null,
    "viewable_type" : "custom"
  }, {
    "uniqueId" : null,
    "directoryUniqueId" : null,
    "source" : null,
    "tags" : [ ],
    "userName" : null,
    "objectType" : "TaskDetails",
    "sourceControlSettings" : null,
    "description" : null,
    "historyReferences" : [ "5e31369401df96337532c630", "5e31e52628c04c1fc6cb6040", "5e28651d1fad0f46586c0485", "5e254f5c5c621f7dcc61bfcf", "5e31e52a28c04c1fc6cb6043", "5e31369701df96337532c633", "5e254ef45c621f7dcc61bfc9", "5e0dec041a73b7686e352871", "5e16ba8b85f63f1911c38596", "5e31369e01df96337532c635", "5e31e51c28c04c1fc6cb6039", "5e0dec071a73b7686e352874", "5e0ede451a73b7686e353fb4", "5e31368d01df96337532c629", "5e31368f01df96337532c62c", "5e28651e1fad0f46586c0488", "5e0f0d061a73b7686e354428", "5e31364b01df96337532c5f2", "5e316deb01df96337532d217", "5e0dec0a1a73b7686e352877", "5e31e50128c04c1fc6cb602c" ],
    "usedHistory" : "9c4de5ddba12f449e8e50c02ddadd534",
    "sampleInput" : null,
    "sampleOutput" : null,
    "contentTab" : null,
    "successiveTasks" : {
      "incoming" : [ {
        "taskId" : "AppViewXcreatecertificates_5",
        "taskName" : null,
        "subflowId" : "wkzaUXpL",
        "parentSubflowId" : "iM5chT1L",
        "taskType" : "start",
        "flowName" : null,
        "linkType" : null
      }, {
        "taskId" : "AppViewXcreatecertificates_4",
        "taskName" : null,
        "subflowId" : "wkzaUXpL",
        "parentSubflowId" : "iM5chT1L",
        "taskType" : "start",
        "flowName" : null,
        "linkType" : null
      } ],
      "success" : [ {
        "taskId" : "endLoop_1",
        "taskName" : null,
        "subflowId" : "wXuhN9bL",
        "parentSubflowId" : "owy9e09I",
        "taskType" : "loop",
        "flowName" : null,
        "linkType" : null
      } ]
    },
    "flowPathID" : null,
    "ignoredForStatusComputation" : false,
    "flowName" : null,
    "subFlowID" : null,
    "globalData" : null,
    "input" : [ ],
    "notificationMessage" : null,
    "ancestor" : null,
    "metaData" : {
      "taskHeader" : "Join",
      "hide" : false,
      "lock" : false,
      "successState" : 1,
      "failoverState" : 2,
      "taskScope" : null,
      "hideFromStageView" : false,
      "mode" : "Developer",
      "nature" : "normal",
      "lowCodeTask" : false
    },
    "parentSubFlowID" : null,
    "helpContent" : null,
    "flowIdsToJoin" : [ ],
    "_id" : null,
    "task_id" : "join_1",
    "task_name" : "Join",
    "task_type" : "join",
    "task_category" : "join",
    "component_type" : "others",
    "setNullProperties" : true,
    "folderName" : "CertOOB",
    "sub_group" : "join",
    "group_name" : "General",
    "viewable_type" : "default"
  }, {
    "uniqueId" : null,
    "directoryUniqueId" : null,
    "source" : null,
    "tags" : [ ],
    "userName" : null,
    "objectType" : "TaskDetails",
    "sourceControlSettings" : null,
    "description" : "",
    "historyReferences" : [ "5e84337ce506e309b536de0e", "5e33cce228c04c1fc6cbb8a1", "5f450eb0e876b464d0a6b437", "5ea1dadc3f46f614edf6e227", "5f3fc58316749c335f195bfb", "5f4944fb3919916a91e1476f", "5e84754ae506e309b536e523", "5e9dfbe0005e355cf216edee", "5ea1dfb83f46f614edf6e252", "5f526a17653c601144d11a9e", "5ea1d6e53f46f614edf6e216", "5e9dcece005e355cf216e2d4", "5f345745653c601144c8b211", "5ea1da583f46f614edf6e222", "5f348e88653c601144c94fa2", "5f77817175715a637ff45212", "5f34bb69653c601144c950cd", "5f34c581abff755debc44cfa", "5e331a9228c04c1fc6cb8d49", "5e31e03e28c04c1fc6cb6010", "5e33c2cd28c04c1fc6cbb80f", "5e31e03d28c04c1fc6cb600e", "5f45157916749c335f1a5098", "5e31e51828c04c1fc6cb6033", "5f451140e876b464d0a6b46e", "5e33137628c04c1fc6cb8cd5", "5e3314d128c04c1fc6cb8cf6", "5e3ab464facc3a1372b8922e", "5f635bcdc3d56076c71db45c", "5e3319c428c04c1fc6cb8d38", "5e33157428c04c1fc6cb8d08", "5e331f6828c04c1fc6cb8d86", "5e31e4f528c04c1fc6cb6028", "5ea1c2173f46f614edf6e006", "5f4513aa16749c335f1a508b", "5f526bcf653c601144d11aab", "5f526cbe653c601144d11ab3", "5ea1d6303f46f614edf6e213", "5f3fbe0be876b464d0a5c0dd", "5f525f51abff755debc902c1", "5e85c9ef85c3716c27c47297", "5f34c292653c601144c950d5", "5f526450653c601144d119bb", "5f635c60c3d56076c71db45e", "5f31ad89abff755debc3a978", "5e31e43428c04c1fc6cb6026", "5f345bee653c601144c8b220", "5f526d0b653c601144d11ab5", "5f526a7a653c601144d11aa0", "5f3fbfe1e876b464d0a5c0e2", "5ea1dbf43f46f614edf6e22a", "5f45106ee876b464d0a6b44d", "5e33ffcc28c04c1fc6cbc828", "5ea1d7773f46f614edf6e218", "5f34a6bc653c601144c9504a", "5e843194e506e309b536de00", "5f4512df16749c335f1a507d", "5f344dc9abff755debc44a98", "5f36ba31653c601144c9f0ba", "5f52608c653c601144d11994", "5e33183428c04c1fc6cb8d28", "5f526dd2abff755debc90300", "5f46bd213919916a91e13964", "5e31e55128c04c1fc6cb6047", "5e396e2efacc3a1372b870f9", "5f3fbd0016749c335f195b97", "5e31e04028c04c1fc6cb6012", "5e31e03328c04c1fc6cb600c", "5e33142428c04c1fc6cb8ce4", "5e9dea1a005e355cf216e5fa", "5f451247e876b464d0a6b47f", "5e9de2d4005e355cf216e35f", "5f526b1f653c601144d11aa8", "5e3349e228c04c1fc6cb90e8", "5e33ecdf28c04c1fc6cbc2dc", "5e9dfba8005e355cf216edec", "5e9dfcff005e355cf216edf3", "5f34559fabff755debc44aa1", "5e33ff8b28c04c1fc6cbc826" ],
    "usedHistory" : "980c5b571584271a9507de4d023bed59",
    "sampleInput" : null,
    "sampleOutput" : null,
    "contentTab" : null,
    "successiveTasks" : {
      "incoming" : [ {
        "taskId" : "workflow_start_1",
        "taskName" : null,
        "subflowId" : "wXuhN9bL",
        "parentSubflowId" : "owy9e09I",
        "taskType" : "start",
        "flowName" : null,
        "linkType" : null
      } ],
      "success" : [ {
        "taskId" : "startLoop_1",
        "taskName" : null,
        "subflowId" : "wXuhN9bL",
        "parentSubflowId" : "owy9e09I",
        "taskType" : "loop",
        "flowName" : null,
        "linkType" : null
      } ]
    },
    "flowPathID" : null,
    "ignoredForStatusComputation" : false,
    "flowName" : "Cert create OOB",
    "subFlowID" : "XrwrzBIA",
    "globalData" : null,
    "input" : [ {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "port",
      "value" : "<%port%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "port",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "installer_name",
      "value" : "<%installer_name%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "installer_name",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "certificate_type",
      "value" : "<%certificate_type%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "certificate_type",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "application_name",
      "value" : "<%application_name%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "application_name",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "server_details",
      "value" : "<%server_details%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "server_details",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "vendor_email_address",
      "value" : "<%vendor_email_address%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "vendor_email_address",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "environment",
      "value" : "<%environment%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "environment",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "cname_replaced",
      "value" : "<%cname_replaced%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "cname_replaced",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "vendor_liaison",
      "value" : "<%vendor_liaison%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "vendor_liaison",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "credential_type",
      "value" : "<%credential_type%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "credential_type",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "smc_grp",
      "value" : "<%smc_grp%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "smc_grp",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "notes_comments",
      "value" : "<%notes_comments%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "notes_comments",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "vendor_hosted",
      "value" : "<%vendor_hosted%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "vendor_hosted",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "sessionId",
      "value" : "<%sessionId%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "sessionId",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "requestor_manager_name",
      "value" : "<%requestor_manager_name%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "requestor_manager_name",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "read_and_agree_checkbox",
      "value" : "<%read_and_agree_checkbox%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "read_and_agree_checkbox",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "website_name",
      "value" : "<%website_name%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "website_name",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "iis_gateway_location",
      "value" : "<%iis_gateway_location%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "iis_gateway_location",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "san",
      "value" : "<%san%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "san",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "iis_username",
      "value" : "<%iis_username%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "iis_username",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "certificate_group",
      "value" : "<%certificate_group%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "certificate_group",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "requestor_first_name",
      "value" : "<%requestor_first_name%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "requestor_first_name",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "validity",
      "value" : "<%validity%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "validity",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "certificate_location",
      "value" : "<%certificate_location%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "certificate_location",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "requestor_ups_team_mailbox",
      "value" : "<%requestor_ups_team_mailbox%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "requestor_ups_team_mailbox",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "creation_type",
      "value" : "<%creation_type%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "creation_type",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "installer_team_mailbox",
      "value" : "<%installer_team_mailbox%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "installer_team_mailbox",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "testnet_common_name",
      "value" : "<%testnet_common_name%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "testnet_common_name",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "change_process",
      "value" : "<%change_process%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "change_process",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "password",
      "value" : "<%password%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "password",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "firstName",
      "value" : "<%firstName%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "firstName",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "reason",
      "value" : "<%reason%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "reason",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "requestor_last_name",
      "value" : "<%requestor_last_name%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "requestor_last_name",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "prod_common_name",
      "value" : "<%prod_common_name%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "prod_common_name",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "requestor_department_name",
      "value" : "<%requestor_department_name%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "requestor_department_name",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "installer_telephone_number",
      "value" : "<%installer_telephone_number%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "installer_telephone_number",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "template_name",
      "value" : "<%template_name%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "template_name",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "windows_gateway_name",
      "value" : "<%windows_gateway_name%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "windows_gateway_name",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "select_gateway",
      "value" : "<%select_gateway%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "select_gateway",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "common_name",
      "value" : "<%common_name%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "common_name",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "loginName",
      "value" : "<%loginName%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "loginName",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "is_replacing",
      "value" : "<%is_replacing%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "is_replacing",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "iis_gateway_type",
      "value" : "<%iis_gateway_type%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "iis_gateway_type",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "requestor_employee_number",
      "value" : "<%requestor_employee_number%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "requestor_employee_number",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "username",
      "value" : "<%username%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "username",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "vendor_name",
      "value" : "<%vendor_name%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "vendor_name",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "bulk_dwnld_grp",
      "value" : "<%bulk_dwnld_grp%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "bulk_dwnld_grp",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "private_validity",
      "value" : "<%private_validity%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "private_validity",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "installer_department_number",
      "value" : "<%installer_department_number%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "installer_department_number",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "fqdn",
      "value" : "<%fqdn%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "fqdn",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "requestor_department_number",
      "value" : "<%requestor_department_number%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "requestor_department_number",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "gateway_location",
      "value" : "<%gateway_location%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "gateway_location",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "change_control_reason",
      "value" : "<%change_control_reason%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "change_control_reason",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "ssh_port",
      "value" : "<%ssh_port%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "ssh_port",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "windows_gateway_url",
      "value" : "<%windows_gateway_url%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "windows_gateway_url",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "linux_password",
      "value" : "<%linux_password%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "linux_password",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "completed_change_control",
      "value" : "<%completed_change_control%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "completed_change_control",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "requestor_telephone_number",
      "value" : "<%requestor_telephone_number%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "requestor_telephone_number",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "emailId",
      "value" : "<%emailId%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "emailId",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "verified_install_confirmation",
      "value" : "<%verified_install_confirmation%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "verified_install_confirmation",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "requestor_ups_email_address",
      "value" : "<%requestor_ups_email_address%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "requestor_ups_email_address",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "ip_address",
      "value" : "<%ip_address%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "ip_address",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "vendor_liaison_telephone",
      "value" : "<%vendor_liaison_telephone%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "vendor_liaison_telephone",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "windows_gateway",
      "value" : "<%windows_gateway%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "windows_gateway",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "iis_windows_gateway_name",
      "value" : "<%iis_windows_gateway_name%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "iis_windows_gateway_name",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "avs_entry_number",
      "value" : "<%avs_entry_number%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "avs_entry_number",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "input_type",
      "value" : "<%input_type%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "input_type",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "vendor_telephone",
      "value" : "<%vendor_telephone%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "vendor_telephone",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "iis_windows_gateway_url",
      "value" : "<%iis_windows_gateway_url%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "iis_windows_gateway_url",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "server_name",
      "value" : "<%server_name%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "server_name",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "vendor_liaison_email",
      "value" : "<%vendor_liaison_email%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "vendor_liaison_email",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "requestor_director_name",
      "value" : "<%requestor_director_name%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "requestor_director_name",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "iis_password",
      "value" : "<%iis_password%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "iis_password",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "lastName",
      "value" : "<%lastName%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "lastName",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "bulk_input_file",
      "value" : "<%bulk_input_file%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "bulk_input_file",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "cert_renewal",
      "value" : "<%cert_renewal%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "cert_renewal",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "serial_number",
      "value" : "<%serial_number%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "serial_number",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "iis_windows_gateway",
      "value" : "<%iis_windows_gateway%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "iis_windows_gateway",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "server_type",
      "value" : "<%server_type%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "server_type",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "host_name",
      "value" : "<%host_name%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "host_name",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "requestor_sr_manager_name",
      "value" : "<%requestor_sr_manager_name%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "requestor_sr_manager_name",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "gateway_type",
      "value" : "<%gateway_type%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "gateway_type",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "iis_host_name",
      "value" : "<%iis_host_name%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "iis_host_name",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "linux_username",
      "value" : "<%linux_username%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "linux_username",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    } ],
    "notificationMessage" : {
      "0" : "",
      "1" : "",
      "2" : ""
    },
    "ancestor" : null,
    "metaData" : {
      "taskHeader" : "Script",
      "hide" : false,
      "lock" : false,
      "successState" : 1,
      "failoverState" : 2,
      "taskScope" : null,
      "hideFromStageView" : false,
      "mode" : "Developer",
      "nature" : "normal",
      "lowCodeTask" : false
    },
    "parentSubFlowID" : "qIh2AzEx",
    "helpContent" : null,
    "name" : "",
    "syncExecution" : true,
    "_id" : null,
    "task_id" : "script_1",
    "task_name" : "Input Processing",
    "task_type" : "script",
    "task_category" : "script",
    "component_type" : "others",
    "setNullProperties" : true,
    "folderName" : null,
    "sub_group" : "script",
    "group_name" : "General",
    "viewable_type" : "custom",
    "scriptType" : "Python",
    "scriptContent" : "import sys\r\nimport os\r\nimport json\r\nimport gridfs\r\nfrom bson import ObjectId\r\nsys.path.insert(0,AVX::HELPER)\r\nsys.path.insert(0,AVX::DEPENDENCIES)\r\nimport UPS_Helpers\r\nimport appviewx\r\nimport csv\r\ndb = appviewx.db_connection().appviewx\r\nimport logger_util\r\nlogger = logger_util.get_logger(\"BULK CERT\")\r\n\r\n\r\nnull = None\r\nrnull = None\r\n\r\nsessionId = \"<%sessionId%>\"\r\ninput_type = \"<%input_type%>\"\r\nvalidity_hcd = \"<%validity%>\"\r\nif not validity_hcd:\r\n    validity_hcd = 1\r\n\r\n\r\ndef read_existing_file(FILE_NAME):\r\n    \"\"\"\r\n    Function to get the csv content of the file\r\n    :return: list of dict\r\n    \"\"\"\r\n    with open(FILE_NAME, encoding=\"utf8\") as f:\r\n        content = [val for val in csv.DictReader(f)]\r\n    return content\r\n\r\n\r\ndef write_file_to_appviewx(request_id, field_id, task_id, file_name):\r\n    \"\"\"\r\n    Function to write the given file to /var/tmp in AppViewX\r\n    :param db: Database connection object to AppViewX\r\n    :param request_id: RequestID of the uploaded file\r\n    :param field_id: FieldID of the uploaded file\r\n    :param task_id: TaskID of the uploaded file\r\n    :param file_name: Name of the uploaded file\r\n    :return: Path of the uploaded file\r\n    \"\"\"\r\n    with open(str(file_name), 'wb') as obj_file:\r\n        uploaded_file_id = str(db.visualworkflow_request_uploaded_files.files.find_one(\r\n            {'metadata.requestId': request_id, 'metadata.fieldId': field_id, 'metadata.taskId': task_id}, {'_id': 1})[\r\n                                   '_id'])\r\n        gfs = gridfs.GridFS(db, collection='visualworkflow_request_uploaded_files')\r\n        content = gfs.get(ObjectId(uploaded_file_id)).read()\r\n        obj_file.write(content)\r\n    return str(file_name)\r\n\r\ndef get_file_details(uploaded_file):\r\n    \"\"\"\r\n    Function to get the metadata of the uploaded file from the database\r\n    :param db: Database connection object to AppViewX\r\n    :param uploaded_file: Name of the uploaded file\r\n    :return: Path of the uploaded file\r\n    \"\"\"\r\n    file_name = uploaded_file.get('fileName', 'input_file.csv')\r\n    request_id = uploaded_file['requestId']\r\n    field_id = uploaded_file['fieldId']\r\n    task_id = uploaded_file['taskId']\r\n    logger.info(file_name)\r\n    logger.info(request_id)\r\n    logger.info(field_id)\r\n    return write_file_to_appviewx(request_id, field_id, task_id, file_name)\r\n    \r\n\r\ndef get_data():\r\n    policy_name = UPS_Helpers.get_policy_name(sessionId ,\"<%certificate_group%>\")\r\n    csr_parameters = UPS_Helpers.get_csr_params_from_policy(sessionId, policy_name)\r\n    data = {\r\n            \"creation_type\":\"<%creation_type%>\",\r\n            \"certificate_category\":\"<%certificate_type%>\",\r\n            'cert_renewal':\"<%cert_renewal%>\",\r\n            'environment':\"<%environment%>\",\r\n            'common_name': (\"<%prod_common_name%>\" if \"<%environment%>\" == \"Prod\" else \"<%testnet_common_name%>\") if \"<%certificate_type%>\" == 'Server' else \"<%common_name%>\",\r\n            'san': \"<%san%>\",\r\n            'validity': validity_hcd,\r\n            'certificate_group': \"<%certificate_group%>\",\r\n            'server_type': \"<%server_type%>\",\r\n            'server_details': \"<%server_details%>\",\r\n            'server_name': \"<%server_name%>\",\r\n            'host_name':\"<%iis_host_name%>\" if \"<%server_type%>\" == 'Microsoft IIS' else '<%host_name%>',\r\n            'ip_address': \"<%ip_address%>\",\r\n            'ssh_port': \"<%ssh_port%>\",\r\n            'credential_type': \"<%credential_type%>\",\r\n            'username': \"<%username%>\" ,\r\n            'password': \"<%password%>\",\r\n            'iis_username': \"<%iis_username%>\",\r\n            'iis_password': \"<%iis_password%>\",\r\n            \"linux_username\": \"<%linux_username%>\",\r\n            'linux_password': \"<%linux_password%>\",\r\n            'gateway_type': \"<%iis_gateway_type%>\" if \"<%server_type%>\" == 'Microsoft IIS' else \"<%gateway_type%>\",\r\n            'gateway_location': \"<%iis_gateway_location%>\" if \"<%server_type%>\" == 'Microsoft IIS' else \"<%gateway_location%>\",\r\n            'fqdn': \"<%fqdn%>\",\r\n            'port': \"<%port%>\",\r\n            'select_gateway': \"<%select_gateway%>\",\r\n            'windows_gateway_name': \"<%iis_windows_gateway_name%>\" if \"<%server_type%>\" == 'Microsoft IIS' else \"<%windows_gateway_name%>\",\r\n            'windows_gateway_url': \"<%iis_windows_gateway_url%>\" if \"<%server_type%>\" == 'Microsoft IIS' else \"<%windows_gateway_url%>\",\r\n            'windows_gateway': \"<%iis_windows_gateway%>\" if \"<%server_type%>\" == 'Microsoft IIS' else \"<%windows_gateway%>\",\r\n            'certificate_location': r\"<%certificate_location%>\",\r\n            'website_name':\"<%website_name%>\"\r\n            }\r\n\r\n    data['certificate_attributes'] = {\r\n            'requestor_employee_number':\"<%requestor_employee_number%>\",\r\n            'requestor_first_name':\"<%requestor_first_name%>\",\r\n            'requestor_last_name': \"<%requestor_last_name%>\",\r\n            'requestor_telephone_number': \"<%requestor_telephone_number%>\",\r\n            'requestor_ups_email_address': \"<%requestor_ups_email_address%>\",\r\n            'requestor_ups_team_mailbox': \"<%requestor_ups_team_mailbox%>\",\r\n            'requestor_department_name': \"<%requestor_department_name%>\",\r\n            'requestor_department_number': \"<%requestor_department_number%>\",\r\n            'requestor_manager_name': \"<%requestor_manager_name%>\",\r\n            'requestor_sr_manager_name': \"<%requestor_sr_manager_name%>\",\r\n            'requestor_director_name': \"<%requestor_director_name%>\",\r\n            'avs_entry_number': \"<%avs_entry_number%>\",\r\n            'application_name': \"<%application_name%>\",\r\n            'installer_name': \"<%installer_name%>\",\r\n            'installer_department_number': \"<%installer_department_number%>\",\r\n            'installer_team_mailbox': \"<%installer_team_mailbox%>\",\r\n            'installer_telephone_number': \"<%installer_telephone_number%>\",\r\n            'completed_change_control': \"<%completed_change_control%>\",\r\n            'read_and_agree_checkbox': \"<%read_and_agree_checkbox%>\",\r\n            'verified_install_confirmation': \"<%verified_install_confirmation%>\",\r\n            'vendor_hosted': \"<%vendor_hosted%>\",\r\n            'vendor_name': \"<%vendor_name%>\",\r\n            'vendor_telephone': \"<%vendor_telephone%>\",\r\n            'vendor_email_address': \"<%vendor_email_address%>\",\r\n            'vendor_liaison': \"<%vendor_liaison%>\",\r\n            'vendor_liaison_telephone': \"<%vendor_liaison_telephone%>\",\r\n            'vendor_liaison_email': \"<%vendor_liaison_email%>\",\r\n            'website_name' : \"<%website_name%>\",\r\n            'change_process_id' : \"<%change_process%>\",\r\n            'reason' : \"<%reason%>\",\r\n            \"change_control_reason\" : \"<%change_control_reason%>\",\r\n            \"is_replacing\":\"<%is_replacing%>\",\r\n            \"cname_replaced\": \"<%cname_replaced%>\",\r\n            \"serial_number\":\"<%serial_number%>\",\r\n            'notes_comments' : \"<%notes_comments%>\",\r\n            'private_validity' : \"<%private_validity%>\",\r\n            'bulk_dwnld_grp' : \"<%bulk_dwnld_grp%>\",\r\n            'smc_grp' : \"<%smc_grp%>\"\r\n            }\r\n\r\n    if \"<%server_type%>\" == \"Linux\":\r\n        data.update({'username': \"<%linux_username%>\", 'password': \"<%linux_password%>\"})\r\n    if \"<%server_type%>\" == \"Microsoft IIS\":\r\n        data.update({'username': \"<%iis_username%>\", 'password': \"<%iis_password%>\"})\r\n\r\n    logger.info('EACH DATA')\r\n    logger.info(data)\r\n    data.update(csr_parameters)\r\n    return [data]\r\n\r\ndef get_file_content(file_name):\r\n    input_data = []\r\n    file_content = read_existing_file(file_name)\r\n    for line in file_content:\r\n        data = dict()\r\n        field_values = line\r\n        try:\r\n            policy_name = UPS_Helpers.get_policy_name(sessionId, field_values[\"Certificate Group(*)\"])\r\n        except:\r\n            raise ValueError(field_values)\r\n        csr_parameters = UPS_Helpers.get_csr_params_from_policy(sessionId, policy_name)\r\n        logger.info(\"CSR PARAMETERS\")\r\n        logger.info(csr_parameters)\r\n\r\n        data = {\r\n            \"creation_type\": field_values[\"Creation Type(*)\"],\r\n            \"certificate_category\": field_values[\"Certificate Type(*)\"],\r\n            # 'cert_renewal': field_values[2],\r\n            'environment': field_values[\"Environment(*)\"],\r\n            'common_name': field_values[\"Certificate Common Name(*)\"],\r\n            'san': '' if \"elite\" in \"<%template_name%>\".lower() else field_values.get(\"Subject Alternative Name\",\"\"),\r\n            'validity': field_values[\"Validity(*)\"],\r\n            'certificate_group':field_values[\"Certificate Group(*)\"],\r\n            'server_type': field_values.get(\"Server Type\",\"\"),\r\n            'server_details': field_values.get(\"Server Details\",\"\"),\r\n            'server_name': field_values.get(\"Server Name\",\"\"),\r\n            'host_name':field_values.get(\"Host Name\",\"\"),\r\n            'ip_address': field_values.get(\"IP Address\",\"\"),\r\n            'ssh_port': field_values.get(\"SSH Port\",\"\"),\r\n            'credential_type': field_values.get(\"Credential Type\",\"\"),\r\n            'username': field_values.get(\"Username\",\"\"),\r\n            'password': field_values.get(\"Password\",\"\"),\r\n            'gateway_type': field_values.get(\"Gateway type\",\"\"),\r\n            'gateway_location': field_values.get(\"Gateway Location\",\"\"),\r\n            'fqdn': field_values.get(\"FQDN\",\"\"),\r\n            'port': field_values.get(\"Port\",\"\"),\r\n            'select_gateway': field_values.get(\"Select Gateway\",\"\"),\r\n            'windows_gateway_name': field_values.get(\"Windows Gateway Name\",\"\"),\r\n            'windows_gateway_url': field_values.get(\"Windows Gateway URL\",\"\"),\r\n            'windows_gateway': field_values.get(\"Windows Gateway\",\"\"),\r\n            'certificate_location': field_values.get(\"Certificate Location\",\"\"),\r\n             #'private_validity' : field_values[97],\r\n            'website_name': field_values.get(\"Name of Website / Application\",\"\")\r\n        }\r\n\r\n        data['certificate_attributes'] = {\r\n            'requestor_employee_number': field_values[\"Requestor Employee Number(*)\"],#\"<%loginName%>\",#field_values[8],\r\n            'requestor_first_name': field_values[\"Requestor First Name(*)\"],#\"<%firstName%>\",#field_values[9],\r\n            'requestor_last_name': field_values[\"Requestor Last Name(*)\"],#\"<%lastName%>\",#field_values[10],\r\n            'requestor_telephone_number': field_values[\"Requestor Telephone Number(*)\"],\r\n            'requestor_ups_email_address': field_values[\"Requestor UPS Email Address(*)\"],#\"<%emailId%>\",#field_values[12],\r\n            'requestor_ups_team_mailbox': field_values[\"Requestor UPS Team Mailbox\"],\r\n            'requestor_department_name': field_values[\"Requestor Department Name(*)\"],\r\n            'requestor_department_number': field_values[\"Requestor Department Number(*)\"],\r\n            'requestor_manager_name': field_values[\"Requestor Immediate Manager Name(*)\"],\r\n            'requestor_sr_manager_name': field_values[\"Requestor Sr. Manager Name(*)\"],\r\n            'requestor_director_name': field_values[\"Status Report Manager(*)\"],\r\n            'avs_entry_number': field_values[\"AVS Entry Number(*)\"],\r\n            'application_name': field_values[\"Application Name(*)\"],\r\n            'installer_name': field_values.get(\"Name of Installer\",\"\"),\r\n            'installer_department_number': field_values.get(\"Department Number of Installer\",\"\"),\r\n            # 'installer_team_mailbox': field_values[41],\r\n            # 'installer_telephone_number': field_values[42],\r\n            'completed_change_control': field_values[\"Have you completed the required change control ?(*)\"],\r\n            'change_control_reason' : field_values.get(\"Change Reason/Comments\",\"\"),\r\n            'change_process_id' : field_values.get(\"Change process ID\",\"\"),\r\n            # 'read_and_agree_checkbox': field_values[44],\r\n            'verified_install_confirmation': field_values.get(\"Have you verified / tested your installation procedures in TestNet?(*)\",\"\"),\r\n            'reason' : field_values.get(\"Reason/Comments\",\"\"),\r\n            'vendor_hosted': field_values[\"Vendor Hosted ?(*)\"],\r\n            'vendor_name': field_values.get(\"Vendor Name\",\"\"),\r\n            # 'vendor_telephone': field_values[48],\r\n            # 'vendor_email_address': field_values[49],\r\n            'vendor_liaison': field_values.get(\"Vendor Liaison UPS Contact\",\"\"),\r\n            'vendor_liaison_telephone': field_values.get(\"Vendor Liaison Telephone\",\"\"),\r\n            'vendor_liaison_email': field_values.get(\"Vendor Liaison Email address\",\"\"),\r\n            \"is_replacing\":field_values.get(\"Is this request replacing a currently installed certificate?\",\"\"),\r\n            'cname_replaced':field_values.get(\"Common Name of Certificate Being Replaced:\",\"\"),\r\n            'serial_number' : field_values.get(\"Serial Number of certificate being replaced:\",\"\"),\r\n            'notes_comments' : field_values.get(\"Additional Notes or Comment\",\"\"),\r\n            'private_validity' : field_values.get(\"Private Certificate Validity\",\"\"),\r\n            'bulk_dwnld_grp' : field_values.get(\"Bulk Download Group Identifier\",\"\"),\r\n             'smc_grp' : field_values.get(\"SMC Assignment Group Name\",\"\")\r\n            }\r\n\r\n        logger.info('EACH DATA')\r\n        logger.info(data)\r\n        data.update(csr_parameters)\r\n        input_data.append(data)\r\n    logger.info(input_data)\r\n    return input_data    \r\n\r\nif __name__ == '__main__':\r\n    output = list()\r\n    status_list = list()\r\n    if input_type == 'Bulk Input':\r\n        file_name = get_file_details('<%bulk_input_file%>')\r\n        csr_parameters = get_file_content(file_name)\r\n    else:\r\n        csr_parameters = get_data()\r\n    logger.info(\"OUTPUT\")\r\n    logger.info(csr_parameters)\r\n    doc_hyperlink = eval(json.dumps(\"\"\"<a href=\"https://wss.inside.ups.com/sites/InfSec/IAM/Digital_Certificate_Management/SitePages/Home.aspx\">Digial Certificate Home Page </a>\"\"\"))\r\n    AVX::OUTPUT({'csr_parameters': csr_parameters, \"status_list\": status_list,\"doc_hyperlink\":doc_hyperlink})\r\n",
    "http_method" : "POST",
    "action_id" : "run-script"
  }, {
    "uniqueId" : null,
    "directoryUniqueId" : null,
    "source" : null,
    "tags" : [ ],
    "userName" : null,
    "objectType" : "TaskDetails",
    "sourceControlSettings" : null,
    "description" : null,
    "historyReferences" : [ "5e331b9d28c04c1fc6cb8d60", "5e33205128c04c1fc6cb8d9a", "5e396e38facc3a1372b870fb", "5e31e51a28c04c1fc6cb6036", "5e31e51828c04c1fc6cb6034", "5e31e56d28c04c1fc6cb6049", "5e331fd828c04c1fc6cb8d93", "5e31e50f28c04c1fc6cb602f", "5e331b9828c04c1fc6cb8d5d" ],
    "usedHistory" : "665670a07bc1abb0989999da4c9b4ad9",
    "sampleInput" : null,
    "sampleOutput" : null,
    "contentTab" : null,
    "successiveTasks" : { },
    "flowPathID" : null,
    "ignoredForStatusComputation" : false,
    "flowName" : "Cert create OOB",
    "subFlowID" : "wXuhN9bL",
    "globalData" : null,
    "input" : [ ],
    "notificationMessage" : null,
    "ancestor" : null,
    "metaData" : {
      "taskHeader" : "For",
      "hide" : false,
      "lock" : false,
      "successState" : 1,
      "failoverState" : 2,
      "taskScope" : null,
      "hideFromStageView" : false,
      "mode" : "Developer",
      "nature" : null,
      "lowCodeTask" : false
    },
    "parentSubFlowID" : "owy9e09I",
    "helpContent" : null,
    "loopVariables" : {
      "certificate_details" : "<%csr_parameters%>"
    },
    "rule" : {
      "not" : false,
      "condition" : "AND",
      "rules" : [ {
        "operator" : "==",
        "value" : "",
        "comparedValue" : ""
      } ]
    },
    "continueOnFailure" : true,
    "joinTaskToReset" : [ ],
    "loopVariableInterceptor" : false,
    "flowIdsToEndLoop" : [ ],
    "_id" : null,
    "task_id" : "startLoop_1",
    "task_name" : "Certificate Creation",
    "task_type" : "loop",
    "task_category" : "startLoop",
    "component_type" : "others",
    "setNullProperties" : true,
    "folderName" : null,
    "sub_group" : "loop",
    "group_name" : "General",
    "viewable_type" : "custom"
  }, {
    "uniqueId" : null,
    "directoryUniqueId" : null,
    "source" : null,
    "tags" : [ ],
    "userName" : null,
    "objectType" : "TaskDetails",
    "sourceControlSettings" : null,
    "description" : null,
    "historyReferences" : [ "5e31e50f28c04c1fc6cb6031", "5e33b98a28c04c1fc6cbb78b", "5e33df2728c04c1fc6cbbc09", "5e396e38facc3a1372b870fc", "5e33defb28c04c1fc6cbbbe3", "5e31e51c28c04c1fc6cb603a", "5e33b5a928c04c1fc6cbb72e", "5e31e51d28c04c1fc6cb603c", "5e31e56d28c04c1fc6cb604a", "5e331b9d28c04c1fc6cb8d61", "5e334bd928c04c1fc6cb91fc", "5e334f4328c04c1fc6cb9510", "5e331b9828c04c1fc6cb8d5e" ],
    "usedHistory" : "ec3b692dc6bd78e0c22f573cc0faa131",
    "sampleInput" : null,
    "sampleOutput" : null,
    "contentTab" : null,
    "successiveTasks" : {
      "incoming" : [ {
        "taskId" : "join_1",
        "taskName" : null,
        "subflowId" : "wXuhN9bL",
        "parentSubflowId" : "owy9e09I",
        "taskType" : "start",
        "flowName" : null,
        "linkType" : null
      } ],
      "success" : [ {
        "taskId" : "grid_1",
        "taskName" : null,
        "subflowId" : "wXuhN9bL",
        "parentSubflowId" : "owy9e09I",
        "taskType" : "grid",
        "flowName" : null,
        "linkType" : null
      } ]
    },
    "flowPathID" : null,
    "ignoredForStatusComputation" : false,
    "flowName" : null,
    "subFlowID" : null,
    "globalData" : null,
    "input" : [ ],
    "notificationMessage" : null,
    "ancestor" : null,
    "metaData" : {
      "taskHeader" : "For",
      "hide" : false,
      "lock" : false,
      "successState" : 1,
      "failoverState" : 2,
      "taskScope" : null,
      "hideFromStageView" : false,
      "mode" : "Developer",
      "nature" : "normal",
      "lowCodeTask" : false
    },
    "parentSubFlowID" : null,
    "helpContent" : null,
    "loopVariables" : null,
    "rule" : null,
    "continueOnFailure" : false,
    "joinTaskToReset" : [ ],
    "loopVariableInterceptor" : false,
    "flowIdsToEndLoop" : [ ],
    "_id" : null,
    "task_id" : "endLoop_1",
    "task_name" : "Certificate Creation",
    "task_type" : "loop",
    "task_category" : "endLoop",
    "component_type" : "others",
    "setNullProperties" : true,
    "folderName" : null,
    "sub_group" : "loop",
    "group_name" : "General",
    "viewable_type" : "default"
  }, {
    "uniqueId" : null,
    "directoryUniqueId" : null,
    "source" : null,
    "tags" : [ ],
    "userName" : null,
    "objectType" : "TaskDetails",
    "sourceControlSettings" : null,
    "description" : "",
    "historyReferences" : [ "5e33204928c04c1fc6cb8d98", "5e33436028c04c1fc6cb90b3", "5e396e57facc3a1372b87100", "5e331ffa28c04c1fc6cb8d96", "5e33205128c04c1fc6cb8d9b", "5e33365928c04c1fc6cb906e", "5e33205728c04c1fc6cb8d9d", "5e33209828c04c1fc6cb8dae", "5e33205c28c04c1fc6cb8da0", "5e996e26005e355cf216722b", "5e3bc691facc3a1372b8caf9", "5e3bcb77facc3a1372b8cb22", "5e996da5005e355cf2167228", "5e333f6828c04c1fc6cb909a" ],
    "usedHistory" : "339f16c86b845a5dd4de3c3264b4b2b0",
    "sampleInput" : null,
    "sampleOutput" : null,
    "contentTab" : null,
    "successiveTasks" : {
      "incoming" : [ {
        "taskId" : "startLoop_1",
        "taskName" : null,
        "subflowId" : "wXuhN9bL",
        "parentSubflowId" : "owy9e09I",
        "taskType" : "start",
        "flowName" : null,
        "linkType" : null
      } ],
      "success" : [ {
        "taskId" : "decision_1",
        "taskName" : null,
        "subflowId" : "wXuhN9bL",
        "parentSubflowId" : "owy9e09I",
        "taskType" : "decision",
        "flowName" : null,
        "linkType" : null
      } ]
    },
    "flowPathID" : null,
    "ignoredForStatusComputation" : false,
    "flowName" : "Cert create OOB",
    "subFlowID" : "wXuhN9bL",
    "globalData" : null,
    "input" : [ {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "sessionId",
      "value" : "<%sessionId%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "sessionId",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "certificate_details",
      "value" : "<%certificate_details%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "certificate_details",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    } ],
    "notificationMessage" : {
      "0" : "",
      "1" : "",
      "2" : ""
    },
    "ancestor" : null,
    "metaData" : {
      "taskHeader" : "Script",
      "hide" : false,
      "lock" : false,
      "successState" : 1,
      "failoverState" : 2,
      "taskScope" : null,
      "hideFromStageView" : false,
      "mode" : "Developer",
      "nature" : "normal",
      "lowCodeTask" : false
    },
    "parentSubFlowID" : "owy9e09I",
    "helpContent" : null,
    "name" : "",
    "syncExecution" : true,
    "_id" : null,
    "task_id" : "script_2",
    "task_name" : "Manage Servers",
    "task_type" : "script",
    "task_category" : "script",
    "component_type" : "others",
    "setNullProperties" : true,
    "folderName" : null,
    "sub_group" : "script",
    "group_name" : "General",
    "viewable_type" : "custom",
    "scriptType" : "Python",
    "scriptContent" : "import sys\r\nimport os\r\nimport json\r\nimport base64\r\nimport requests\r\nfrom multiprocessing import Pool\r\nsys.path.insert(0,AVX::HELPER)\r\nsys.path.insert(0,AVX::DEPENDENCIES)\r\nimport appviewx\r\ndb = appviewx.db_connection().appviewx\r\nimport logger_util\r\nlogger = logger_util.get_logger(\"BULK CERT\")\r\n\r\nnull = None\r\n\r\ncsr = \"<%csr_parameters[<%certificate_details%>]%>\"\r\n\r\ndef encrypt_password(password):\r\n    if password:\r\n        enc_pass = base64.b64encode(password.encode(\"utf-8\"))\r\n        encrypted_pass = str(enc_pass,\"utf-8\")\r\n        return encrypted_pass\r\n    return ''\r\n\r\n\r\ndef fetch_gateway_key():\r\n   '''\r\n   fetch the gateway key from appviewx config file\r\n   :return: appviewx gateway key\r\n   '''\r\n   conf_content = {}\r\n   abs_path = os.path.dirname(os.path.abspath(__file__))\r\n   prop_file_path = abs_path + \"/../properties/appviewx.properties\"\r\n   prop_file = open(prop_file_path)\r\n   prop_file_lines = prop_file.readlines()\r\n   for line in prop_file_lines:\r\n       if line is not \"\\n\" and \"GATEWAY_KEY\" in line or \"GATEWAY_BASE_URL\" in line:\r\n           conf_content[line.split(\"=\")[0]] = line.split(\"=\")[1].replace(\"\\n\",\"\")\r\n   return conf_content['GATEWAY_BASE_URL'], conf_content['GATEWAY_KEY']\r\n   prop_file.close()\r\n\r\ngateway_url, gateway_key = fetch_gateway_key()\r\n\r\ndef get_manage_microsoft_server_payload(csr):\r\n    '''\r\n    Method to generate payload to add Apache and Tomcat server to the inventory\r\n    '''\r\n    payload = {\r\n    \"primary\": [{\r\n        \"vendor\": \"Microsoft Server\",\r\n        \"access\": [{\r\n            \"userName\": csr.get('username', ''),\r\n            \"password\": encrypt_password(csr.get('password', '')),\r\n            \"accessType\": \"iControl\"\r\n        }],\r\n        \"module\": [],\r\n        \"deviceType\": [],\r\n        \"deviceCommunicationPort\": {},\r\n        \"name\": csr.get(\"server_name\", ''),\r\n        \"hostName\": csr.get(\"host_name\", ''),\r\n        \"dataCenter\": \"\",\r\n        \"manageCertificate\": \"Managed\",\r\n        \"credentialType\": \"Manual Entry\",\r\n        \"_id\": \"\",\r\n        \"category\": \"Server\",\r\n        \"subsystem\": \"Other Devices\",\r\n        \"status\": \"Inprogress\",\r\n        \"windowsGateway\": {\r\n            \"type\": csr.get(\"gateway_type\", '').upper(),\r\n            \"location\": csr.get(\"gateway_location\", '').upper(),\r\n            \"gatewayType\": csr.get(\"select_gateway\", '').lower(),\r\n            \"certKeyFile\": \"\",\r\n            \"undefined\": \"\",\r\n            \"clientCertificateId\": \"\",\r\n            \"pushAgentInstalled\": False\r\n        },\r\n        \"agentUrl\": csr.get('windows_gateway', ''),\r\n        \"certificateDetails\": [{\r\n            \"certificateLocation\": csr.get(\"certificate_location\", ''),\r\n            \"password\": \"\"\r\n        }]\r\n    }],\r\n    \"secondary\": []\r\n}\r\n\r\n    if payload['primary'][0]['windowsGateway']['gatewayType'] == \"new\":\r\n        payload['primary'][0]['windowsGateway'].update({\"name\": csr.get(\"windows_gateway_name\", ''), \"url\": csr.get(\"windows_gateway_url\", '')})\r\n    else:\r\n        payload['primary'][0]['windowsGateway'].update({\"agentUrl\": csr.get('windows_gateway', '')})\r\n    \r\n    logger.info(\"Microsoft - payload\")\r\n    logger.info(payload)\r\n    return {\"payload\":payload}\r\n\r\n\r\n\r\ndef get_manage_microsoft_iis_server_payload(csr):\r\n    '''\r\n    Method to generate payload to add Apache and Tomcat server to the inventory\r\n    '''\r\n    payload = {\r\n    \"primary\": [{\r\n        \"vendor\": \"IIS\",\r\n        \"access\": [{\r\n            \"accessType\": \"iControl\"\r\n        }],\r\n        \"module\": [],\r\n        \"deviceType\": [],\r\n        \"deviceCommunicationPort\": {},\r\n        \"name\": csr.get(\"server_name\", ''),\r\n        \"hostName\": csr.get(\"host_name\", ''),\r\n        \"dataCenter\": \"\",\r\n        \"manageCertificate\": \"Managed\",\r\n        \"credentialType\": csr.get('credential_type'),\r\n        \"_id\": \"\",\r\n        \"category\": \"Server\",\r\n        \"subsystem\": \"Other Devices\",\r\n        \"status\": \"Inprogress\",\r\n        \"windowsGateway\": {\r\n            \"type\": csr.get(\"gateway_type\", '').upper(),\r\n            \"location\": csr.get(\"gateway_location\", '').upper(),\r\n            \"gatewayType\": csr.get(\"select_gateway\", '').lower(),\r\n            \"certKeyFile\": \"\",\r\n            \"undefined\": \"\",\r\n            \"clientCertificateId\": \"\",\r\n            \"pushAgentInstalled\": False\r\n        },\r\n        \"vendorSpecificDetails\":{\r\n            \"locationTypes\":[\r\n               \"Certificate store\"\r\n            ],\r\n            \"folderCredentialDetails\":{\r\n\r\n            }\r\n         },\r\n        \"certificateDetails\": [{\r\n        }]\r\n    }],\r\n    \"secondary\": []\r\n}\r\n\r\n    if payload['primary'][0]['credentialType'] == 'Manual Entry':\r\n        payload['primary'][0]['access'][0].update({\"username\": csr.get('username'), \"password\": encrypt_password(csr.get('password', ''))})\r\n\r\n    if payload['primary'][0]['windowsGateway']['location'] == \"Remote\":\r\n        if payload['primary'][0]['windowsGateway']['gatewayType'] == \"new\":\r\n            payload['primary'][0]['windowsGateway'].update({\"name\": csr.get(\"windows_gateway_name\", ''), \"url\": csr.get(\"windows_gateway_url\", '')})\r\n        else:\r\n            payload['primary'][0]['windowsGateway'].update({\"agentUrl\": csr.get('windows_gateway', '')})\r\n    else:\r\n        payload['primary'][0]['windowsGateway'].update({\"ip\": csr.get('fqdn'), \"localPort\": csr.get(\"port\")})\r\n\r\n    logger.info(\"Microsoft IIS - payload\")\r\n    logger.info(payload)\r\n    return {\"payload\":payload}\r\n\r\ndef get_manage_linux_server_payload(csr):\r\n    payload = {\r\n        \"primary\": [{\r\n            \"vendor\": \"LinuxServer\",\r\n            \"access\": [{\r\n                \"userName\": csr.get('username'),\r\n                \"password\": encrypt_password(csr.get('password', '')),\r\n                \"accessType\": \"iControl\"\r\n            }],\r\n            \"module\": [],\r\n            \"deviceType\": [],\r\n            \"deviceCommunicationPort\": {\r\n                \"sshPort\": \"22\"\r\n            },\r\n            \"name\": csr.get(\"server_name\"),\r\n            \"ip\": csr.get('ip_address', ''),\r\n            \"dataCenter\": \"\",\r\n            \"sftpPort\": \"22\",\r\n            \"manageCertificate\": \"Managed\",\r\n            \"credentialType\": \"Manual Entry\",\r\n            \"_id\": \"\",\r\n            \"category\": \"Server\",\r\n            \"subsystem\": \"Other Devices\",\r\n            \"status\": \"Inprogress\",\r\n            \"certificateDetails\": [{\r\n                \"certificateLocation\": csr.get(\"certificate_location\", '')\r\n            }],\r\n            \"vendorSpecificDetails\": {\r\n                \"accessElevation\": \"sudo\"\r\n            }\r\n        }],\r\n        \"secondary\": []\r\n    }\r\n    \r\n    logger.info(\"Linux - payload\")\r\n    logger.info(payload)\r\n    return {\"payload\":payload}\r\n\r\ndef add_new_server(csr):\r\n    '''\r\n    Method to add new server to the inventory\r\n    '''\r\n    logger.info('MANAGE SERVERS')\r\n    if csr.get('server_details') == 'Add New Server' and csr.get(\"creation_type\") == \"Create and Push Certificate\":\r\n        if csr['server_type'] == \"Microsoft\": payload = get_manage_microsoft_server_payload(csr)\r\n        if csr['server_type'] == \"Microsoft IIS\": payload = get_manage_microsoft_iis_server_payload(csr)\r\n        if csr['server_type'] == \"Linux\": payload = get_manage_linux_server_payload(csr)\r\n        url = '{}avxapi/miscdevice-add?gwkey={}&gwsource=external'.format(gateway_url, gateway_key)\r\n        headers = {'Content-Type':'application/json', 'sessionId':'<%sessionId%>'}\r\n        response = requests.post(url = url, headers = headers, data = json.dumps(payload), verify = False)\r\n        logger.info(\"add device\")\r\n        logger.info(response.text)\r\n        if response.json()['response'] == csr['server_name']:\r\n            status = db.device.find_one({'name': csr['server_name']}, {'status':1})['status']\r\n            while status in ['Inprogress', 'Queued']:\r\n                status = db.device.find_one({'name': csr['server_name']}, {'status':1})['status']\r\n                if status == 'Managed':\r\n                    AVX::LOG(csr['server_name'] + ' Added Successfully')\r\n            if status != 'Managed':\r\n                AVX::LOG(csr['server_name'] + ' Add Failed')\r\n                AVX::OUTPUT({},2)\r\n        AVX::LOG(response.json()['message'])\r\n\r\n\r\nif __name__ == '__main__':\r\n    '''\r\n    Main Method\r\n    '''\r\n    certificate_authority = csr['certificate_authority']\r\n    add_new_server(csr)\r\n    AVX::OUTPUT({'certificate_authority': certificate_authority})\r\n",
    "http_method" : "POST",
    "action_id" : "run-script"
  }, {
    "uniqueId" : null,
    "directoryUniqueId" : null,
    "source" : null,
    "tags" : [ ],
    "userName" : null,
    "objectType" : "TaskDetails",
    "sourceControlSettings" : null,
    "description" : null,
    "historyReferences" : [ "5e33209628c04c1fc6cb8dab", "5e33209828c04c1fc6cb8daf", "5e33206d28c04c1fc6cb8da4", "5e33209428c04c1fc6cb8da8", "5e33209028c04c1fc6cb8da6" ],
    "usedHistory" : "7b0042d8050f7b40b323251d763db9ee",
    "sampleInput" : null,
    "sampleOutput" : null,
    "contentTab" : null,
    "successiveTasks" : {
      "Check_CA" : [ {
        "taskId" : "AppViewXcreatecertificates_4",
        "taskName" : null,
        "subflowId" : "wXuhN9bL",
        "parentSubflowId" : "owy9e09I",
        "taskType" : "flow",
        "flowName" : null,
        "linkType" : null
      } ],
      "Failed" : [ {
        "taskId" : "AppViewXcreatecertificates_5",
        "taskName" : null,
        "subflowId" : "wXuhN9bL",
        "parentSubflowId" : "owy9e09I",
        "taskType" : "flow",
        "flowName" : null,
        "linkType" : null
      } ],
      "incoming" : [ {
        "taskId" : "script_2",
        "taskName" : null,
        "subflowId" : "wXuhN9bL",
        "parentSubflowId" : "owy9e09I",
        "taskType" : "start",
        "flowName" : null,
        "linkType" : null
      } ]
    },
    "flowPathID" : null,
    "ignoredForStatusComputation" : false,
    "flowName" : "Cert create OOB",
    "subFlowID" : "wXuhN9bL",
    "globalData" : null,
    "input" : [ {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "certificate_authority",
      "value" : "<%certificate_authority%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "certificate_authority",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    } ],
    "notificationMessage" : null,
    "ancestor" : null,
    "metaData" : {
      "taskHeader" : "If",
      "hide" : false,
      "lock" : false,
      "successState" : 1,
      "failoverState" : 2,
      "taskScope" : null,
      "hideFromStageView" : false,
      "mode" : "Developer",
      "nature" : "normal",
      "lowCodeTask" : false
    },
    "parentSubFlowID" : "owy9e09I",
    "helpContent" : null,
    "rule" : {
      "not" : false,
      "condition" : "AND",
      "rules" : [ {
        "operator" : "==",
        "value" : "<%certificate_authority%>",
        "comparedValue" : "Microsoft Enterprise"
      } ]
    },
    "_id" : null,
    "task_id" : "decision_1",
    "task_name" : "If",
    "task_type" : "decision",
    "task_category" : "decision",
    "component_type" : "others",
    "setNullProperties" : true,
    "folderName" : null,
    "sub_group" : "decision",
    "group_name" : "General",
    "viewable_type" : "custom",
    "rule_name" : "Check_CA"
  }, {
    "uniqueId" : null,
    "directoryUniqueId" : null,
    "source" : null,
    "tags" : [ ],
    "userName" : null,
    "objectType" : "TaskDetails",
    "sourceControlSettings" : null,
    "description" : null,
    "historyReferences" : [ "5e33df2828c04c1fc6cbbc0e", "5f46ab1ee876b464d0a7549d", "5f5f91a175715a637fef05fd", "5f36c7e5e876b464d0a44230", "5f1979e1211d593ce57cc9ad", "5f5f928dc3d56076c71dacf9", "5f36ea4f16749c335f17d941", "5f44042916749c335f1a4caf", "5e33e0ab28c04c1fc6cbbc51", "5f197a36211d593ce57cc9b4", "5e33df2428c04c1fc6cbbc04", "5f5f8dd8c3d56076c71dace5", "5f5f73d5abff755debcbc148", "5e33df0128c04c1fc6cbbbeb", "5f5bcf19653c601144d31a54", "5f5f7add653c601144d32277", "5f1979d5211d593ce57cc9ab", "5f5f73d9abff755debcbc14b", "5f5f7b17abff755debcbc16f", "5e33df2728c04c1fc6cbbc0a", "5f5f72fbabff755debcbc142" ],
    "usedHistory" : "d47f3a91123b9260ad4abdba51ed0ede",
    "sampleInput" : null,
    "sampleOutput" : null,
    "contentTab" : null,
    "successiveTasks" : {
      "incoming" : [ {
        "taskId" : "endLoop_1",
        "taskName" : null,
        "subflowId" : "wXuhN9bL",
        "parentSubflowId" : "owy9e09I",
        "taskType" : "start",
        "flowName" : null,
        "linkType" : null
      } ],
      "success" : [ {
        "taskId" : "decision_3",
        "taskName" : null,
        "subflowId" : "XrwrzBIA",
        "parentSubflowId" : "qIh2AzEx",
        "taskType" : "decision",
        "flowName" : null,
        "linkType" : null
      } ]
    },
    "flowPathID" : null,
    "ignoredForStatusComputation" : false,
    "flowName" : "Cert create OOB",
    "subFlowID" : "XrwrzBIA",
    "globalData" : null,
    "input" : [ {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "status_list",
      "value" : "<%status_list%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "status_list",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    } ],
    "notificationMessage" : {
      "401" : ""
    },
    "ancestor" : null,
    "metaData" : {
      "taskHeader" : "Grid",
      "hide" : false,
      "lock" : false,
      "successState" : 1,
      "failoverState" : 2,
      "taskScope" : null,
      "hideFromStageView" : false,
      "mode" : "Developer",
      "nature" : "normal",
      "lowCodeTask" : false
    },
    "parentSubFlowID" : "qIh2AzEx",
    "helpContent" : null,
    "dynamicAuth" : "",
    "regexList" : null,
    "regexOperation" : null,
    "regexPattern" : null,
    "accessMode" : null,
    "proceedProcess" : "Submit",
    "breakdownProcess" : "Back",
    "cancelProcess" : "Cancel",
    "saveDraftProcess" : "Save draft",
    "closeProcess" : "Exit",
    "enableSaveDraft" : false,
    "enableCancel" : true,
    "enableClose" : false,
    "enableAutoApprove" : true,
    "enableBreakDown" : false,
    "_id" : null,
    "task_id" : "grid_1",
    "task_name" : "Grid",
    "task_type" : "grid",
    "task_category" : "grid",
    "component_type" : "grid",
    "setNullProperties" : true,
    "folderName" : null,
    "sub_group" : "grid",
    "group_name" : "User interface",
    "viewable_type" : "custom",
    "aclIdentifiers" : [ {
      "displayName" : "super access",
      "accessMode" : "RW",
      "selected" : true
    } ],
    "gridColumns" : [ {
      "id" : null,
      "label" : "Common Name",
      "value" : "",
      "manualValidation" : false
    }, {
      "id" : null,
      "label" : "Certificate Creation Status",
      "value" : "",
      "manualValidation" : false
    }, {
      "id" : null,
      "label" : "Certificate Push Status",
      "value" : "",
      "manualValidation" : false
    } ],
    "exportData" : null,
    "editable" : false,
    "gridData" : "<%status_list%>"
  }, {
    "uniqueId" : null,
    "directoryUniqueId" : null,
    "source" : null,
    "tags" : [ ],
    "userName" : null,
    "objectType" : "TaskDetails",
    "sourceControlSettings" : null,
    "description" : "",
    "historyReferences" : [ "5f197a31211d593ce57cc9b2", "5f6355b8c3d56076c71db431", "5f5f7455abff755debcbc156", "5f5f7c0a653c601144d32288", "5f5fa7a675715a637fef0691", "5f1979e9211d593ce57cc9b0", "5f197a39211d593ce57cc9b7", "5f197a36211d593ce57cc9b5", "5f26702345bca92f8fdd0b7a", "5f197a49211d593ce57cc9ba", "5f5f73d5abff755debcbc149", "5f6355d375715a637ff082b3", "5f197a5e211d593ce57cc9bc", "5f5f7c01653c601144d32285", "5f266f8345bca92f8fdd0b78" ],
    "usedHistory" : "8525119badbb5cf9aa500102b2d0c41e",
    "sampleInput" : null,
    "sampleOutput" : null,
    "contentTab" : null,
    "successiveTasks" : {
      "incoming" : [ {
        "taskId" : "join_2",
        "taskName" : null,
        "subflowId" : "XrwrzBIA",
        "parentSubflowId" : "qIh2AzEx",
        "taskType" : "start",
        "flowName" : null,
        "linkType" : null
      } ],
      "success" : [ {
        "taskId" : "join_5",
        "taskName" : null,
        "subflowId" : "XrwrzBIA",
        "parentSubflowId" : "qIh2AzEx",
        "taskType" : "join",
        "flowName" : null,
        "linkType" : null
      } ]
    },
    "flowPathID" : null,
    "ignoredForStatusComputation" : false,
    "flowName" : "Cert create OOB",
    "subFlowID" : "XrwrzBIA",
    "globalData" : null,
    "input" : [ {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "cert_url",
      "value" : "<%cert_url%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "cert_url",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    } ],
    "notificationMessage" : {
      "0" : "",
      "1" : "To Download the certificate : <%cert_url%>",
      "2" : ""
    },
    "ancestor" : null,
    "metaData" : {
      "taskHeader" : "Script",
      "hide" : false,
      "lock" : false,
      "successState" : 1,
      "failoverState" : 2,
      "taskScope" : null,
      "hideFromStageView" : false,
      "mode" : "Developer",
      "nature" : "normal",
      "lowCodeTask" : false
    },
    "parentSubFlowID" : "qIh2AzEx",
    "helpContent" : null,
    "name" : "",
    "syncExecution" : true,
    "_id" : null,
    "task_id" : "script_3",
    "task_name" : "Please Navigate to Certificate Inventory",
    "task_type" : "script",
    "task_category" : "script",
    "component_type" : "others",
    "setNullProperties" : true,
    "folderName" : null,
    "sub_group" : "script",
    "group_name" : "General",
    "viewable_type" : "custom",
    "scriptType" : "Python",
    "scriptContent" : "AVX::LOG(\"To Download the certificate : <%cert_url%>\")\nAVX::OUTPUT({})",
    "http_method" : "POST",
    "action_id" : "run-script"
  }, {
    "uniqueId" : null,
    "directoryUniqueId" : null,
    "source" : null,
    "tags" : [ ],
    "userName" : null,
    "objectType" : "TaskDetails",
    "sourceControlSettings" : null,
    "description" : null,
    "historyReferences" : [ "5f5f7438653c601144d3226d", "5f8757a8c3d56076c72596da", "5f5f7c21653c601144d32292", "5f87574475715a637ff8f47a", "5f8752cac3d56076c72596cd", "5f8756a575715a637ff8f478", "5f5f73bcabff755debcbc146", "5f87566875715a637ff8f476", "5f5f7b40653c601144d32281", "5f5f7c1c653c601144d3228f", "5f875450c3d56076c72596d1", "5f5f737babff755debcbc144", "5f5f7484653c601144d32272", "5f87562675715a637ff8f473", "5f5f73d9abff755debcbc14c", "5f5f7add653c601144d32278", "5f8756bdc3d56076c72596d8", "5f87550775715a637ff8f46b", "5f8757c275715a637ff8f47d" ],
    "usedHistory" : "12cb8a6e8f1896dd45b3ca97cc617af2",
    "sampleInput" : null,
    "sampleOutput" : null,
    "contentTab" : null,
    "successiveTasks" : {
      "incoming" : [ {
        "taskId" : "decision_3",
        "taskName" : null,
        "subflowId" : "XrwrzBIA",
        "parentSubflowId" : "qIh2AzEx",
        "taskType" : "start",
        "flowName" : null,
        "linkType" : null
      } ],
      "SingleRequest" : [ {
        "taskId" : "email_1",
        "taskName" : null,
        "subflowId" : "XrwrzBIA",
        "parentSubflowId" : "qIh2AzEx",
        "taskType" : "email",
        "flowName" : null,
        "linkType" : null
      } ],
      "Failed" : [ {
        "taskId" : "email_3",
        "taskName" : null,
        "subflowId" : "XrwrzBIA",
        "parentSubflowId" : "qIh2AzEx",
        "taskType" : "email",
        "flowName" : null,
        "linkType" : null
      } ]
    },
    "flowPathID" : null,
    "ignoredForStatusComputation" : false,
    "flowName" : "Cert create OOB",
    "subFlowID" : "XrwrzBIA",
    "globalData" : null,
    "input" : [ {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "testnet_common_name",
      "value" : "<%testnet_common_name%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "testnet_common_name",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "emailId",
      "value" : "<%emailId%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "emailId",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    } ],
    "notificationMessage" : null,
    "ancestor" : null,
    "metaData" : {
      "taskHeader" : "If",
      "hide" : false,
      "lock" : false,
      "successState" : 1,
      "failoverState" : 2,
      "taskScope" : null,
      "hideFromStageView" : false,
      "mode" : "Developer",
      "nature" : "normal",
      "lowCodeTask" : false
    },
    "parentSubFlowID" : "qIh2AzEx",
    "helpContent" : null,
    "rule" : {
      "not" : false,
      "condition" : "AND",
      "rules" : [ {
        "operator" : "contains",
        "value" : "<%emailId%>",
        "comparedValue" : "@"
      }, {
        "operator" : "not-contains",
        "value" : "<%testnet_common_name%>",
        "comparedValue" : ".ams1907.com"
      } ]
    },
    "_id" : null,
    "task_id" : "decision_2",
    "task_name" : "If",
    "task_type" : "decision",
    "task_category" : "decision",
    "component_type" : "others",
    "setNullProperties" : true,
    "folderName" : null,
    "sub_group" : "decision",
    "group_name" : "General",
    "viewable_type" : "custom",
    "rule_name" : "SingleRequest Production"
  }, {
    "uniqueId" : null,
    "directoryUniqueId" : null,
    "source" : null,
    "tags" : [ ],
    "userName" : null,
    "objectType" : "TaskDetails",
    "sourceControlSettings" : null,
    "description" : null,
    "historyReferences" : [ "5f5fa8e175715a637fef0694", "5f63592e75715a637ff082c6", "5f5f7450abff755debcbc152", "5f5fa6e275715a637fef068f", "5f627ff875715a637ff003da", "5f63630675715a637ff0831b", "5f5fa872c3d56076c71dad30", "5f626f9a75715a637ff0035d", "5f636bafc3d56076c71db520", "5f63511b75715a637ff0829e", "5f87552975715a637ff8f46f", "5f5f9011c3d56076c71daced", "5f628213c3d56076c71db2b9", "5f6262a275715a637ff0033b", "5f62819075715a637ff003e7", "5f5f7438653c601144d3226e", "5f5f8e83c3d56076c71dace9", "5f5f742babff755debcbc150", "5f63624875715a637ff08319", "5f627fcbc3d56076c71db2a9", "5f5fa74ec3d56076c71dad2c", "5f635656c3d56076c71db433", "5f6263cdc3d56076c71db249", "5f635e6775715a637ff08313", "5f62615175715a637ff00339", "5f5fa776c3d56076c71dad2e", "5f5f9d5dc3d56076c71dad1b", "5f5f73ecabff755debcbc14e", "5f635c9a75715a637ff082d4" ],
    "usedHistory" : "1b080a52839287eb3dfc23fcb91fc8d7",
    "sampleInput" : null,
    "sampleOutput" : null,
    "contentTab" : null,
    "successiveTasks" : {
      "incoming" : [ {
        "taskId" : "decision_2",
        "taskName" : null,
        "subflowId" : "XrwrzBIA",
        "parentSubflowId" : "qIh2AzEx",
        "taskType" : "start",
        "flowName" : null,
        "linkType" : null
      } ],
      "success" : [ {
        "taskId" : "join_2",
        "taskName" : null,
        "subflowId" : "XrwrzBIA",
        "parentSubflowId" : "qIh2AzEx",
        "taskType" : "join",
        "flowName" : null,
        "linkType" : null
      } ]
    },
    "flowPathID" : null,
    "ignoredForStatusComputation" : false,
    "flowName" : "Cert create OOB",
    "subFlowID" : "XrwrzBIA",
    "globalData" : null,
    "input" : [ {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "prod_common_name",
      "value" : "<%prod_common_name%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "prod_common_name",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "doc_hyperlink",
      "value" : "<%doc_hyperlink%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "doc_hyperlink",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "firstName",
      "value" : "<%firstName%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "firstName",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "emailId",
      "value" : "<%emailId%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "emailId",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    } ],
    "notificationMessage" : {
      "0" : "",
      "1" : "",
      "2" : ""
    },
    "ancestor" : null,
    "metaData" : {
      "taskHeader" : "Email",
      "hide" : false,
      "lock" : false,
      "successState" : 1,
      "failoverState" : 2,
      "taskScope" : null,
      "hideFromStageView" : false,
      "mode" : "Developer",
      "nature" : "normal",
      "lowCodeTask" : false
    },
    "parentSubFlowID" : "qIh2AzEx",
    "helpContent" : null,
    "content" : "<html><body><p><span style='font-size:20px;color:#ff6b00;'><strong>app<span style='color:#242424;'>viewX</span></strong></span> <span style='font-size:20px;'><strong>Notification</strong></span></p> <hr /><p style='margin-top:20px;margin-bottom:10px;font-size:15px;'><strong>Request ID:</strong> $requestid | <span><strong>Workflow Name:</strong> $workflowname</span></p><p>&lt;%firstName%&gt;,</p><p><br></p><p>Your certificate request (<strong> &lt;%prod_common_name%&gt;</strong> )  has been completed through AppViewX and is now ready for download. Please navivgate to Azure and access AppViewX (AVX) through the Azure portal if you have not already downloaded your certificate.</p><p><br></p><p>In AppViewX:</p><p>\tUpper left-hand corner; Menu (three lines) - Inventory - Certificates. Click on Common Name of certificate requested, then click on three dots on right side of certificate flag to download certificate.</p><p><br></p><p>AVX documentation: &lt;%doc_hyperlink%&gt;</p><p><br></p><p>Regards,</p><p>Digital Certificate Management team</p><p>UPSInfoSecSolutionDigCertTeam@ups.com</p><p><br></p><p><br></p><hr/><p><span style='font-size:12px;'>Please do not reply as this is an auto generated email by AppViewX.</span></p> </body></body></html>",
    "subject" : "Digital Certificate Request is Ready for Download",
    "to" : {
      "roles" : null,
      "emails" : [ "<%emailId%>" ],
      "user_groups" : null
    },
    "cc" : {
      "roles" : null,
      "emails" : [ "" ],
      "user_groups" : null
    },
    "qcontent" : {
      "ops" : [ {
        "insert" : "<%firstName%>,\n\nYour certificate request ("
      }, {
        "attributes" : {
          "bold" : true
        },
        "insert" : " <%prod_common_name%>"
      }, {
        "insert" : " )  has been completed through AppViewX and is now ready for download. Please navivgate to Azure and access AppViewX (AVX) through the Azure portal if you have not already downloaded your certificate.\n\nIn AppViewX:\n\tUpper left-hand corner; Menu (three lines) - Inventory - Certificates. Click on Common Name of certificate requested, then click on three dots on right side of certificate flag to download certificate.\n\nAVX documentation: <%doc_hyperlink%>\n\nRegards,\nDigital Certificate Management team\nUPSInfoSecSolutionDigCertTeam@ups.com\n\n\n"
      } ]
    },
    "attachment" : {
      "attachByFiles" : [ ],
      "attachByVariables" : [ ]
    },
    "awaitingApproval" : false,
    "autoReply" : false,
    "processBaseURL" : null,
    "_id" : null,
    "task_id" : "email_1",
    "task_name" : "Completion Email sent to Requester - Production",
    "task_type" : "email",
    "task_category" : "email",
    "component_type" : "others",
    "setNullProperties" : true,
    "folderName" : null,
    "sub_group" : "email",
    "group_name" : "Notification",
    "viewable_type" : "custom"
  }, {
    "uniqueId" : null,
    "directoryUniqueId" : null,
    "source" : null,
    "tags" : [ ],
    "userName" : null,
    "objectType" : "TaskDetails",
    "sourceControlSettings" : null,
    "description" : null,
    "historyReferences" : [ "5f5f7447653c601144d32270", "5f5f7484653c601144d32273", "5f87580275715a637ff8f481", "5f87562675715a637ff8f474", "5f5f7450abff755debcbc153", "5f5f7455abff755debcbc155" ],
    "usedHistory" : "6ba1cef8ec0457afcd6684e42198fe61",
    "sampleInput" : null,
    "sampleOutput" : null,
    "contentTab" : null,
    "successiveTasks" : {
      "incoming" : [ {
        "taskId" : "email_1",
        "taskName" : null,
        "subflowId" : "XrwrzBIA",
        "parentSubflowId" : "qIh2AzEx",
        "taskType" : "start",
        "flowName" : null,
        "linkType" : null
      }, {
        "taskId" : "email_3",
        "taskName" : null,
        "subflowId" : "XrwrzBIA",
        "parentSubflowId" : "qIh2AzEx",
        "taskType" : "start",
        "flowName" : null,
        "linkType" : null
      } ],
      "success" : [ {
        "taskId" : "script_3",
        "taskName" : null,
        "subflowId" : "XrwrzBIA",
        "parentSubflowId" : "qIh2AzEx",
        "taskType" : "script",
        "flowName" : null,
        "linkType" : null
      } ]
    },
    "flowPathID" : null,
    "ignoredForStatusComputation" : false,
    "flowName" : null,
    "subFlowID" : null,
    "globalData" : null,
    "input" : [ ],
    "notificationMessage" : null,
    "ancestor" : null,
    "metaData" : {
      "taskHeader" : "Join",
      "hide" : false,
      "lock" : false,
      "successState" : 1,
      "failoverState" : 2,
      "taskScope" : null,
      "hideFromStageView" : false,
      "mode" : "Developer",
      "nature" : "normal",
      "lowCodeTask" : false
    },
    "parentSubFlowID" : null,
    "helpContent" : null,
    "flowIdsToJoin" : [ ],
    "_id" : null,
    "task_id" : "join_2",
    "task_name" : "Join",
    "task_type" : "join",
    "task_category" : "join",
    "component_type" : "others",
    "setNullProperties" : true,
    "folderName" : null,
    "sub_group" : "join",
    "group_name" : "General",
    "viewable_type" : "default"
  }, {
    "uniqueId" : null,
    "directoryUniqueId" : null,
    "source" : null,
    "tags" : [ ],
    "userName" : null,
    "objectType" : "TaskDetails",
    "sourceControlSettings" : null,
    "description" : null,
    "historyReferences" : [ "5f5f7438653c601144d3226d", "5f5f7b33abff755debcbc175", "5f5f7c21653c601144d32291", "5f8a0dfec3d56076c726f676", "5f5f7b17abff755debcbc170", "5f5f7b1fabff755debcbc172", "5f8a0b1e75715a637ff8fb6a", "5f8a0b3a75715a637ff8fb6c", "5f5f73bcabff755debcbc146", "5f8a1175c3d56076c726f697", "5f875c3875715a637ff8f48e", "5f5f7c1c653c601144d3228e", "5f5f737babff755debcbc144", "5f5f7484653c601144d32272", "5f5f7b03653c601144d3227a", "5f8a0ca775715a637ff8fb84", "5f5f7ae3abff755debcbc16d", "5f8a0de6c3d56076c726f671", "5f8a0df7c3d56076c726f674", "5f5f73d9abff755debcbc14c", "5f5f7add653c601144d32278", "5f8a0de0c3d56076c726f66f", "5f8a104dc3d56076c726f68d" ],
    "usedHistory" : "805d6392c226337f8803c6cc665e5cb9",
    "sampleInput" : null,
    "sampleOutput" : null,
    "contentTab" : null,
    "successiveTasks" : {
      "incoming" : [ {
        "taskId" : "grid_1",
        "taskName" : null,
        "subflowId" : "XrwrzBIA",
        "parentSubflowId" : "qIh2AzEx",
        "taskType" : "start",
        "flowName" : null,
        "linkType" : null
      } ],
      "SingleRequest" : [ {
        "taskId" : "decision_2",
        "taskName" : null,
        "subflowId" : "XrwrzBIA",
        "parentSubflowId" : "qIh2AzEx",
        "taskType" : "decision",
        "flowName" : null,
        "linkType" : null
      } ],
      "Failed" : [ {
        "taskId" : "email_2",
        "taskName" : null,
        "subflowId" : "XrwrzBIA",
        "parentSubflowId" : "qIh2AzEx",
        "taskType" : "email",
        "flowName" : null,
        "linkType" : null
      } ]
    },
    "flowPathID" : null,
    "ignoredForStatusComputation" : false,
    "flowName" : "Cert create OOB",
    "subFlowID" : "XrwrzBIA",
    "globalData" : null,
    "input" : [ {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "cert_status",
      "value" : "<%cert_status%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "cert_status",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    } ],
    "notificationMessage" : null,
    "ancestor" : null,
    "metaData" : {
      "taskHeader" : "If",
      "hide" : false,
      "lock" : false,
      "successState" : 1,
      "failoverState" : 2,
      "taskScope" : null,
      "hideFromStageView" : false,
      "mode" : "Developer",
      "nature" : "normal",
      "lowCodeTask" : false
    },
    "parentSubFlowID" : "qIh2AzEx",
    "helpContent" : null,
    "rule" : {
      "not" : false,
      "condition" : "AND",
      "rules" : [ {
        "operator" : "contains",
        "value" : "<%cert_status%>",
        "comparedValue" : "Success"
      } ]
    },
    "_id" : null,
    "task_id" : "decision_3",
    "task_name" : "If",
    "task_type" : "decision",
    "task_category" : "decision",
    "component_type" : "others",
    "setNullProperties" : true,
    "folderName" : null,
    "sub_group" : "decision",
    "group_name" : "General",
    "viewable_type" : "custom",
    "rule_name" : "SingleRequest"
  }, {
    "uniqueId" : null,
    "directoryUniqueId" : null,
    "source" : null,
    "tags" : [ ],
    "userName" : null,
    "objectType" : "TaskDetails",
    "sourceControlSettings" : null,
    "description" : null,
    "historyReferences" : [ "5f5f7438653c601144d3226e", "5f5f7b1fabff755debcbc173", "5f5f7b37abff755debcbc178", "5f8a0dfec3d56076c726f677", "5f5f742babff755debcbc150", "5f5f7bc0abff755debcbc17b", "5f5f7450abff755debcbc152", "5f8a134375715a637ff8fba1", "5f8a145d75715a637ff8fba7", "5f778283c3d56076c72249d6", "5f8a0de6c3d56076c726f672", "5f8a146175715a637ff8fbaa", "5f77822375715a637ff45214", "5f5f73ecabff755debcbc14e", "5f5f7c0eabff755debcbc180", "5f8759b275715a637ff8f48b", "5f5f7b12653c601144d3227c", "5f5f7bf4abff755debcbc17d", "5f5f7c40abff755debcbc183", "5f7782ff75715a637ff45216", "5f87599475715a637ff8f489" ],
    "usedHistory" : "8ae95602f68e2a6289fa6fbf8e9b22f7",
    "sampleInput" : null,
    "sampleOutput" : null,
    "contentTab" : null,
    "successiveTasks" : {
      "incoming" : [ {
        "taskId" : "decision_3",
        "taskName" : null,
        "subflowId" : "XrwrzBIA",
        "parentSubflowId" : "qIh2AzEx",
        "taskType" : "start",
        "flowName" : null,
        "linkType" : null
      } ],
      "success" : [ {
        "taskId" : "script_4",
        "taskName" : null,
        "subflowId" : "XrwrzBIA",
        "parentSubflowId" : "qIh2AzEx",
        "taskType" : "script",
        "flowName" : null,
        "linkType" : null
      } ]
    },
    "flowPathID" : null,
    "ignoredForStatusComputation" : false,
    "flowName" : "Cert create OOB",
    "subFlowID" : "XrwrzBIA",
    "globalData" : null,
    "input" : [ {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "prod_common_name",
      "value" : "<%prod_common_name%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "prod_common_name",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "doc_hyperlink",
      "value" : "<%doc_hyperlink%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "doc_hyperlink",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "requestID",
      "value" : "<%requestID%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "requestID",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "firstName",
      "value" : "<%firstName%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "firstName",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "emailId",
      "value" : "<%emailId%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "emailId",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    } ],
    "notificationMessage" : {
      "0" : "",
      "1" : "",
      "2" : ""
    },
    "ancestor" : null,
    "metaData" : {
      "taskHeader" : "Email",
      "hide" : false,
      "lock" : false,
      "successState" : 1,
      "failoverState" : 2,
      "taskScope" : null,
      "hideFromStageView" : false,
      "mode" : "Developer",
      "nature" : "normal",
      "lowCodeTask" : false
    },
    "parentSubFlowID" : "qIh2AzEx",
    "helpContent" : null,
    "content" : "<html><body><p><span style='font-size:20px;color:#ff6b00;'><strong>app<span style='color:#242424;'>viewX</span></strong></span> <span style='font-size:20px;'><strong>Notification</strong></span></p> <hr /><p style='margin-top:20px;margin-bottom:10px;font-size:15px;'><strong>Request ID:</strong> $requestid | <span><strong>Workflow Name:</strong> $workflowname</span></p><p>&lt;%firstName%&gt;,</p><p><br></p><p>Your certificate request ( &lt;%prod_common_name%&gt; )  has failed. Please contact the Digital Certificate Management team at: UPSInfoSecSolutionDigCertTeam@ups.com. Provide the certificate request number ( &lt;%requestID%&gt; ) and Common Name of certificate request.</p><p><br></p><p>AVX documentation: &lt;%doc_hyperlink%&gt;</p><p><br></p><p>Regards,</p><p>Digital Certificate Management team</p><p>UPSInfoSecSolutionDigCertTeam@ups.com</p><hr/><p><span style='font-size:12px;'>Please do not reply as this is an auto generated email by AppViewX.</span></p> </body></body></html>",
    "subject" : "AVX Certificate Request Failed",
    "to" : {
      "roles" : null,
      "emails" : [ "<%emailId%>" ],
      "user_groups" : null
    },
    "cc" : {
      "roles" : null,
      "emails" : [ "" ],
      "user_groups" : null
    },
    "qcontent" : {
      "ops" : [ {
        "insert" : "<%firstName%>,\n\nYour certificate request ( <%prod_common_name%> )  has failed. Please contact the Digital Certificate Management team at: UPSInfoSecSolutionDigCertTeam@ups.com. Provide the certificate request number ( <%requestID%> ) and Common Name of certificate request.\n\nAVX documentation: <%doc_hyperlink%>\n\nRegards,\nDigital Certificate Management team\nUPSInfoSecSolutionDigCertTeam@ups.com\n"
      } ]
    },
    "attachment" : {
      "attachByFiles" : [ ],
      "attachByVariables" : [ ]
    },
    "awaitingApproval" : false,
    "autoReply" : false,
    "processBaseURL" : null,
    "_id" : null,
    "task_id" : "email_2",
    "task_name" : "Request Failed - Production",
    "task_type" : "email",
    "task_category" : "email",
    "component_type" : "others",
    "setNullProperties" : true,
    "folderName" : null,
    "sub_group" : "email",
    "group_name" : "Notification",
    "viewable_type" : "custom"
  }, {
    "uniqueId" : null,
    "directoryUniqueId" : null,
    "source" : null,
    "tags" : [ ],
    "userName" : null,
    "objectType" : "TaskDetails",
    "sourceControlSettings" : null,
    "description" : null,
    "historyReferences" : [ "5f5f7447653c601144d32270", "5f5f7b37abff755debcbc179", "5f5f7b33abff755debcbc176", "5f8a1463c3d56076c726f6a6", "5f5f7c0a653c601144d32289", "5f5f7455abff755debcbc155", "5f5f7c13653c601144d3228b", "5f8a145d75715a637ff8fba8", "5f5f7b25653c601144d3227e", "5f5f7c0eabff755debcbc181", "5f5f7484653c601144d32273", "5f5f7b40653c601144d32280", "5f5f7450abff755debcbc153", "5f5f7bfc653c601144d32283", "5f5f7bf4abff755debcbc17e" ],
    "usedHistory" : "63e95b8600d7c3afb56b04d21f797bac",
    "sampleInput" : null,
    "sampleOutput" : null,
    "contentTab" : null,
    "successiveTasks" : {
      "incoming" : [ {
        "taskId" : "script_3",
        "taskName" : null,
        "subflowId" : "XrwrzBIA",
        "parentSubflowId" : "qIh2AzEx",
        "taskType" : "start",
        "flowName" : null,
        "linkType" : null
      }, {
        "taskId" : "script_4",
        "taskName" : null,
        "subflowId" : "XrwrzBIA",
        "parentSubflowId" : "qIh2AzEx",
        "taskType" : "start",
        "flowName" : null,
        "linkType" : null
      } ],
      "success" : [ {
        "taskId" : "workflow_stop_1",
        "taskName" : null,
        "subflowId" : "XrwrzBIA",
        "parentSubflowId" : "qIh2AzEx",
        "taskType" : "stop",
        "flowName" : null,
        "linkType" : null
      } ]
    },
    "flowPathID" : null,
    "ignoredForStatusComputation" : false,
    "flowName" : null,
    "subFlowID" : null,
    "globalData" : null,
    "input" : [ ],
    "notificationMessage" : null,
    "ancestor" : null,
    "metaData" : {
      "taskHeader" : "Join",
      "hide" : false,
      "lock" : false,
      "successState" : 1,
      "failoverState" : 2,
      "taskScope" : null,
      "hideFromStageView" : false,
      "mode" : "Developer",
      "nature" : "normal",
      "lowCodeTask" : false
    },
    "parentSubFlowID" : null,
    "helpContent" : null,
    "flowIdsToJoin" : [ ],
    "_id" : null,
    "task_id" : "join_5",
    "task_name" : "Join",
    "task_type" : "join",
    "task_category" : "join",
    "component_type" : "others",
    "setNullProperties" : true,
    "folderName" : null,
    "sub_group" : "join",
    "group_name" : "General",
    "viewable_type" : "default"
  }, {
    "uniqueId" : null,
    "directoryUniqueId" : null,
    "source" : null,
    "tags" : [ ],
    "userName" : null,
    "objectType" : "TaskDetails",
    "sourceControlSettings" : null,
    "description" : null,
    "historyReferences" : [ "5f5fa8e175715a637fef0694", "5f63592e75715a637ff082c6", "5f875535c3d56076c72596d3", "5f5f7450abff755debcbc152", "5f87551675715a637ff8f46d", "5f5fa6e275715a637fef068f", "5f627ff875715a637ff003da", "5f63630675715a637ff0831b", "5f5fa872c3d56076c71dad30", "5f626f9a75715a637ff0035d", "5f636bafc3d56076c71db520", "5f63511b75715a637ff0829e", "5f5f9011c3d56076c71daced", "5f628213c3d56076c71db2b9", "5f6262a275715a637ff0033b", "5f62819075715a637ff003e7", "5f5f7438653c601144d3226e", "5f5f8e83c3d56076c71dace9", "5f87580275715a637ff8f480", "5f5f742babff755debcbc150", "5f63624875715a637ff08319", "5f627fcbc3d56076c71db2a9", "5f5fa74ec3d56076c71dad2c", "5f635656c3d56076c71db433", "5f6263cdc3d56076c71db249", "5f635e6775715a637ff08313", "5f87557a75715a637ff8f471", "5f62615175715a637ff00339", "5f5fa776c3d56076c71dad2e", "5f5f9d5dc3d56076c71dad1b", "5f5f73ecabff755debcbc14e", "5f8757c275715a637ff8f47e", "5f635c9a75715a637ff082d4" ],
    "usedHistory" : "ee0d0aded01c8044e5713e57b3e93b31",
    "sampleInput" : null,
    "sampleOutput" : null,
    "contentTab" : null,
    "successiveTasks" : {
      "incoming" : [ {
        "taskId" : "decision_2",
        "taskName" : null,
        "subflowId" : "XrwrzBIA",
        "parentSubflowId" : "qIh2AzEx",
        "taskType" : "start",
        "flowName" : null,
        "linkType" : null
      } ],
      "success" : [ {
        "taskId" : "join_2",
        "taskName" : null,
        "subflowId" : "XrwrzBIA",
        "parentSubflowId" : "qIh2AzEx",
        "taskType" : "join",
        "flowName" : null,
        "linkType" : null
      } ]
    },
    "flowPathID" : null,
    "ignoredForStatusComputation" : false,
    "flowName" : "Cert create OOB",
    "subFlowID" : "XrwrzBIA",
    "globalData" : null,
    "input" : [ {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "doc_hyperlink",
      "value" : "<%doc_hyperlink%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "doc_hyperlink",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "testnet_common_name",
      "value" : "<%testnet_common_name%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "testnet_common_name",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "firstName",
      "value" : "<%firstName%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "firstName",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "emailId",
      "value" : "<%emailId%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "emailId",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    } ],
    "notificationMessage" : {
      "0" : "",
      "1" : "",
      "2" : ""
    },
    "ancestor" : null,
    "metaData" : {
      "taskHeader" : "Email",
      "hide" : false,
      "lock" : false,
      "successState" : 1,
      "failoverState" : 2,
      "taskScope" : null,
      "hideFromStageView" : false,
      "mode" : "Developer",
      "nature" : "normal",
      "lowCodeTask" : false
    },
    "parentSubFlowID" : "qIh2AzEx",
    "helpContent" : null,
    "content" : "<html><body><p><span style='font-size:20px;color:#ff6b00;'><strong>app<span style='color:#242424;'>viewX</span></strong></span> <span style='font-size:20px;'><strong>Notification</strong></span></p> <hr /><p style='margin-top:20px;margin-bottom:10px;font-size:15px;'><strong>Request ID:</strong> $requestid | <span><strong>Workflow Name:</strong> $workflowname</span></p><p>&lt;%firstName%&gt;,</p><p><br></p><p>Your certificate request (<strong> &lt;%testnet_common_name%&gt;</strong> )  has been completed through AppViewX and is now ready for download. Please navigate to Azure and access AppViewX (AVX) through the Azure portal if you have not already downloaded your certificate.</p><p><br></p><p>In AppViewX:</p><p>\tUpper left-hand corner; Menu (three lines) - Inventory - Certificates. Click on Common Name of certificate requested, then click on three dots on right side of certificate flag to download certificate.</p><p><br></p><p>AVX documentation: &lt;%doc_hyperlink%&gt;</p><p><br></p><p>Regards,</p><p>Digital Certificate Management team</p><p>UPSInfoSecSolutionDigCertTeam@ups.com</p><p><br></p><p><br></p><hr/><p><span style='font-size:12px;'>Please do not reply as this is an auto generated email by AppViewX.</span></p> </body></body></html>",
    "subject" : "Digital Certificate Request is Ready for Download",
    "to" : {
      "roles" : null,
      "emails" : [ "<%emailId%>" ],
      "user_groups" : null
    },
    "cc" : {
      "roles" : null,
      "emails" : [ "" ],
      "user_groups" : null
    },
    "qcontent" : {
      "ops" : [ {
        "insert" : "<%firstName%>,\n\nYour certificate request ("
      }, {
        "attributes" : {
          "bold" : true
        },
        "insert" : " <%testnet_common_name%>"
      }, {
        "insert" : " )  has been completed through AppViewX and is now ready for download. Please navigate to Azure and access AppViewX (AVX) through the Azure portal if you have not already downloaded your certificate.\n\nIn AppViewX:\n\tUpper left-hand corner; Menu (three lines) - Inventory - Certificates. Click on Common Name of certificate requested, then click on three dots on right side of certificate flag to download certificate.\n\nAVX documentation: <%doc_hyperlink%>\n\nRegards,\nDigital Certificate Management team\nUPSInfoSecSolutionDigCertTeam@ups.com\n\n\n"
      } ]
    },
    "attachment" : {
      "attachByFiles" : [ ],
      "attachByVariables" : [ ]
    },
    "awaitingApproval" : false,
    "autoReply" : false,
    "processBaseURL" : null,
    "_id" : null,
    "task_id" : "email_3",
    "task_name" : "Completion Email sent to Requester - Test Net",
    "task_type" : "email",
    "task_category" : "email",
    "component_type" : "others",
    "setNullProperties" : true,
    "folderName" : null,
    "sub_group" : "email",
    "group_name" : "Notification",
    "viewable_type" : "custom"
  }, {
    "uniqueId" : null,
    "directoryUniqueId" : null,
    "source" : null,
    "tags" : [ ],
    "userName" : null,
    "objectType" : "TaskDetails",
    "sourceControlSettings" : null,
    "description" : "",
    "historyReferences" : [ "5f6355b8c3d56076c71db431", "5f5f7455abff755debcbc156", "5f8a1463c3d56076c726f6a5", "5f8a15cac3d56076c726f6ba", "5f197a49211d593ce57cc9ba", "5f8a143975715a637ff8fba5", "5f5f73d5abff755debcbc149", "5f8a144bc3d56076c726f6a3", "5f266f8345bca92f8fdd0b78", "5f197a31211d593ce57cc9b2", "5f5f7c0a653c601144d32288", "5f5fa7a675715a637fef0691", "5f1979e9211d593ce57cc9b0", "5f197a39211d593ce57cc9b7", "5f197a36211d593ce57cc9b5", "5f26702345bca92f8fdd0b7a", "5f8a146175715a637ff8fbab", "5f8a15be75715a637ff8fbb7", "5f6355d375715a637ff082b3", "5f8a15d5c3d56076c726f6bc", "5f8a0e12c3d56076c726f679", "5f197a5e211d593ce57cc9bc", "5f5f7c01653c601144d32285", "5f8a177375715a637ff8fbb9", "5f8a140375715a637ff8fba3" ],
    "usedHistory" : "9e774fc3fe0af5adec2b38074c496d8f",
    "sampleInput" : null,
    "sampleOutput" : null,
    "contentTab" : null,
    "successiveTasks" : {
      "incoming" : [ {
        "taskId" : "email_2",
        "taskName" : null,
        "subflowId" : "XrwrzBIA",
        "parentSubflowId" : "qIh2AzEx",
        "taskType" : "start",
        "flowName" : null,
        "linkType" : null
      } ],
      "success" : [ {
        "taskId" : "join_5",
        "taskName" : null,
        "subflowId" : "XrwrzBIA",
        "parentSubflowId" : "qIh2AzEx",
        "taskType" : "join",
        "flowName" : null,
        "linkType" : null
      } ]
    },
    "flowPathID" : null,
    "ignoredForStatusComputation" : false,
    "flowName" : "Cert create OOB",
    "subFlowID" : "XrwrzBIA",
    "globalData" : null,
    "input" : [ {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : null,
      "key" : "cert_url",
      "value" : "<%cert_url%>",
      "description" : null,
      "dataType" : "JSON",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "cert_url",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    } ],
    "notificationMessage" : {
      "0" : "",
      "1" : "To Download the certificate : <%cert_url%>",
      "2" : ""
    },
    "ancestor" : null,
    "metaData" : {
      "taskHeader" : "Script",
      "hide" : false,
      "lock" : false,
      "successState" : 1,
      "failoverState" : 2,
      "taskScope" : null,
      "hideFromStageView" : false,
      "mode" : "Developer",
      "nature" : "normal",
      "lowCodeTask" : false
    },
    "parentSubFlowID" : "qIh2AzEx",
    "helpContent" : null,
    "name" : "",
    "syncExecution" : true,
    "_id" : null,
    "task_id" : "script_4",
    "task_name" : "Request Failed - Contact Digital Certificate Administration",
    "task_type" : "script",
    "task_category" : "script",
    "component_type" : "others",
    "setNullProperties" : true,
    "folderName" : null,
    "sub_group" : "script",
    "group_name" : "General",
    "viewable_type" : "custom",
    "scriptType" : "Python",
    "scriptContent" : "AVX::LOG(\"Please contact Digital Certificate Administration at UPSInfoSecSolutionDigCertTeam@ups.com\")\n#AVX::OUTPUT({})",
    "http_method" : "POST",
    "action_id" : "run-script"
  } ],
  "subFlowID" : "XrwrzBIA",
  "taskGlobalData" : {
    "workflow_stop_1" : [ ],
    "CertcreateOOB_1" : [ ],
    "AppViewXcreatecertificates_1" : [ ],
    "AppViewXcreatecertificates_2" : [ ],
    "AppViewXcreatecertificates_3" : [ ],
    "AppViewXcreatecertificates_4" : [ ],
    "AppViewXcreatecertificates_5" : [ ],
    "join_1" : [ ],
    "script_1" : [ {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : "csr_parameters",
      "key" : "csr_parameters",
      "value" : "csr_parameters",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "csr_parameters",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : "status_list",
      "key" : "status_list",
      "value" : "status_list",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "status_list",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : "doc_hyperlink",
      "key" : "doc_hyperlink",
      "value" : "doc_hyperlink",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "doc_hyperlink",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    } ],
    "startLoop_1" : [ ],
    "endLoop_1" : [ ],
    "script_2" : [ {
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "elementType" : null,
      "name" : "certificate_authority",
      "key" : "certificate_authority",
      "value" : "certificate_authority",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "order" : 0,
      "label" : "certificate_authority",
      "parent" : null,
      "dataValidation" : null,
      "notification" : null,
      "type" : "Custom",
      "_id" : null
    } ],
    "decision_1" : [ ],
    "grid_1" : [ ],
    "script_3" : [ ],
    "decision_2" : [ ],
    "email_1" : [ ],
    "join_2" : [ ],
    "decision_3" : [ ],
    "email_2" : [ ],
    "join_5" : [ ],
    "email_3" : [ ],
    "script_4" : [ ]
  },
  "type" : null,
  "level" : 1,
  "maxDepth" : -1,
  "input" : null,
  "workflowName" : "Copy of UPS Certificate Request Workflow-Sep14V1",
  "description" : "",
  "flowName" : "Cert create OOB",
  "workflowType" : "Default",
  "subFlowType" : "Flow",
  "parentSubFlowID" : "qIh2AzEx",
  "logs" : [ {
    "user" : null,
    "time" : 1600347772535,
    "message" : "Flow created successfully with : Cert create OOB for the workflow : Copy of UPS Certificate Request Workflow-Sep14V1"
  }, {
    "user" : null,
    "time" : 1603181344830,
    "message" : "Flow created successfully with : Cert create OOB for the workflow : Copy of UPS Certificate Request Workflow-Sep14V1"
  }, {
    "user" : null,
    "time" : 1603309192882,
    "message" : "Flow created successfully with : Cert create OOB for the workflow : Copy of UPS Certificate Request Workflow-Sep14V1"
  } ],
  "workflowVersion" : "master"
} ]