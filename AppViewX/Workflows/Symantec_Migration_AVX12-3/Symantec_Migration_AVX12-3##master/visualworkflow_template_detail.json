[ {
  "tasks" : [ {
    "uniqueId" : null,
    "directoryUniqueId" : null,
    "source" : null,
    "tags" : [ ],
    "userName" : null,
    "objectType" : "TaskDetails",
    "description" : null,
    "historyReferences" : [ ],
    "usedHistory" : null,
    "sampleInput" : null,
    "sampleOutput" : null,
    "contentTab" : null,
    "successiveTasks" : {
      "incoming" : [ {
        "taskId" : "join_1",
        "taskName" : null,
        "subflowId" : "FTtm2pYj",
        "parentSubflowId" : null,
        "taskType" : "join",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ]
    },
    "flowPathID" : null,
    "ignoredForStatusComputation" : true,
    "flowName" : null,
    "subFlowID" : null,
    "globalData" : null,
    "input" : [ ],
    "notificationMessage" : null,
    "ancestor" : null,
    "metaData" : {
      "taskHeader" : "Stop",
      "hide" : false,
      "lock" : false,
      "successState" : 1,
      "failoverState" : 2,
      "taskScope" : null,
      "hideFromStageView" : false,
      "mode" : "Developer",
      "nature" : "normal",
      "lowCodeTask" : false
    },
    "parentSubFlowID" : null,
    "helpContent" : null,
    "rules" : { },
    "cleanUpFlowDetails" : { },
    "subFlowDetails" : [ ],
    "associatedRollbackWorkOrderDetail" : null,
    "_id" : null,
    "task_id" : "workflow_stop_1",
    "task_name" : "Stop",
    "task_type" : "stop",
    "task_category" : "stop",
    "component_type" : "others",
    "setNullProperties" : true,
    "folderName" : null,
    "sub_group" : null,
    "group_name" : null,
    "viewable_type" : "custom"
  }, {
    "uniqueId" : null,
    "directoryUniqueId" : null,
    "source" : null,
    "tags" : [ ],
    "userName" : null,
    "objectType" : "TaskDetails",
    "description" : "",
    "historyReferences" : [ ],
    "usedHistory" : null,
    "sampleInput" : null,
    "sampleOutput" : null,
    "contentTab" : null,
    "successiveTasks" : {
      "incoming" : [ {
        "taskId" : "workflow_start_1",
        "taskName" : null,
        "subflowId" : "FTtm2pYj",
        "parentSubflowId" : null,
        "taskType" : "start",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ],
      "success" : [ {
        "taskId" : "certificate_details_1",
        "taskName" : null,
        "subflowId" : "FTtm2pYj",
        "parentSubflowId" : null,
        "taskType" : "script",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ]
    },
    "flowPathID" : null,
    "ignoredForStatusComputation" : false,
    "flowName" : null,
    "subFlowID" : null,
    "globalData" : null,
    "input" : [ ],
    "notificationMessage" : null,
    "ancestor" : null,
    "metaData" : {
      "taskHeader" : "Fetch Symantec Certificates",
      "hide" : false,
      "lock" : false,
      "successState" : 1,
      "failoverState" : 2,
      "taskScope" : null,
      "hideFromStageView" : false,
      "mode" : "Developer",
      "nature" : "normal",
      "lowCodeTask" : false
    },
    "parentSubFlowID" : null,
    "helpContent" : null,
    "dynamicAuth" : null,
    "regexList" : null,
    "regexOperation" : null,
    "regexPattern" : null,
    "accessMode" : null,
    "proceedProcess" : "Submit",
    "breakdownProcess" : "Back",
    "cancelProcess" : "Cancel",
    "saveDraftProcess" : "Save Draft",
    "closeProcess" : "Exit",
    "enableSaveDraft" : false,
    "enableCancel" : true,
    "enableClose" : false,
    "enableAutoApprove" : null,
    "enableBreakDown" : false,
    "availableGlobalData" : null,
    "_id" : null,
    "task_id" : "createform_1",
    "task_name" : "Fetch Symantec Certificates",
    "task_type" : "form",
    "task_category" : "form",
    "component_type" : "form",
    "setNullProperties" : true,
    "folderName" : null,
    "sub_group" : null,
    "group_name" : null,
    "viewable_type" : "custom",
    "aclIdentifiers" : null,
    "template" : {
      "name" : "Fetch Symantec Certificates",
      "description" : null,
      "aclIdentifiers" : null,
      "fields" : [ {
        "labelName" : "Symantec Certificates",
        "elementType" : "Multi select",
        "values" : "",
        "fieldId" : "list_symantec_cert",
        "fieldScript" : "get_cert_details",
        "aclFilter" : "None",
        "dependsOn" : "",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : null,
        "autoTrigger" : false,
        "global" : false,
        "fileName" : null,
        "downloadType" : null
      }, {
        "labelName" : "Certificate Group",
        "elementType" : "Dropdown",
        "values" : "",
        "fieldId" : "certGroup",
        "fieldScript" : "get_rw_certificate_group_names",
        "aclFilter" : "None",
        "dependsOn" : "",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : null,
        "autoTrigger" : false,
        "global" : true,
        "fileName" : null,
        "downloadType" : null
      }, {
        "labelName" : "CA to Migrate",
        "elementType" : "Dropdown",
        "values" : "DigiCert,Comodo Certificate Manager,Entrust,Trustwave",
        "fieldId" : "certificateAuthority",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : null,
        "autoTrigger" : false,
        "global" : true,
        "fileName" : null,
        "downloadType" : null
      }, {
        "labelName" : "CA Account",
        "elementType" : "Dropdown",
        "values" : "",
        "fieldId" : "caSettingName",
        "fieldScript" : "get_ca_settings_names",
        "aclFilter" : "None",
        "dependsOn" : "",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : null,
        "autoTrigger" : false,
        "global" : true,
        "fileName" : null,
        "downloadType" : null
      }, {
        "labelName" : "Certificate Type",
        "elementType" : "Dropdown",
        "values" : "",
        "fieldId" : "certificateType",
        "fieldScript" : "get_certificate_types",
        "aclFilter" : "None",
        "dependsOn" : "",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : null,
        "autoTrigger" : false,
        "global" : true,
        "fileName" : null,
        "downloadType" : null
      }, {
        "labelName" : "Server Type",
        "elementType" : "Dropdown",
        "values" : "",
        "fieldId" : "serverType",
        "fieldScript" : "get_server_type",
        "aclFilter" : "None",
        "dependsOn" : "certificateAuthority:DigiCert|certificateAuthority:Comodo Certificate Manager",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : null,
        "autoTrigger" : false,
        "global" : true,
        "fileName" : null,
        "downloadType" : null
      }, {
        "labelName" : "Fetch Selected Symantec Details",
        "elementType" : "Button",
        "values" : "",
        "fieldId" : "get_details_each_cert",
        "fieldScript" : "get_each_cert_detail",
        "aclFilter" : "None",
        "dependsOn" : "",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : null,
        "autoTrigger" : false,
        "global" : false,
        "fileName" : null,
        "downloadType" : null
      }, {
        "labelName" : "Certificate UUID",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "uuid",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "",
        "dataValidation" : "",
        "parent" : "certi_details",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "R",
        "view" : "advanced",
        "permission" : "submit",
        "group" : null,
        "autoTrigger" : false,
        "global" : true,
        "fileName" : null,
        "downloadType" : null
      }, {
        "labelName" : "Common name",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "commonName",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "",
        "dataValidation" : "",
        "parent" : "certi_details",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : null,
        "autoTrigger" : false,
        "global" : true,
        "fileName" : null,
        "downloadType" : null
      }, {
        "labelName" : "Email ID",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "mailAddress",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "certificateAuthority:Trustwave|certificateAuthority:Comodo Certificate Manager",
        "dataValidation" : "",
        "parent" : "certi_details",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : null,
        "autoTrigger" : false,
        "global" : true,
        "fileName" : null,
        "downloadType" : null
      }, {
        "labelName" : "Organization",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "organization",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "certificateAuthority:DigiCert|certificateAuthority:Trustwave|certificateAuthority:Entrust",
        "dataValidation" : "",
        "parent" : "certi_details",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : null,
        "autoTrigger" : false,
        "global" : true,
        "fileName" : null,
        "downloadType" : null
      }, {
        "labelName" : "Organization unit",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "organizationUnit",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "certificateAuthority:Trustwave",
        "dataValidation" : "",
        "parent" : "certi_details",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : null,
        "autoTrigger" : false,
        "global" : true,
        "fileName" : null,
        "downloadType" : null
      }, {
        "labelName" : "Locality",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "locality",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "certificateAuthority:Trustwave",
        "dataValidation" : "",
        "parent" : "certi_details",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : null,
        "autoTrigger" : false,
        "global" : true,
        "fileName" : null,
        "downloadType" : null
      }, {
        "labelName" : "State",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "state",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "certificateAuthority:Trustwave",
        "dataValidation" : "",
        "parent" : "certi_details",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : null,
        "autoTrigger" : false,
        "global" : true,
        "fileName" : null,
        "downloadType" : null
      }, {
        "labelName" : "Country",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "country",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "certificateAuthority:Trustwave|certificateAuthority:Entrust",
        "dataValidation" : "",
        "parent" : "certi_details",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : null,
        "autoTrigger" : false,
        "global" : true,
        "fileName" : null,
        "downloadType" : null
      }, {
        "labelName" : "Bit Length",
        "elementType" : "Dropdown",
        "values" : "2048",
        "fieldId" : "bit_length",
        "fieldScript" : "get_cert_bit",
        "aclFilter" : "None",
        "dependsOn" : "",
        "dataValidation" : "",
        "parent" : "certi_details",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : null,
        "autoTrigger" : false,
        "global" : true,
        "fileName" : null,
        "downloadType" : null
      }, {
        "labelName" : "Key Type",
        "elementType" : "Dropdown",
        "values" : "RSA",
        "fieldId" : "key_type",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "",
        "dataValidation" : "",
        "parent" : "certi_details",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : null,
        "autoTrigger" : false,
        "global" : true,
        "fileName" : null,
        "downloadType" : null
      }, {
        "labelName" : "Hash Algorithm",
        "elementType" : "Dropdown",
        "values" : "SHA256",
        "fieldId" : "hash_algorithm",
        "fieldScript" : "get_hash_function",
        "aclFilter" : "None",
        "dependsOn" : "",
        "dataValidation" : "",
        "parent" : "certi_details",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : null,
        "autoTrigger" : false,
        "global" : true,
        "fileName" : null,
        "downloadType" : null
      }, {
        "labelName" : "Certificte Validity (in Years)",
        "elementType" : "Dropdown",
        "values" : "1,2,3",
        "fieldId" : "certificate_validity",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "",
        "dataValidation" : "",
        "parent" : "certi_details",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : null,
        "autoTrigger" : false,
        "global" : true,
        "fileName" : null,
        "downloadType" : null
      }, {
        "labelName" : "Challenge password",
        "elementType" : "Password",
        "values" : "",
        "fieldId" : "encryptedChallengePassword",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "certificateAuthority:Entrust",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : null,
        "autoTrigger" : false,
        "global" : true,
        "fileName" : null,
        "downloadType" : null
      }, {
        "labelName" : "Confirm password",
        "elementType" : "Password",
        "values" : "",
        "fieldId" : "confirmPassword",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "certificateAuthority:Entrust",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : null,
        "autoTrigger" : false,
        "global" : true,
        "fileName" : null,
        "downloadType" : null
      }, {
        "labelName" : "Certificate",
        "elementType" : "Tabular",
        "values" : "",
        "fieldId" : "certi_details",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : null,
        "autoTrigger" : false,
        "global" : true,
        "fileName" : null,
        "downloadType" : null,
        "showDefaultView" : false
      }, {
        "labelName" : "AppViewX Username",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "avx_username",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : null,
        "autoTrigger" : false,
        "global" : true,
        "fileName" : null,
        "downloadType" : null
      }, {
        "labelName" : "Password",
        "elementType" : "Password",
        "values" : "",
        "fieldId" : "avx_password",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : null,
        "autoTrigger" : false,
        "global" : true,
        "fileName" : null,
        "downloadType" : null
      }, {
        "labelName" : "PreValidation Check",
        "elementType" : "Button",
        "values" : "",
        "fieldId" : "pre_val_button",
        "fieldScript" : "get_prevalidation_result",
        "aclFilter" : "None",
        "dependsOn" : "",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : null,
        "autoTrigger" : false,
        "global" : false,
        "fileName" : null,
        "downloadType" : null
      }, {
        "labelName" : "PreValidation Check",
        "elementType" : "Multi-line",
        "values" : "",
        "fieldId" : "pre_val_check",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : null,
        "autoTrigger" : false,
        "global" : false,
        "fileName" : null,
        "downloadType" : null
      } ],
      "fieldScripts" : [ {
        "name" : null,
        "description" : null,
        "version" : null,
        "type" : "script",
        "fieldIds" : null,
        "responseMapping" : null,
        "historyReferences" : [ ],
        "usedHistory" : null,
        "scriptName" : "Discard request",
        "scriptData" : "",
        "_id" : null,
        "_keywords" : null
      }, {
        "name" : null,
        "description" : null,
        "version" : null,
        "type" : "script",
        "fieldIds" : null,
        "responseMapping" : null,
        "historyReferences" : [ ],
        "usedHistory" : null,
        "scriptName" : "get_rw_certificate_group_names",
        "scriptData" : "aW1wb3J0IHN5cwoKc3lzLnBhdGguaW5zZXJ0KDAsQVZYOjpERVBFTkRFTkNJRVMpCnN5cy5wYXRoLmluc2VydCgwLEFWWDo6SEVMUEVSKQoKaW1wb3J0IGNlcnRfc3NsX2NhX2NvbW1vbgppbXBvcnQganNvbgoKaWYgX19uYW1lX18gPT0gJ19fbWFpbl9fJzoKICAgICNnZXQgcm9sZXMgb2YgbG9nZ2VkIGluIHVzZXIKICAgIHJvbGVzID0gY2VydF9zc2xfY2FfY29tbW9uLmdldF9yb2xlcygiPGFwcHZpZXd4X3VzZXJuYW1lPiIpCgogICAgI2dldCBncm91cCBuYW1lcyB3aXRoIFJXIHBlcm1pc3Npb24KICAgIGdyb3VwX25hbWVzID0gY2VydF9zc2xfY2FfY29tbW9uLmdldF9ncm91cF9uYW1lcyhyb2xlcykKICAgIAogICAgcHJpbnQoanNvbi5kdW1wcyhncm91cF9uYW1lcykp",
        "_id" : null,
        "_keywords" : null
      }, {
        "name" : null,
        "description" : null,
        "version" : null,
        "type" : "script",
        "fieldIds" : null,
        "responseMapping" : null,
        "historyReferences" : [ ],
        "usedHistory" : null,
        "scriptName" : "get_ca_settings_names",
        "scriptData" : "aW1wb3J0IHN5cwoKc3lzLnBhdGguaW5zZXJ0KDAsQVZYOjpERVBFTkRFTkNJRVMpCnN5cy5wYXRoLmluc2VydCgwLEFWWDo6SEVMUEVSKQoKaW1wb3J0IGNlcnRfc3NsX2NhX2NvbW1vbgppbXBvcnQganNvbgoKaWYgX19uYW1lX18gPT0gJ19fbWFpbl9fJzoKICAgIGNhX3NldHRpbmdzX25hbWVzID0gY2VydF9zc2xfY2FfY29tbW9uLmdldF9jYV9zZXR0aW5nc19uYW1lcygnPGNlcnRpZmljYXRlQXV0aG9yaXR5PicsIlNlcnZlciIpCiAgICBpZiBjYV9zZXR0aW5nc19uYW1lczoKICAgICAgICBwcmludChqc29uLmR1bXBzKGNhX3NldHRpbmdzX25hbWVzKSkKICAgIGVsc2U6CiAgICAgICAgcHJpbnQoanNvbi5kdW1wcyhbeyJjYVNldHRpbmdOYW1lIiA6ICJOb25lIn1dKSk=",
        "_id" : null,
        "_keywords" : null
      }, {
        "name" : null,
        "description" : null,
        "version" : null,
        "type" : "script",
        "fieldIds" : null,
        "responseMapping" : null,
        "historyReferences" : [ ],
        "usedHistory" : null,
        "scriptName" : "get_hash_function",
        "scriptData" : "aW1wb3J0IHN5cwpzeXMucGF0aC5pbnNlcnQoMCxBVlg6OkRFUEVOREVOQ0lFUykKc3lzLnBhdGguaW5zZXJ0KDAsQVZYOjpIRUxQRVIpCmltcG9ydCBqc29uCgpkaWN0X2NlcnRfaGFzaF9hbGdvcml0aG0gPSB7CiAgICAiQ29tb2RvIENlcnRpZmljYXRlIE1hbmFnZXIiOlsiU0hBMjU2Il0sIAogICAgIkRpZ2lDZXJ0IjpbIlNIQTI1NiIsIlNIQTM4NCIsIlNIQTUxMiJdLAogICAgIkVudHJ1c3QiOlsiU0hBMjU2Il0sCiAgICAiVHJ1c3R3YXZlIjpbIlNIQTE2MCIsIlNIQTI1NiIsIlNIQTM4NCIsIlNIQTUxMiJdCiAgICB9CmlmIF9fbmFtZV9fID09ICdfX21haW5fXyc6CiAgICBwcmludChqc29uLmR1bXBzKFt7Imhhc2hfYWxnb3JpdGhtIjp2YWx1ZX0gZm9yIHZhbHVlIGluIGRpY3RfY2VydF9oYXNoX2FsZ29yaXRobVsiPGNlcnRpZmljYXRlQXV0aG9yaXR5PiJdXSkp",
        "_id" : null,
        "_keywords" : null
      }, {
        "name" : null,
        "description" : null,
        "version" : null,
        "type" : "script",
        "fieldIds" : null,
        "responseMapping" : null,
        "historyReferences" : [ ],
        "usedHistory" : null,
        "scriptName" : "get_each_cert_detail",
        "scriptData" : "aW1wb3J0IHN5cwppbXBvcnQganNvbgpzeXMucGF0aC5pbnNlcnQoMCxBVlg6OkRFUEVOREVOQ0lFUykKc3lzLnBhdGguaW5zZXJ0KDAsQVZYOjpIRUxQRVIpCmltcG9ydCBhcHB2aWV3eAoKY29ubmVjdGlvbiA9IGFwcHZpZXd4LmRiX2Nvbm5lY3Rpb24oKQpkYl9jZXJ0X2NvbGxlY3Rpb24gPSBjb25uZWN0aW9uLmFwcHZpZXd4LmNlcnRpZmljYXRlCgppZiBfX25hbWVfXyA9PSAnX19tYWluX18nOgogICAgaWYgIjxsaXN0X3N5bWFudGVjX2NlcnQ+IiBpbiBbIk5vbmUiLCJTZWxlY3QiLCJzZWxlY3QiLCIiLCIgIl06CiAgICAgICAgcHJpbnQoanNvbi5kdW1wcyh7ImVycm9yIjoiUGxlYXNlIHNlbGVjdCBTeW1hbnRlYyBDZXJ0aWZpY2F0ZSJ9KSkKICAgIGVsc2U6CiAgICAgICAgbGlzdF9vZl9jZXJ0ZmljYXRlcyA9IFtdCiAgICAgICAgc3ltYW50ZWNfY2VydF9saXN0PSAiPGxpc3Rfc3ltYW50ZWNfY2VydD4iLnNwbGl0KCIsIikKICAgICAgICBmb3IgZWFjaF9zeW1hbl9jZXJ0IGluIHN5bWFudGVjX2NlcnRfbGlzdDoKICAgICAgICAgICAgZGljdF9jZXJ0X2luZm8gPSB7fQogICAgICAgICAgICBjbV9uYW1lLCBjZXJ0X3NlcmlhbG51bSA9ZWFjaF9zeW1hbl9jZXJ0LnNwbGl0KCJ8fCIpCiAgICAgICAgICAgIGNlcnRfaW5mbyA9IGRiX2NlcnRfY29sbGVjdGlvbi5maW5kX29uZSh7ImNvbW1vbk5hbWUiOmNtX25hbWUsICJzZXJpYWxOdW1iZXIiOmNlcnRfc2VyaWFsbnVtfSkKICAgICAgICAgICAgI2RpY3RfY2VydF9pbmZvWyJjZXJ0aWZpY2F0ZUF1dGhvcml0eSJdPSI8Y2VydGlmaWNhdGVBdXRob3JpdHk+IgogICAgICAgICAgICAjZGljdF9jZXJ0X2luZm9bImNhU2V0dGluZ05hbWUiXT0iPGNhU2V0dGluZ05hbWU+IgogICAgICAgICAgICAjZGljdF9jZXJ0X2luZm9bImNlcnRpZmljYXRlVHlwZSJdPSI8Y2VydGlmaWNhdGVUeXBlPiIKICAgICAgICAgICAgI2RpY3RfY2VydF9pbmZvWyJzZXJ2ZXJUeXBlIl09IjxzZXJ2ZXJUeXBlPiIKICAgICAgICAgICAgZGljdF9jZXJ0X2luZm9bInV1aWQiXSA9IGNlcnRfaW5mb1sidXVpZCJdCiAgICAgICAgICAgIGRpY3RfY2VydF9pbmZvWyJjb21tb25OYW1lIl0gPSBjZXJ0X2luZm9bImNvbW1vbk5hbWUiXQogICAgICAgICAgICBkaWN0X2NlcnRfaW5mb1sib3JnYW5pemF0aW9uIl0gPSBjZXJ0X2luZm9bIm9yZ2FuaXphdGlvbiJdIGlmICJvcmdhbml6YXRpb24iIGluIGNlcnRfaW5mbyBlbHNlICIiCiAgICAgICAgICAgIGRpY3RfY2VydF9pbmZvWyJvcmdhbml6YXRpb25Vbml0Il0gPSAiIgogICAgICAgICAgICBkaWN0X2NlcnRfaW5mb1sibG9jYWxpdHkiXSA9IGNlcnRfaW5mb1sibG9jYXRpb24iXSBpZiAibG9jYXRpb24iIGluIGNlcnRfaW5mbyBlbHNlICIiCiAgICAgICAgICAgIGRpY3RfY2VydF9pbmZvWyJzdGF0ZSJdID0gY2VydF9pbmZvWyJzdGF0ZSJdIGlmICJzdGF0ZSIgaW4gY2VydF9pbmZvIGVsc2UgIiIKICAgICAgICAgICAgZGljdF9jZXJ0X2luZm9bImNvdW50cnkiXSA9IGNlcnRfaW5mb1siY291bnRyeSJdIGlmICJjb3VudHJ5IiBpbiBjZXJ0X2luZm8gZWxzZSAiIgogICAgICAgICAgICBkaWN0X2NlcnRfaW5mb1siYml0X2xlbmd0aCJdID0gY2VydF9pbmZvWyJwdWJsaWNLZXlJbmZvIl1bImJpdExlbmd0aCJdIGlmICJwdWJsaWNLZXlJbmZvIiBpbiBjZXJ0X2luZm8gZWxzZSAiIgogICAgICAgICAgICBkaWN0X2NlcnRfaW5mb1sia2V5X3R5cGUiXSA9IGNlcnRfaW5mb1sicHVibGljS2V5SW5mbyJdWyJrZXlBbGdvcml0aG0iXSBpZiAicHVibGljS2V5SW5mbyIgaW4gY2VydF9pbmZvIGVsc2UgIiIKICAgICAgICAgICAgZGljdF9jZXJ0X2luZm9bImhhc2hfYWxnb3JpdGhtIl0gPSBjZXJ0X2luZm9bImV4dGVuc2lvbiJdWyJzaWduYXR1cmVIYXNoQWxnb3JpdGhtIl0gaWYgImV4dGVuc2lvbiIgaW4gY2VydF9pbmZvIGVsc2UgIiIKICAgICAgICAgICAgZGljdF9jZXJ0X2luZm9bImNlcnRpZmljYXRlX3ZhbGlkaXR5Il0gPSBjZXJ0X2luZm9bImdlbmVyaWNGaWVsZHMiXVsidmFsaWRpdHkiXSBpZiAiZ2VuZXJpY0ZpZWxkcyIgaW4gY2VydF9pbmZvIGVsc2UgMQogICAgICAgICAgICBkaWN0X2NlcnRfaW5mb1siZW5jcnlwdGVkQ2hhbGxlbmdlUGFzc3dvcmQiXSA9ICIiCiAgICAgICAgICAgIGRpY3RfY2VydF9pbmZvWyJjb25maXJtUGFzc3dvcmQiXSA9ICIiIAogICAgICAgICAgICBtYWlsID0gY2VydF9pbmZvWyJtYWlsQWRkcmVzcyJdIGlmICJtYWlsQWRkcmVzcyIgaW4gY2VydF9pbmZvIGVsc2UgIiIKICAgICAgICAgICAgZGljdF9jZXJ0X2luZm9bIm1haWxBZGRyZXNzIl0gPSBtYWlsCiAgICAgICAgICAgIGxpc3Rfb2ZfY2VydGZpY2F0ZXMuYXBwZW5kKGRpY3RfY2VydF9pbmZvKQogICAgICAgIHByaW50KGpzb24uZHVtcHMobGlzdF9vZl9jZXJ0ZmljYXRlcykp",
        "_id" : null,
        "_keywords" : null
      }, {
        "name" : null,
        "description" : null,
        "version" : null,
        "type" : "script",
        "fieldIds" : null,
        "responseMapping" : null,
        "historyReferences" : [ ],
        "usedHistory" : null,
        "scriptName" : "Cancel request",
        "scriptData" : "",
        "_id" : null,
        "_keywords" : null
      }, {
        "name" : null,
        "description" : null,
        "version" : null,
        "type" : "script",
        "fieldIds" : null,
        "responseMapping" : null,
        "historyReferences" : [ ],
        "usedHistory" : null,
        "scriptName" : "get_cert_bit",
        "scriptData" : "aW1wb3J0IHN5cwpzeXMucGF0aC5pbnNlcnQoMCxBVlg6OkRFUEVOREVOQ0lFUykKc3lzLnBhdGguaW5zZXJ0KDAsQVZYOjpIRUxQRVIpCmltcG9ydCBqc29uCgpkaWN0X2NlcnRfYml0X2xlbmdodCA9IHsiQ29tb2RvIENlcnRpZmljYXRlIE1hbmFnZXIiOlsiMjA0OCJdLCAiRGlnaUNlcnQiOlsiMjA0OCIsIjQwOTYiXSwiRW50cnVzdCI6WyIyMDQ4IiwiNDA5NiJdLCJUcnVzdHdhdmUiOlsiMjA0OCIsIjQwOTYiLCI4MTkyIl19CmlmIF9fbmFtZV9fID09ICdfX21haW5fXyc6CiAgICBwcmludChqc29uLmR1bXBzKFt7ImJpdF9sZW5ndGgiOnZhbHVlfSBmb3IgdmFsdWUgaW4gZGljdF9jZXJ0X2JpdF9sZW5naHRbIjxjZXJ0aWZpY2F0ZUF1dGhvcml0eT4iXV0pKQ==",
        "_id" : null,
        "_keywords" : null
      }, {
        "name" : null,
        "description" : null,
        "version" : null,
        "type" : "script",
        "fieldIds" : null,
        "responseMapping" : null,
        "historyReferences" : [ ],
        "usedHistory" : null,
        "scriptName" : "get_cert_details",
        "scriptData" : "aW1wb3J0IHN5cwppbXBvcnQganNvbgpzeXMucGF0aC5pbnNlcnQoMCxBVlg6OkRFUEVOREVOQ0lFUykKc3lzLnBhdGguaW5zZXJ0KDAsQVZYOjpIRUxQRVIpCmltcG9ydCBhcHB2aWV3eAoKY29ubmVjdGlvbiA9IGFwcHZpZXd4LmRiX2Nvbm5lY3Rpb24oKQpkYl9jZXJ0X2NvbGxlY3Rpb24gPSBjb25uZWN0aW9uLmFwcHZpZXd4LmNlcnRpZmljYXRlCgpsaXN0X29mX2NlcnQgPSBbeyJsaXN0X3N5bWFudGVjX2NlcnQiOiBjZXJ0WyJjb21tb25OYW1lIl0rInx8IitjZXJ0WyJzZXJpYWxOdW1iZXIiXX1cCmZvciBjZXJ0IGluIGRiX2NlcnRfY29sbGVjdGlvbi5maW5kKHsiaXNzdWVyLmNlcnRpZmljYXRlQXV0aG9yaXR5IiA6ICdTeW1hbnRlYycsICJhdnhTdGF0dXMiOnsiJGluIjpbIk1hbmFnZWQiLCJOZXcgQ2VydGlmaWNhdGUiXX19KVwKaWYgInNlcmlhbE51bWJlciIgaW4gY2VydF0KCmlmIGxlbihsaXN0X29mX2NlcnQpOgogICAgcHJpbnQoanNvbi5kdW1wcyhsaXN0X29mX2NlcnQpKQplbHNlOgogICAgcHJpbnQoanNvbi5kdW1wcyh7ImVycm9yIjoiTm8gU3ltYW50ZWMgY2VydGlmaWNhdGVzIGFyZSBhdmFpbGFibGUgaW4gdGhlIEFwcFZpZXdYIn0pKQ==",
        "_id" : null,
        "_keywords" : null
      }, {
        "name" : null,
        "description" : null,
        "version" : null,
        "type" : "script",
        "fieldIds" : null,
        "responseMapping" : null,
        "historyReferences" : [ ],
        "usedHistory" : null,
        "scriptName" : "get_certificate_types",
        "scriptData" : "aW1wb3J0IHN5cwoKc3lzLnBhdGguaW5zZXJ0KDAsQVZYOjpERVBFTkRFTkNJRVMpCnN5cy5wYXRoLmluc2VydCgwLEFWWDo6SEVMUEVSKQoKaW1wb3J0IGNlcnRfc3NsX2NhX2NvbW1vbgppbXBvcnQganNvbgoKaWYgX19uYW1lX18gPT0gJ19fbWFpbl9fJzoKICAgIGNlcnRpZmljYXRlX3R5cGVzID0gY2VydF9zc2xfY2FfY29tbW9uLmdldF9jZXJ0aWZpY2F0ZV90eXBlcygiPGNlcnRHcm91cD4iLCI8Y2VydGlmaWNhdGVBdXRob3JpdHk+IikKICAgIGlmICI8Y2VydGlmaWNhdGVBdXRob3JpdHk+Ij09IkRpZ2lDZXJ0IjoKICAgICAgICBjZXJ0aWZpY2F0ZV90eXBlcz1bXQogICAgICAgIGNlcnRpZmljYXRlX3R5cGVzLmFwcGVuZCh7ImNlcnRpZmljYXRlVHlwZSI6IlNTTCBQbHVzIn0pCiAgICAgICAgY2VydGlmaWNhdGVfdHlwZXMuYXBwZW5kKHsiY2VydGlmaWNhdGVUeXBlIjoiU1NMIE11bHRpIERvbWFpbiJ9KQogICAgICAgIGNlcnRpZmljYXRlX3R5cGVzLmFwcGVuZCh7ImNlcnRpZmljYXRlVHlwZSI6IlNTTCBXaWxkY2FyZCJ9KQogICAgICAgIGNlcnRpZmljYXRlX3R5cGVzLmFwcGVuZCh7ImNlcnRpZmljYXRlVHlwZSI6IlNTTCBFViBQbHVzIn0pCiAgICAgICAgY2VydGlmaWNhdGVfdHlwZXMuYXBwZW5kKHsiY2VydGlmaWNhdGVUeXBlIjoiU1NMIEVWIE11bHRpIERvbWFpbiJ9KQogICAgZWxpZiAiPGNlcnRpZmljYXRlQXV0aG9yaXR5PiI9PSJDb21vZG8gQ2VydGlmaWNhdGUgTWFuYWdlciI6CiAgICAgICAgY2VydGlmaWNhdGVfdHlwZXMucmVtb3ZlKHsiY2VydGlmaWNhdGVUeXBlIjoiUGxhdGludW1TU0wgV2lsZGNhcmQgQ2VydGlmaWNhdGUifSkKICAgIGVsaWYgIjxjZXJ0aWZpY2F0ZUF1dGhvcml0eT4iPT0iVHJ1c3R3YXZlIjoKICAgICAgICBjZXJ0aWZpY2F0ZV90eXBlcy5yZW1vdmUoeyJjZXJ0aWZpY2F0ZVR5cGUiOiJQcmVtaXVtIFdpbGRjYXJkIFNTTCJ9KQogICAgZWxpZiAiPGNlcnRpZmljYXRlQXV0aG9yaXR5PiI9PSJFbnRydXN0IjoKICAgICAgICBjZXJ0aWZpY2F0ZV90eXBlcy5yZW1vdmUoeyJjZXJ0aWZpY2F0ZVR5cGUiOiJXaWxkY2FyZCJ9KQogICAgcHJpbnQoanNvbi5kdW1wcyhjZXJ0aWZpY2F0ZV90eXBlcykpCiAgICAKICAgIAogICAgCiAgICA=",
        "_id" : null,
        "_keywords" : null
      }, {
        "name" : null,
        "description" : null,
        "version" : null,
        "type" : "script",
        "fieldIds" : null,
        "responseMapping" : null,
        "historyReferences" : [ ],
        "usedHistory" : null,
        "scriptName" : "get_prevalidation_result",
        "scriptData" : "aW1wb3J0IHN5cwppbXBvcnQganNvbgpzeXMucGF0aC5pbnNlcnQoMCxBVlg6OkRFUEVOREVOQ0lFUykKc3lzLnBhdGguaW5zZXJ0KDAsQVZYOjpIRUxQRVIpCmltcG9ydCBhcHB2aWV3eAplYWNoX2NlcnRfbGlzdCA9ICI8bGlzdF9zeW1hbnRlY19jZXJ0PiIuc3BsaXQoIiwiKQp0YWJ1bGFyX2NlcnRfZGV0YWlsID0gPGNlcnRpX2RldGFpbHM+CmNvbm5lY3Rpb24gPSBhcHB2aWV3eC5kYl9jb25uZWN0aW9uKCkKZGJfY2VydF9jb2xsZWN0aW9uID0gY29ubmVjdGlvbi5hcHB2aWV3eC5jZXJ0aWZpY2F0ZQpkaWN0X2NlcnRfYml0X2xlbmdodCA9IHsKICAgICJDb21vZG8gQ2VydGlmaWNhdGUgTWFuYWdlciI6WyIyMDQ4IiwiNDA5NiIsIjgxOTIiXSwgCiAgICAiRGlnaUNlcnQiOlsiMjA0OCIsIjQwOTYiXSwKICAgICJFbnRydXN0IjpbIjIwNDgiLCI0MDk2Il0sCiAgICAiVHJ1c3R3YXZlIjpbIjIwNDgiLCI0MDk2IiwiODE5MiJdCiAgICB9CmRpY3RfY2VydF9oYXNoX2FsZ29yaXRobSA9IHsKICAgICJDb21vZG8gQ2VydGlmaWNhdGUgTWFuYWdlciI6WyJTSEEyNTYiXSwgCiAgICAiRGlnaUNlcnQiOlsiU0hBMjU2IiwiU0hBMzg0IiwiU0hBNTEyIl0sCiAgICAiRW50cnVzdCI6WyJTSEEyNTYiXSwKICAgICJUcnVzdHdhdmUiOlsiU0hBMTYwIiwiU0hBMjU2IiwiU0hBMzg0IiwiU0hBNTEyIl0KICAgIH0KZXJyb3JfbXNnX2xpc3QgPSBbXQppZiBfX25hbWVfXyA9PSAnX19tYWluX18nOgogICAgaWYgbGVuKGVhY2hfY2VydF9saXN0KT4xMDoKICAgICAgICBlcnJvcl9tc2dfbGlzdC5hcHBlbmQoIlZXIHN1cHBvcnQgb25seSAxMCBzeW1hbnRlY2ggbWlncmF0aW9uIGluIGEgc2luZ2xlIHJlcXVlc3QuIikKICAgIGR1cGxpY2F0ZV9lbnRyeV9saXN0PVsge2VhY2hfY2VydF90YWJsZVsiY29tbW9uTmFtZSJdOmVhY2hfY2VydF90YWJsZVsidXVpZCJdfSBmb3IgZWFjaF9jZXJ0X3RhYmxlIGluIHRhYnVsYXJfY2VydF9kZXRhaWwgaWYgZWFjaF9jZXJ0X3RhYmxlWyJhY3Rpb24iXSE9ICJkZWxldGUiIF0KICAgIGR1cGxpY2F0ZV9saXN0PVsgbGlzdChlYWNoX2NlcnQua2V5cygpKVswXSBmb3IgZWFjaF9jZXJ0IGluIGR1cGxpY2F0ZV9lbnRyeV9saXN0IGlmIGR1cGxpY2F0ZV9lbnRyeV9saXN0LmNvdW50KGVhY2hfY2VydCk+MV0KICAgIGNlcnRfbmFtZXMgPSBsaXN0KHNldChkdXBsaWNhdGVfbGlzdCkpCgogICAgZm9yIGVhY2hfY2VydF90YWJsZSBpbiB0YWJ1bGFyX2NlcnRfZGV0YWlsOgogICAgICAgIGlmIGVhY2hfY2VydF90YWJsZVsiYWN0aW9uIl0hPSAiZGVsZXRlIjoKICAgICAgICAgICAgZXJyb3JfbXNnID0gIiIKICAgICAgICAgICAgaWYgIjxjZXJ0aWZpY2F0ZUF1dGhvcml0eT4iIGluICJEaWdpQ2VydCI6CiAgICAgICAgICAgICAgICBpZiAgIjxjZXJ0aWZpY2F0ZVR5cGU+IiBpbiBbIlNTTCBFViBQbHVzIiwiU1NMIEVWIE11bHRpIERvbWFpbiJdIGFuZCBlYWNoX2NlcnRfdGFibGVbImNlcnRpZmljYXRlX3ZhbGlkaXR5Il0gPT0iMyI6CiAgICAgICAgICAgICAgICAgICAgZXJyb3JfbXNnICs9ICIgVmFsaWRpdHkgb2YgY2VydCB0eXBlIHt9IHNob3VsZCBiZSAxIG9yIDIgIi5mb3JtYXQoIjxjZXJ0aWZpY2F0ZVR5cGU+IikKICAgICAgICAgICAgICAgIGlmIGVhY2hfY2VydF90YWJsZVsib3JnYW5pemF0aW9uIl0gaW5bIiIsICIgIl06CiAgICAgICAgICAgICAgICAgICAgZXJyb3JfbXNnICs9ICIgb3JnYW5pemF0aW9uICIKICAgICAgICAgICAgZWxpZiAiPGNlcnRpZmljYXRlQXV0aG9yaXR5PiIgaW4gIkNvbW9kbyBDZXJ0aWZpY2F0ZSBNYW5hZ2VyIjoKICAgICAgICAgICAgICAgIGlmICI8Y2VydGlmaWNhdGVUeXBlPiIgaW4gWyJJbnN0YW50IFNTTCBDZXJ0aWZpY2F0ZSJdIGFuZCBlYWNoX2NlcnRfdGFibGVbImNlcnRpZmljYXRlX3ZhbGlkaXR5Il0gPT0iMyI6CiAgICAgICAgICAgICAgICAgICAgZXJyb3JfbXNnICs9ICIgVmFsaWRpdHkgb2YgY2VydCB0eXBlIHt9IHNob3VsZCBiZSAxICIuZm9ybWF0KCI8Y2VydGlmaWNhdGVUeXBlPiIpCiAgICAgICAgICAgICAgICBpZiBlYWNoX2NlcnRfdGFibGVbImNvbW1vbk5hbWUiXSBpblsiIiwgIiAiXToKICAgICAgICAgICAgICAgICAgICBlcnJvcl9tc2cgKz0gIiBjb21tb25OYW1lICIKICAgICAgICAgICAgICAgIGlmIGVhY2hfY2VydF90YWJsZVsibWFpbEFkZHJlc3MiXSBpblsiIiwgIiAiXToKICAgICAgICAgICAgICAgICAgICBlcnJvcl9tc2cgKz0gIiBtYWlsQWRkcmVzcyAiCiAgICAgICAgICAgIGVsaWYgIjxjZXJ0aWZpY2F0ZUF1dGhvcml0eT4iIGluICJFbnRydXN0IjoKICAgICAgICAgICAgICAgIGlmIGVhY2hfY2VydF90YWJsZVsiY2VydGlmaWNhdGVfdmFsaWRpdHkiXSA9PSIzIjoKICAgICAgICAgICAgICAgICAgICBlcnJvcl9tc2cgKz0gIiBWYWxpZGl0eSBzaG91bGQgMSBvciAyICIKICAgICAgICAgICAgICAgIGlmIGVhY2hfY2VydF90YWJsZVsiY29tbW9uTmFtZSJdIGluWyIiLCAiICJdOgogICAgICAgICAgICAgICAgICAgIGVycm9yX21zZyArPSAiIGNvbW1vbk5hbWUgIgogICAgICAgICAgICAgICAgaWYgZWFjaF9jZXJ0X3RhYmxlWyJvcmdhbml6YXRpb24iXSBpblsiIiwgIiAiXToKICAgICAgICAgICAgICAgICAgICBlcnJvcl9tc2cgKz0gIiBvcmdhbml6YXRpb24gIgogICAgICAgICAgICAgICAgaWYgZWFjaF9jZXJ0X3RhYmxlWyJjb3VudHJ5Il0gaW5bIiIsICIgIl06CiAgICAgICAgICAgICAgICAgICAgZXJyb3JfbXNnICs9ICIgY291bnRyeSAiCiAgICAgICAgICAgICAgICBpZiAiPGNvbmZpcm1QYXNzd29yZD4iIGluWyIiLCAiICJdOgogICAgICAgICAgICAgICAgICAgIGVycm9yX21zZyArPSAiIGNvbmZpcm1QYXNzd29yZCAiCiAgICAgICAgICAgICAgICBpZiAiPGVuY3J5cHRlZENoYWxsZW5nZVBhc3N3b3JkPiIgaW5bIiIsICIgIl06CiAgICAgICAgICAgICAgICAgICAgZXJyb3JfbXNnICs9ICIgQ2hhbGxlbmdlIFBhc3N3b3JkICIKICAgICAgICAgICAgZWxpZiAiPGNlcnRpZmljYXRlQXV0aG9yaXR5PiIgaW4gIlRydXN0d2F2ZSI6CiAgICAgICAgICAgICAgICBpZiAiPGNlcnRpZmljYXRlVHlwZT4iIGluIFsiUHJlbWl1bSBFViBTU0wiXSBhbmQgZWFjaF9jZXJ0X3RhYmxlWyJjZXJ0aWZpY2F0ZV92YWxpZGl0eSJdID09IjMiOgogICAgICAgICAgICAgICAgICAgIGVycm9yX21zZyArPSAiIFZhbGlkaXR5IG9mIGNlcnQgdHlwZSB7fSBzaG91bGQgYmUgMSBvciAyICIuZm9ybWF0KCI8Y2VydGlmaWNhdGVUeXBlPiIpCiAgICAgICAgICAgICAgICBpZiBlYWNoX2NlcnRfdGFibGVbIm9yZ2FuaXphdGlvblVuaXQiXSBpblsiIiwgIiAiXToKICAgICAgICAgICAgICAgICAgICBlcnJvcl9tc2cgKz0gIiBvcmdhbml6YXRpb24gVW5pdCAiCiAgICAgICAgICAgICAgICBpZiBlYWNoX2NlcnRfdGFibGVbIm9yZ2FuaXphdGlvbiJdIGluWyIiLCAiICJdOgogICAgICAgICAgICAgICAgICAgIGVycm9yX21zZyArPSAiIG9yZ2FuaXphdGlvbiAiCiAgICAgICAgICAgICAgICBpZiBlYWNoX2NlcnRfdGFibGVbImxvY2FsaXR5Il0gaW5bIiIsICIgIl06CiAgICAgICAgICAgICAgICAgICAgZXJyb3JfbXNnICs9ICIgbG9jYWxpdHkgIgogICAgICAgICAgICAgICAgaWYgZWFjaF9jZXJ0X3RhYmxlWyJzdGF0ZSJdIGluWyIiLCAiICJdOgogICAgICAgICAgICAgICAgICAgIGVycm9yX21zZyArPSAiIHN0YXRlICIKICAgICAgICAgICAgICAgIGlmIGVhY2hfY2VydF90YWJsZVsiY291bnRyeSJdIGluWyIiLCAiICJdOgogICAgICAgICAgICAgICAgICAgIGVycm9yX21zZyArPSAiIGNvdW50cnkgIgogICAgICAgICAgICAgICAgaWYgZWFjaF9jZXJ0X3RhYmxlWyJtYWlsQWRkcmVzcyJdIGluWyIiLCAiICJdOgogICAgICAgICAgICAgICAgICAgIGVycm9yX21zZyArPSAiIG1haWxBZGRyZXNzICIKICAgICAgICAgICAgaWYgIjxiaXRfbGVuZ3RoPiIgaW5bIiIsICIgIl06CiAgICAgICAgICAgICAgICBlcnJvcl9tc2cgKz0gIiBiaXRfbGVuZ3RoICIKICAgICAgICAgICAgaWYgIjxrZXlfdHlwZT4iIGluWyIiLCAiICJdOgogICAgICAgICAgICAgICAgZXJyb3JfbXNnICs9ICIga2V5X3R5cGUgIgogICAgICAgICAgICBpZiAiPGhhc2hfYWxnb3JpdGhtPiIgaW5bIiIsICIgIl06CiAgICAgICAgICAgICAgICBlcnJvcl9tc2cgKz0gIiBoYXNoX2FsZ29yaXRobSAiCiAgICAgICAgICAgIGlmIGVycm9yX21zZyAhPSIiOgogICAgICAgICAgICAgICAgZXJyb3JfbXNnX2xpc3QuYXBwZW5kKCJGb3IgdGhlIENldGlmaWNhdGUge30gLCB1cGRhdGUgdGhlIGZvbGxvd2luZyAte30iLmZvcm1hdChlYWNoX2NlcnRfdGFibGVbImNvbW1vbk5hbWUiXSxlcnJvcl9tc2cpKSAgICAgICAgCiAgICBmb3IgZWFjaF9uYW1lIGluIGNlcnRfbmFtZXM6CiAgICAgICAgZXJyb3JfbXNnX2xpc3QuYXBwZW5kKCJNdWx0aXBsZSBlbnRyeSBmb3IgdGhlIGNlcnRpZmljYXRlIHt9ICIuZm9ybWF0KGVhY2hfbmFtZSkpICAgIAogICAgaWYgZXJyb3JfbXNnX2xpc3Q6CiAgICAgICAgcHJpbnQoanNvbi5kdW1wcyhbeyJwcmVfdmFsX2NoZWNrIjoiXG4iLmpvaW4oZXJyb3JfbXNnX2xpc3QpfV0pKQogICAgZWxzZToKICAgICAgICBwcmludChqc29uLmR1bXBzKFt7InByZV92YWxfY2hlY2siOiJTdWNjZXNzIn1dKSkKICAgIA==",
        "_id" : null,
        "_keywords" : null
      }, {
        "name" : null,
        "description" : null,
        "version" : null,
        "type" : "script",
        "fieldIds" : null,
        "responseMapping" : null,
        "historyReferences" : [ ],
        "usedHistory" : null,
        "scriptName" : "get_server_type",
        "scriptData" : "aW1wb3J0IHN5cwpzeXMucGF0aC5pbnNlcnQoMCxBVlg6OkRFUEVOREVOQ0lFUykKc3lzLnBhdGguaW5zZXJ0KDAsQVZYOjpIRUxQRVIpCmltcG9ydCBqc29uCgpkaWN0X2NlcnRfc2VydmVyX3R5cGUgPSB7CiAgICAiQ29tb2RvIENlcnRpZmljYXRlIE1hbmFnZXIiOlsKICAgICAgICAiQU9MIiwKICAgICAgICAiQXBhY2hlL01vZFNTTCIsCiAgICAgICAgIkFwYWNoZS1TU0woQmVuLVNTTCwgbm90IFN0cm9uZ2hvbGQpIiwKICAgICAgICAiQzJOZXQgU3Ryb25naG9sZCIsCiAgICAgICAgIkNpc2NvIDMwMDAgU2VyaWVzIFZQTiBDb25jZW50cmF0b3IiLAogICAgICAgICJDaXRyaXgiLAogICAgICAgICJDb2JhbHQgUmFxIiwKICAgICAgICAiQ292YWxlbnQgU2VydmVyIFNvZnR3YXJlIiwKICAgICAgICAiRW5zaW0iLAogICAgICAgICJILVNwaGVyZSIsCiAgICAgICAgIklCTSBIVFRQIFNlcnZlciIsCiAgICAgICAgIklCTSBJbnRlcm5ldCBDb25uZWN0aW9uIFNlcnZlciIsCiAgICAgICAgImlQbGFuZXQiLAogICAgICAgICJKYXZhIFdlYiBTZXJ2ZXIgKEphdmFzb2Z0IC8gU3VuKSIsCiAgICAgICAgIkxvdHVzIERvbWlubyIsCiAgICAgICAgIkxvdHVzIERvbWlubyBHbyEiLAogICAgICAgICJNYWMgT1MgWCBTZXJ2ZXIiLAogICAgICAgICJNaWNyb3NvZnQgSUlTIDEueCB0byA0LngiLAogICAgICAgICJNaWNyb3NvZnQgSUlTIDUueCBvciA2LngiLAogICAgICAgICJOZXRzY2FwZSBFbnRlcnByaXNlIFNlcnZlciIsCiAgICAgICAgIk5ldHNjYXBlIEZhc3RUcmFjayIsCiAgICAgICAgIk5vdmVsbCBXZWIgU2VydmVyIiwKICAgICAgICAiUGxlc2siLAogICAgICAgICJRdWlkIFBybyBRdW8iLAogICAgICAgICJSMyBTU0wgU2VydmVyIiwKICAgICAgICAiUmF2ZW4gU1NMIiwKICAgICAgICAiUmVkSGF0IExpbnV4IiwKICAgICAgICAiU0FQIFdlYiBBcHBsaWNhdGlvbiBTZXJ2ZXIiLAogICAgICAgICJUb21jYXQiLAogICAgICAgICJXZWJzaXRlIFByb2Zlc3Npb25hbCIsCiAgICAgICAgIk9USEVSIiwKICAgICAgICAiV2ViU3RhciA0LnggYW5kIGxhdGVyIiwKICAgICAgICAiV2ViVGVuIChmcm9tIFRlbm9uKSIsCiAgICAgICAgIldITS9jUGFuZWwiLAogICAgICAgICJaZXVzIFdlYiBTZXJ2ZXIiXSwKICAgICJEaWdpQ2VydCI6WwogICAgICAgICJBcGFjaGUiLAogICAgICAgICJCRUEgV2VibG9naWMgOCBhbmQgOSIsCiAgICAgICAgIkJhcnJhY3VkYSIsCiAgICAgICAgIkJlYSBXZWJsb2dpYyA3IGFuZCBvbGRlciIsCiAgICAgICAgIkNpc2NvIiwKICAgICAgICAiQ2l0cml4IChPdGhlcikiLAogICAgICAgICJDaXRyaXggQWNjZXNzIEVzc2VudGlhbHMiLAogICAgICAgICJDaXRyaXggQWNjZXNzIEdhdGV3YXkgNC54IiwKICAgICAgICAiQ2l0cml4IEFjY2VzcyBHYXRld2F5IDUueCBhbmQgaGlnaGVyIiwKICAgICAgICAiRjUgQmlnLUlQIiwKICAgICAgICAiRjUgRmlyZVBhc3MiLAogICAgICAgICJJQk0gSFRUUCBTZXJ2ZXIiLAogICAgICAgICJKYXZhIFdlYiBTZXJ2ZXIgKEphdmFzb2Z0IC8gU3VuKSIsCiAgICAgICAgIkphdmEgV2ViIFNlcnZlciAoSmF2YXNvZnQgLyBTdW4pIiwKICAgICAgICAiTGlnaHR0cGQiLAogICAgICAgICJMb3R1cyBEb21pbm8iLAogICAgICAgICJNYWMgT1MgWCBTZXJ2ZXIiLAogICAgICAgICJNaWNyb3NvZnQgRXhjaGFuZ2UgU2VydmVyIDIwMDMiLAogICAgICAgICJNaWNyb3NvZnQgRXhjaGFuZ2UgU2VydmVyIDIwMDciLAogICAgICAgICJNaWNyb3NvZnQgRXhjaGFuZ2UgU2VydmVyIDIwMTAiLAogICAgICAgICJNaWNyb3NvZnQgRXhjaGFuZ2UgU2VydmVyIDIwMTMiLAogICAgICAgICJNaWNyb3NvZnQgRm9yZWZyb250IFVuaWZpZWQgQWNjZXNzIEdhdGV3YXkiLAogICAgICAgICJNaWNyb3NvZnQgSUlTIDEueCB0byA0LngiLAogICAgICAgICJNaWNyb3NvZnQgSUlTIDUgb3IgNiIsCiAgICAgICAgIk1pY3Jvc29mdCBJSVMgNyIsCiAgICAgICAgIk1pY3Jvc29mdCBJSVMgOCIsCiAgICAgICAgIk1pY3Jvc29mdCBMaXZlIENvbW11bmljYXRpb25zIFNlcnZlciAyMDA1IiwKICAgICAgICAiTWljcm9zb2Z0IEx5bmMgU2VydmVyIDIwMTAiLAogICAgICAgICJNaWNyb3NvZnQgTHluYyBTZXJ2ZXIgMjAxMyIsCiAgICAgICAgIk1pY3Jvc29mdCBPQ1MgUjIiLAogICAgICAgICJNaWNyb3NvZnQgT2ZmaWNlIENvbW11bmljYXRpb25zIFNlcnZlciAyMDA3IiwKICAgICAgICAiTWljcm9zb2Z0IFNtYWxsIEJ1c2luZXNzIFNlcnZlciAyMDA4IGFuZCAyMDExIiwKICAgICAgICAiTmV0c2NhcGUgRW50ZXJwcmlzZSBTZXJ2ZXIiLAogICAgICAgICJOZXRzY2FwZSBpUGxhbmV0IiwKICAgICAgICAiTm92ZWxsIE5ldFdhcmUiLAogICAgICAgICJOb3ZlbGwgaUNoYWluIiwKICAgICAgICAiT1RIRVIiLAogICAgICAgICJPcmFjbGUiLAogICAgICAgICJRbWFpbCIsCiAgICAgICAgIlN1bk9uZSIsCiAgICAgICAgIldlYlN0YXIiLAogICAgICAgICJaZXVzIFdlYiBTZXJ2ZXIiLAogICAgICAgICJjUGFuZWwiLAogICAgICAgICJuZ2lueCJdCiAgICAgICAgfQppZiBfX25hbWVfXyA9PSAnX19tYWluX18nOgogICAgcHJpbnQoanNvbi5kdW1wcyhbeyJzZXJ2ZXJUeXBlIjp2YWx1ZX0gZm9yIHZhbHVlIGluIGRpY3RfY2VydF9zZXJ2ZXJfdHlwZVsiPGNlcnRpZmljYXRlQXV0aG9yaXR5PiJdXSkp",
        "_id" : null,
        "_keywords" : null
      } ],
      "accessType" : null,
      "parentTemplate" : null,
      "hiddenTemplate" : false,
      "groupData" : {
        "treeData" : [ ],
        "listData" : [ null ]
      },
      "workflow_template_name" : null,
      "_keywords" : null
    },
    "configuration" : {
      "aclIdentifiers" : [ ],
      "permission" : [ "super access:submit" ],
      "skipFlow" : false,
      "emailConfiguration" : {
        "emailNotificationEnabled" : false,
        "createdNotificationConfig" : {
          "notifyUser" : false,
          "notifyTargetGroup" : false,
          "emailsList" : [ ]
        },
        "reviewedNotificationConfig" : {
          "notifyUser" : false,
          "notifyTargetGroup" : false,
          "emailsList" : [ ]
        },
        "submittedNotificationConfig" : {
          "notifyUser" : false,
          "notifyTargetGroup" : false,
          "emailsList" : [ ]
        },
        "rejectedNotificationConfig" : {
          "notifyUser" : false,
          "notifyTargetGroup" : false,
          "emailsList" : [ ]
        }
      },
      "multipleScenarioEnabled" : false,
      "maxScenarioCount" : 1,
      "enableSaveDraft" : false,
      "enableCancel" : true,
      "enableClose" : false,
      "enableBreakDown" : false,
      "labels" : {
        "submit" : "",
        "reject" : ""
      },
      "enableAutoApprove" : false,
      "failoverState" : 2,
      "successState" : 1,
      "dynamicAuth" : null,
      "regexList" : null,
      "regexOperation" : null,
      "regexPattern" : null,
      "accessMode" : null
    },
    "data" : null,
    "api_list" : null
  }, {
    "uniqueId" : null,
    "directoryUniqueId" : null,
    "source" : null,
    "tags" : [ ],
    "userName" : null,
    "objectType" : "TaskDetails",
    "description" : null,
    "historyReferences" : [ ],
    "usedHistory" : null,
    "sampleInput" : null,
    "sampleOutput" : null,
    "contentTab" : null,
    "successiveTasks" : {
      "success" : [ {
        "taskId" : "add_digicert_connectors_1",
        "taskName" : null,
        "subflowId" : "FTtm2pYj",
        "parentSubflowId" : null,
        "taskType" : "script",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ],
      "incoming" : [ {
        "taskId" : "certificate_details_1",
        "taskName" : null,
        "subflowId" : "FTtm2pYj",
        "parentSubflowId" : null,
        "taskType" : "script",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ]
    },
    "flowPathID" : null,
    "ignoredForStatusComputation" : false,
    "flowName" : "",
    "subFlowID" : null,
    "globalData" : null,
    "input" : [ {
      "name" : null,
      "key" : "avx_password",
      "value" : "<%avx_password%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "avx_password",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : null,
      "key" : "avx_username",
      "value" : "<%avx_username%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "avx_username",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : null,
      "key" : "avx_session_url",
      "value" : "<%avx_session_url%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "avx_session_url",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    } ],
    "notificationMessage" : {
      "1" : "",
      "0" : "",
      "2" : ""
    },
    "ancestor" : null,
    "metaData" : {
      "taskHeader" : "Get Session ID  ",
      "hide" : false,
      "lock" : false,
      "successState" : 1,
      "failoverState" : 2,
      "taskScope" : null,
      "hideFromStageView" : false,
      "mode" : "Developer",
      "nature" : "normal",
      "lowCodeTask" : false
    },
    "parentSubFlowID" : null,
    "helpContent" : null,
    "deviceName" : null,
    "enableDeviceInventory" : false,
    "enableAuthorization" : false,
    "enableCustomHeader" : false,
    "authorization" : null,
    "deferredMode" : false,
    "_id" : null,
    "task_id" : "rest_1",
    "task_name" : "Get Session ID  ",
    "task_type" : "rest",
    "task_category" : "rest",
    "component_type" : "others",
    "setNullProperties" : true,
    "folderName" : null,
    "sub_group" : null,
    "group_name" : null,
    "viewable_type" : "custom",
    "url" : "<%avx_session_url%>",
    "method" : "POST",
    "content_type" : "application/json",
    "payload" : { },
    "header" : {
      "username" : "<%avx_username%>",
      "password" : "<%avx_password%>"
    },
    "rest_type" : null
  }, {
    "uniqueId" : null,
    "directoryUniqueId" : null,
    "source" : null,
    "tags" : [ ],
    "userName" : null,
    "objectType" : "TaskDetails",
    "description" : "",
    "historyReferences" : [ ],
    "usedHistory" : null,
    "sampleInput" : null,
    "sampleOutput" : null,
    "contentTab" : null,
    "successiveTasks" : {
      "incoming" : [ {
        "taskId" : "createform_1",
        "taskName" : null,
        "subflowId" : "FTtm2pYj",
        "parentSubflowId" : null,
        "taskType" : "form",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ],
      "success" : [ {
        "taskId" : "rest_1",
        "taskName" : null,
        "subflowId" : "FTtm2pYj",
        "parentSubflowId" : null,
        "taskType" : "rest",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ]
    },
    "flowPathID" : null,
    "ignoredForStatusComputation" : false,
    "flowName" : "",
    "subFlowID" : null,
    "globalData" : null,
    "input" : [ ],
    "notificationMessage" : {
      "1" : "",
      "0" : "",
      "2" : ""
    },
    "ancestor" : null,
    "metaData" : {
      "taskHeader" : "Get Session Details",
      "hide" : false,
      "lock" : false,
      "successState" : 1,
      "failoverState" : 2,
      "taskScope" : null,
      "hideFromStageView" : false,
      "mode" : "Developer",
      "nature" : "normal",
      "lowCodeTask" : false
    },
    "parentSubFlowID" : null,
    "helpContent" : null,
    "name" : "",
    "syncExecution" : true,
    "_id" : null,
    "task_id" : "certificate_details_1",
    "task_name" : "Get Session Details",
    "task_type" : "script",
    "task_category" : "script",
    "component_type" : "others",
    "setNullProperties" : true,
    "folderName" : null,
    "sub_group" : null,
    "group_name" : null,
    "viewable_type" : "custom",
    "scriptType" : "Python",
    "scriptContent" : "\"\"\"\nName of Script: Get Session Details\nAuthor        : Yuvaraj\nEmail Id      : yuvaraj.g@appviewx.com\nLast Updated  : 20-12-2017\nVersion       : V1\n\"\"\"\nimport sys\nimport os\nsys.path.append(AVX::DEPENDENCIES)\nsys.path.append(AVX::HELPER)\n\ndef fetch_gateway_key():\n    \"\"\" This function fetch gateway key from appviewx config file\n    Args:\n        none\n    Returns:\n        String: return appviewx gateway key\n    \"\"\"\n    conf_content = {}\n    abs_path = os.path.dirname(os.path.abspath(__file__))\n    prop_file_path = abs_path + \"/../properties/appviewx.properties\"\n    prop_file = open(prop_file_path)\n    prop_file_lines = prop_file.readlines()\n    for line in prop_file_lines:\n        if line is not \"\\n\" and \"GATEWAY_KEY\" in line or \"GATEWAY_BASE_URL\" in line:\n            conf_content[line.split(\"=\")[0]] = line.split(\"=\")[1].replace(\"\\n\",\"\")\n    prop_file.close()\n    return conf_content['GATEWAY_BASE_URL'], conf_content['GATEWAY_KEY']\n    \ngateway_url, gateway_key = fetch_gateway_key()\nurl = gateway_url + 'avxapi/acctmgmt-perform-login?gwkey=' + gateway_key + '&gwsource=external'\n\nAVX::LOG(url)\nout_json = {\"url\":url,\"gw_key\":gateway_key,\"gw_url\":gateway_url}\nAVX::OUTPUT(out_json)",
    "http_method" : "POST",
    "action_id" : "run-script"
  }, {
    "uniqueId" : null,
    "directoryUniqueId" : null,
    "source" : null,
    "tags" : [ ],
    "userName" : null,
    "objectType" : "TaskDetails",
    "description" : "",
    "historyReferences" : [ ],
    "usedHistory" : null,
    "sampleInput" : null,
    "sampleOutput" : null,
    "contentTab" : null,
    "successiveTasks" : {
      "incoming" : [ {
        "taskId" : "rest_1",
        "taskName" : null,
        "subflowId" : "FTtm2pYj",
        "parentSubflowId" : null,
        "taskType" : "rest",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ],
      "success" : [ {
        "taskId" : "submit_csr_to_ca_1",
        "taskName" : null,
        "subflowId" : "FTtm2pYj",
        "parentSubflowId" : null,
        "taskType" : "script",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ],
      "failover" : [ {
        "taskId" : "delay_1",
        "taskName" : null,
        "subflowId" : "FTtm2pYj",
        "parentSubflowId" : null,
        "taskType" : "delay",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ]
    },
    "flowPathID" : null,
    "ignoredForStatusComputation" : false,
    "flowName" : "",
    "subFlowID" : null,
    "globalData" : null,
    "input" : [ {
      "name" : null,
      "key" : "encryptedChallengePassword",
      "value" : "<%encryptedChallengePassword%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "encryptedChallengePassword",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : null,
      "key" : "avx_sessionId",
      "value" : "<%avx_sessionId%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "avx_sessionId",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : null,
      "key" : "caSettingName",
      "value" : "<%caSettingName%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "caSettingName",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : null,
      "key" : "certi_details",
      "value" : "<%certi_details%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "certi_details",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : null,
      "key" : "certificateAuthority",
      "value" : "<%certificateAuthority%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "certificateAuthority",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : null,
      "key" : "serverType",
      "value" : "<%serverType%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "serverType",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : null,
      "key" : "certificateType",
      "value" : "<%certificateType%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "certificateType",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : null,
      "key" : "avx_gateway_key",
      "value" : "<%avx_gateway_key%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "avx_gateway_key",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : null,
      "key" : "certGroup",
      "value" : "<%certGroup%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "certGroup",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : null,
      "key" : "avx_gateway_url",
      "value" : "<%avx_gateway_url%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "avx_gateway_url",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    } ],
    "notificationMessage" : {
      "1" : "",
      "0" : "",
      "2" : ""
    },
    "ancestor" : null,
    "metaData" : {
      "taskHeader" : "Create CA Connector",
      "hide" : false,
      "lock" : false,
      "successState" : 1,
      "failoverState" : 2,
      "taskScope" : null,
      "hideFromStageView" : false,
      "mode" : "Developer",
      "nature" : "normal",
      "lowCodeTask" : false
    },
    "parentSubFlowID" : null,
    "helpContent" : null,
    "name" : "",
    "syncExecution" : true,
    "_id" : null,
    "task_id" : "add_digicert_connectors_1",
    "task_name" : "Create CA Connector",
    "task_type" : "script",
    "task_category" : "script",
    "component_type" : "others",
    "setNullProperties" : true,
    "folderName" : null,
    "sub_group" : null,
    "group_name" : null,
    "viewable_type" : "custom",
    "scriptType" : "Python",
    "scriptContent" : "\"\"\"\nName of Script: ADD CA Connectors\nAuthor        : Yuvaraj\nEmail Id      : yuvaraj.g@appviewx.com\nLast Updated  : 20-12-2017\nVersion       : V1\nAdd CA connector with the information from the parent certificate and also from the user input\n\"\"\"\nimport sys\nsys.path.append(AVX::DEPENDENCIES)\nsys.path.append(AVX::HELPER)\nimport logger_util\nimport appviewx\nconnection = appviewx.db_connection()\ncert_collection = connection.appviewx.certificate\ndb_ca_connectorInfo_collection = connection.appviewx.caConnectorInfo\n\nlogger = logger_util.get_logger('Symantec Cert Migration ADD CA Connectors')\nnull = None\n\nimport requests\nrequests.packages.urllib3.disable_warnings()\ngw_source = \"external\"\nbase_url = \"<%avx_gateway_url%>avxapi/\"\ngwkey = \"<%avx_gateway_key%>\"\nsession_id = \"<%avx_sessionId%>\"\n\nlist_of_certificates = [cert for cert in <%certi_details%> if cert['action'] != \"delete\"]\n\nuuids = []\nsuccess_submission = []\nfailed_submission = []\n\ndef create_cert_ca_connector(cert):\n    '''\n    create ca connector for the input certificate\n    return: certificate UUID\n    '''\n    try:\n        url_create_cert_ca_connector = base_url+\"cert-ca-connectorinfo-save?gwkey={gwkey}&gwsource={gw_source}\".format(gwkey=gwkey,gw_source=gw_source)\n        logger.info(\"url_create_cert_ca_connector:\"+str(url_create_cert_ca_connector))\n        payload_data = get_create_ca_connector_info(cert)\n        logger.info(\"payload_data\"+str(payload_data))\n        header = {\"sessionId\":session_id,\"Content-Type\":\"application/json\"}\n        \n        create_ca_connector_get_response = requests.post(url_create_cert_ca_connector,headers = header,data = json.dumps(payload_data),verify=False)\n        logger.info(\"create_ca_connector_get_response \"+str(create_ca_connector_get_response.text))\n        create_ca_connector_get_response = json.loads(create_ca_connector_get_response.text)\n        \n        if create_ca_connector_get_response['response']:\n            logger.info(\"uuid\"+str(create_ca_connector_get_response.get(\"response\").get(\"uuid\")))\n            cert_ca_uuid = str(create_ca_connector_get_response.get(\"response\").get(\"uuid\"))\n            caconnector_coll_data = str(db_ca_connectorInfo_collection.find_one({\"certificateUuid\" : cert_ca_uuid})[\"_id\"])\n            logger.info(\"caconnector_coll_data\"+str(caconnector_coll_data))\n            uuids.append({\"uuid\":cert_ca_uuid,\"common_name\":cert.get(\"commonName\"),\"ca_connector\":caconnector_coll_data})\n            success_submission.append(cert.get(\"commonName\"))\n        else:\n            failed_submission.append(cert.get(\"commonName\"))\n    except:\n        failed_submission.append(cert.get(\"commonName\"))\n        \ndef get_create_ca_connector_info(cert):\n    '''\n    frame payload for ca-connector creation api\n    return: payload data\n    '''\n    cert_CA = cert.get(\"certificateAuthority\")\n    cert_CA_cert_type = cert.get(\"certificateType\")\n    cert_CA_Connector_name = cert_CA+\" \"+cert_CA_cert_type+\" connector\"\n    csrParameters = {}\n    csrParameters[\"commonName\"] = cert.get(\"commonName\",\"\")\n    san = cert.get(\"san\",\"\").split(\",\") if cert.get(\"san\",\"\")!= \"\" else []\n    csrParameters[\"subjectAlternativeNames\"] = san \n    csrParameters[\"organization\"] = cert.get(\"organization\",\"\")\n    csrParameters[\"organizationUnit\"] = cert.get(\"organizationUnit\",\"\")\n    csrParameters[\"streetAddress\"] = cert.get(\"streetAddress\",\"\")\n    csrParameters[\"locality\"] = cert.get(\"locality\",\"\")\n    csrParameters[\"state\"] = cert.get(\"state\",\"\")\n    csrParameters[\"country\"] = cert.get(\"country\",\"\")\n    csrParameters[\"postalCode\"] = \"\"\n    mail_add = cert.get(\"mailAddress\",\"\")\n    csrParameters[\"mailAddress\"] = mail_add if mail_add and mail_add !=\"undefined\" else \"\"\n    csrParameters[\"encryptedChallengePassword\"] = cert.get(\"encryptedChallengePassword\",\"\")   \n    csrParameters[\"hashFunction\"] = cert.get(\"hash_algorithm\",\"\")\n    csrParameters[\"keyType\"] = cert.get(\"key_type\",\"\")\n    csrParameters[\"bitLength\"] = cert.get(\"bit_length\",\"\")\n    csrParameters[\"certificateCategories\"] = [\"Server\",\"Client\"]\n\n    caConnectorInfo = {}\n    caConnectorInfo[\"_id\"] = \"\"\n    caConnectorInfo[\"certificateUuid\"] = \"\"\n    caConnectorInfo[\"certificateAuthority\"] = cert_CA\n    caConnectorInfo[\"isAutoRenewal\"] = \"false\"\n    caConnectorInfo[\"caSettingName\"] = cert.get(\"caSettingName\",\"\")\n    caConnectorInfo[\"certificateType\"] = cert_CA_cert_type\n    caConnectorInfo[\"name\"] =cert_CA_Connector_name   \n    caConnectorInfo[\"description\"] = \"\"\n    caConnectorInfo[\"csrGenerationSource\"] = \"appviewx\"\n    caConnectorInfo[\"vendorSpecificDetails\"] = {\"serverType\": cert.get(\"serverType\",\"\"),\n                                                \"orderId\":\"\",\n                                                \"caCertId\":\"\"}\n    caConnectorInfo[\"csrParameters\"] = csrParameters\n    caConnectorInfo[\"genericFields\"] = {\"Validity\":cert.get(\"certificate_validity\",\"\")}\n    caConnectorInfo[\"validityInDays\"] = str(int(cert.get(\"certificate_validity\",\"\"))*365)\n    \n    response = {\"payload\":\n        {\n        \"caConnectorInfo\" : caConnectorInfo,\n        \"certificateGroup\" : { \"name\" : \"<%certGroup%>\" }\n        }\n    }    \n    return response\n\nif __name__ == \"__main__\":\n    for cert in list_of_certificates:\n        cert[\"certificateAuthority\"]= \"<%certificateAuthority%>\"        \n        cert[\"certificateType\"]=\"<%certificateType%>\"        \n        cert[\"caSettingName\"]=\"<%caSettingName%>\"        \n        if cert[\"certificateAuthority\"] ==\"DigiCert\" or cert[\"certificateAuthority\"] ==\"Comodo Certificate Manager\":\n            cert[\"serverType\"] =\"<%serverType%>\"            \n        if cert[\"certificateAuthority\"] ==\"Entrust\":\n            import base64\n            encoded = base64.b64encode(\"<%encryptedChallengePassword%>\".encode()).decode()\n            cert[\"encryptedChallengePassword\"] = encoded            \n        create_cert_ca_connector(cert)\n    for cert in success_submission:\n        AVX::LOG(\"CA Connector for the certificate with common name - {cert_common_name} is created successfully\".format(cert_common_name=cert))\n    for cert in failed_submission:\n        AVX::LOG(\"Unable to create CA Connector for the certificate with common name - {cert_common_name}\".format(cert_common_name=cert))\n    logger.info(\"uuids \"+str(uuids))\n    if len(list_of_certificates) != len(failed_submission):\n        AVX::OUTPUT({\"uuids\":uuids})\n    else:\n        AVX::LOG(\"WorkOrder status failed for the triggered certficate\")\n        AVX::OUTPUT({},2)",
    "http_method" : "POST",
    "action_id" : "run-script"
  }, {
    "uniqueId" : null,
    "directoryUniqueId" : null,
    "source" : null,
    "tags" : [ ],
    "userName" : null,
    "objectType" : "TaskDetails",
    "description" : "",
    "historyReferences" : [ ],
    "usedHistory" : null,
    "sampleInput" : null,
    "sampleOutput" : null,
    "contentTab" : null,
    "successiveTasks" : {
      "incoming" : [ {
        "taskId" : "add_digicert_connectors_1",
        "taskName" : null,
        "subflowId" : "FTtm2pYj",
        "parentSubflowId" : null,
        "taskType" : "script",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ],
      "success" : [ {
        "taskId" : "get_request_id_5",
        "taskName" : null,
        "subflowId" : "FTtm2pYj",
        "parentSubflowId" : null,
        "taskType" : "script",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ],
      "failover" : [ {
        "taskId" : "delay_2",
        "taskName" : null,
        "subflowId" : "FTtm2pYj",
        "parentSubflowId" : null,
        "taskType" : "delay",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ]
    },
    "flowPathID" : null,
    "ignoredForStatusComputation" : false,
    "flowName" : "",
    "subFlowID" : null,
    "globalData" : null,
    "input" : [ {
      "name" : null,
      "key" : "avx_sessionId",
      "value" : "<%avx_sessionId%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "avx_sessionId",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : null,
      "key" : "ca_connector_uuid",
      "value" : "<%ca_connector_uuid%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "ca_connector_uuid",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : null,
      "key" : "avx_gateway_key",
      "value" : "<%avx_gateway_key%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "avx_gateway_key",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : null,
      "key" : "avx_gateway_url",
      "value" : "<%avx_gateway_url%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "avx_gateway_url",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    } ],
    "notificationMessage" : {
      "1" : "",
      "0" : "",
      "2" : ""
    },
    "ancestor" : null,
    "metaData" : {
      "taskHeader" : "Submit CSR to CA",
      "hide" : false,
      "lock" : false,
      "successState" : 1,
      "failoverState" : 2,
      "taskScope" : null,
      "hideFromStageView" : false,
      "mode" : "Developer",
      "nature" : "normal",
      "lowCodeTask" : false
    },
    "parentSubFlowID" : null,
    "helpContent" : null,
    "name" : "",
    "syncExecution" : true,
    "_id" : null,
    "task_id" : "submit_csr_to_ca_1",
    "task_name" : "Submit CSR to CA",
    "task_type" : "script",
    "task_category" : "script",
    "component_type" : "others",
    "setNullProperties" : true,
    "folderName" : null,
    "sub_group" : null,
    "group_name" : null,
    "viewable_type" : "custom",
    "scriptType" : "Python",
    "scriptContent" : "\"\"\"\nName of Script: Submit CSR to CA\nAuthor        : Yuvaraj\nEmail Id      : yuvaraj.g@appviewx.com\nLast Updated  : 20-12-2017\nVersion       : V1\nscript to submit the csr to CA\n\"\"\"\nimport sys\nsys.path.insert(0,AVX::HELPER)\nsys.path.insert(0,AVX::DEPENDENCIES)\nimport logger_util\nimport json\nimport requests\nimport time\n\nlogger = logger_util.get_logger('Symantec Cert Migration-Submit CSR to CA')\nrequests.packages.urllib3.disable_warnings()\n\ngw_source = \"external\"\nbase_url = \"<%avx_gateway_url%>avxapi/\"\ngwkey = \"<%avx_gateway_key%>\"\nsession_id = \"<%avx_sessionId%>\"\ncert_id_name = <%ca_connector_uuid%>\nsuccess_submission = []\nfailed_submission = []\n\ndef submit_csr(uuid):\n    '''\n    submit the csr (created during ca-connector creation) to the Certificate Authority\n    input: data from previous script (cert uuid,parent uuid,common name)\n    '''\n    #try:\n    #url_submit_csr = base_url+\"/cert-cacert-aps-submit-csr?gwkey={gwkey}&gwsource={gw_source}\".format(gwkey=gwkey,gw_source=gw_source)\n    url_submit_csr = base_url+\"cert-aps-submit-csr?gwkey={gwkey}&gwsource={gw_source}\".format(gwkey=gwkey,gw_source=gw_source)\n    payload_data = get_submit_csr_payload(uuid)\n    logger.info(\"url_submit_csr :\"+str(url_submit_csr))\n    logger.info(\"payload_data :\"+str(payload_data))\n    headers = {\"sessionId\":session_id,\"Content-Type\":\"application/json\"}    \n    submit_csr_response = requests.post(url_submit_csr, headers = headers, data = payload_data, verify = False)\n    logger.info(\"submit_csr_response :\"+str(submit_csr_response))\n    submit_csr_response = json.loads(submit_csr_response.text)\n    if submit_csr_response.get(\"response\").get(\"message\") == \"Csr submission triggered successfully.\":\n        success_submission.append({\"common_name\":uuid.get(\"common_name\"),\"uuid\":uuid.get(\"uuid\"),\"ca_connector\":uuid.get(\"ca_connector\")})\n    else:\n        failed_submission.append(uuid.get(\"common_name\"))\n    #except:\n    #    failed_submission.append(uuid.get(\"common_name\"))\n    \ndef get_submit_csr_payload(uuid):\n    '''\n    submit csr payload generation\n    return: payload for submit csr API\n    '''    \n    payload_data = {\"payload\": {\"certificateUuid\": uuid.get(\"uuid\"),\"apsInputRequest\": {\"comments\": \"submit\"}}}    \n    return json.dumps(payload_data)\n    \nif __name__ == \"__main__\":\n    for cert in cert_id_name:        \n        submit_csr(cert)\n        time.sleep(10)\n    for cert in success_submission:\n        AVX::LOG(\"CSR Submitted successfully for the certificate with common name - {cert_common_name}\".format(cert_common_name=cert.get(\"common_name\")))\n    for cert in failed_submission:\n        AVX::LOG(\"CSR Submission failed for the certificate with common name - {cert_common_name}\".format(cert_common_name=cert))\n    if len(cert_id_name) != len(failed_submission):\n        AVX::LOG(\"WorkFlow status passed for the CSR Submission\")\n        AVX::OUTPUT({\"uuids\":success_submission})\n    else:\n        AVX::LOG(\"WorkOrder status failed for the CSR Submission\")\n        AVX::OUTPUT({},2)",
    "http_method" : "POST",
    "action_id" : "run-script"
  }, {
    "uniqueId" : null,
    "directoryUniqueId" : null,
    "source" : null,
    "tags" : [ ],
    "userName" : null,
    "objectType" : "TaskDetails",
    "description" : "",
    "historyReferences" : [ ],
    "usedHistory" : null,
    "sampleInput" : null,
    "sampleOutput" : null,
    "contentTab" : null,
    "successiveTasks" : {
      "success" : [ {
        "taskId" : "get_workorder_status_1",
        "taskName" : null,
        "subflowId" : "FTtm2pYj",
        "parentSubflowId" : null,
        "taskType" : "script",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ],
      "incoming" : [ {
        "taskId" : "submit_csr_to_ca_1",
        "taskName" : null,
        "subflowId" : "FTtm2pYj",
        "parentSubflowId" : null,
        "taskType" : "script",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ],
      "failover" : [ {
        "taskId" : "delay_4",
        "taskName" : null,
        "subflowId" : "FTtm2pYj",
        "parentSubflowId" : null,
        "taskType" : "delay",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ]
    },
    "flowPathID" : null,
    "ignoredForStatusComputation" : false,
    "flowName" : "",
    "subFlowID" : null,
    "globalData" : null,
    "input" : [ {
      "name" : null,
      "key" : "avx_sessionId",
      "value" : "<%avx_sessionId%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "avx_sessionId",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : null,
      "key" : "avx_gateway_key",
      "value" : "<%avx_gateway_key%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "avx_gateway_key",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : null,
      "key" : "csr_submit_uuid",
      "value" : "<%csr_submit_uuid%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "csr_submit_uuid",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : null,
      "key" : "avx_gateway_url",
      "value" : "<%avx_gateway_url%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "avx_gateway_url",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    } ],
    "notificationMessage" : {
      "1" : "",
      "0" : "",
      "2" : ""
    },
    "ancestor" : null,
    "metaData" : {
      "taskHeader" : "Get Request ID",
      "hide" : false,
      "lock" : false,
      "successState" : 1,
      "failoverState" : 2,
      "taskScope" : null,
      "hideFromStageView" : false,
      "mode" : "Developer",
      "nature" : "normal",
      "lowCodeTask" : false
    },
    "parentSubFlowID" : null,
    "helpContent" : null,
    "name" : "",
    "syncExecution" : true,
    "_id" : null,
    "task_id" : "get_request_id_5",
    "task_name" : "Get Request ID",
    "task_type" : "script",
    "task_category" : "script",
    "component_type" : "others",
    "setNullProperties" : true,
    "folderName" : null,
    "sub_group" : null,
    "group_name" : null,
    "viewable_type" : "custom",
    "scriptType" : "Python",
    "scriptContent" : "\"\"\"\nName of Script: Get Request Id\nAuthor        : Yuvaraj\nEmail Id      : yuvaraj.g@appviewx.com\nLast Updated  : 20-12-2017\nVersion       : V1\nscript to fetch the aps request ID that is triggered during Submit csr to ca Process\n\"\"\"\nimport sys\nimport json\nimport requests\nimport time\nrequests.packages.urllib3.disable_warnings()\nsys.path.append(AVX::DEPENDENCIES)\nsys.path.append(AVX::HELPER)\nimport logger_util\nimport appviewx\nconn = appviewx.db_connection()\nmapping_collection = conn.appviewx.workOrderMapping\ncertificate_collection = conn.appviewx.certificate\nlogger = logger_util.get_logger('Symantec Cert Migration Request ID')\ncert_uuid = <%csr_submit_uuid%>\n\ngw_source = \"external\"\nbase_url = \"<%avx_gateway_url%>avxapi/\"\ngwkey = \"<%avx_gateway_key%>\"\nsession_id = \"<%avx_sessionId%>\"\nrequest_ids = []\nreq_id_list = []\n\ndef get_request_id():\n    '''\n    fetch request id of APS request submitted\n    return: APS request ID\n    '''\n    for uuid in cert_uuid:\n        try:\n            \"\"\"\n            for each_cert_cm in certificate_collection.find({\"commonName\" : uuid.get(\"common_name\")}):\n                #if each_cert_cm[\"uuid\"] == uuid.get(\"uuid\") or each_cert_cm[\"csrUuid\"] == uuid.get(\"uuid\"):\n                if each_cert_cm[\"uuid\"] == uuid.get(\"uuid\"):    \n                    certificateUuid = each_cert_cm[\"uuid\"]\n                    break       \n            \"\"\"\n            req_id = mapping_collection.find_one({\"type\" : \"certificate\", \"connectorId\" : uuid.get(\"ca_connector\")})[\"requestId\"]\n            logger.info(\"req_id :::\"+str(req_id))\n            if req_id:\n                req_id_list.append(req_id)                \n                AVX::LOG(\"Request ID retrieved for the certificate - \"+uuid.get(\"common_name\"))\n                AVX::LOG(\"APS Request ID is :\"+ str(req_id))\n                request_ids.append({\"uuid\":uuid.get(\"uuid\"),\"common_name\":uuid.get(\"common_name\"),\"ca_connector\":uuid.get(\"ca_connector\"),\"request_id\":req_id})\n        except Exception as e:\n            logger.info(e)\n            time.sleep(10)\nif __name__ == '__main__':\n    count = 0\n    while len(cert_uuid) != len(req_id_list) and count<500:\n        get_request_id()\n        req_id_list =list(set(req_id_list))\n        time.sleep(10)\n        count+=1    \n    if request_ids:        \n        AVX::OUTPUT({\"request_ids\":request_ids})\n    else:     \n        AVX::LOG(\"Falied to get Request ID for the certificate\")            \n        AVX::OUTPUT({},2)",
    "http_method" : "POST",
    "action_id" : "run-script"
  }, {
    "uniqueId" : null,
    "directoryUniqueId" : null,
    "source" : null,
    "tags" : [ ],
    "userName" : null,
    "objectType" : "TaskDetails",
    "description" : "",
    "historyReferences" : [ ],
    "usedHistory" : null,
    "sampleInput" : null,
    "sampleOutput" : null,
    "contentTab" : null,
    "successiveTasks" : {
      "incoming" : [ {
        "taskId" : "get_request_id_5",
        "taskName" : null,
        "subflowId" : "FTtm2pYj",
        "parentSubflowId" : null,
        "taskType" : "script",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ],
      "success" : [ {
        "taskId" : "default_1",
        "taskName" : null,
        "subflowId" : "FTtm2pYj",
        "parentSubflowId" : null,
        "taskType" : "email",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ]
    },
    "flowPathID" : null,
    "ignoredForStatusComputation" : false,
    "flowName" : "",
    "subFlowID" : null,
    "globalData" : null,
    "input" : [ {
      "name" : null,
      "key" : "avx_sessionId",
      "value" : "<%avx_sessionId%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "avx_sessionId",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : null,
      "key" : "cert_request_id",
      "value" : "<%cert_request_id%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "cert_request_id",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : null,
      "key" : "avx_gateway_key",
      "value" : "<%avx_gateway_key%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "avx_gateway_key",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : null,
      "key" : "avx_gateway_url",
      "value" : "<%avx_gateway_url%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "avx_gateway_url",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    } ],
    "notificationMessage" : {
      "1" : "",
      "0" : "",
      "2" : ""
    },
    "ancestor" : null,
    "metaData" : {
      "taskHeader" : "Fetch Certificates",
      "hide" : false,
      "lock" : false,
      "successState" : 1,
      "failoverState" : 2,
      "taskScope" : null,
      "hideFromStageView" : false,
      "mode" : "Developer",
      "nature" : "normal",
      "lowCodeTask" : false
    },
    "parentSubFlowID" : null,
    "helpContent" : null,
    "name" : "",
    "syncExecution" : true,
    "_id" : null,
    "task_id" : "get_workorder_status_1",
    "task_name" : "Fetch Certificates",
    "task_type" : "script",
    "task_category" : "script",
    "component_type" : "others",
    "setNullProperties" : true,
    "folderName" : null,
    "sub_group" : null,
    "group_name" : null,
    "viewable_type" : "custom",
    "scriptType" : "Python",
    "scriptContent" : "\"\"\"\nName of Script: Get Work Order Status\nAuthor        : Yuvaraj\nEmail Id      : yuvaraj.g@appviewx.com\nLast Updated  : 20-12-2017\nVersion       : V1\nGet the workorder status of the APS request ID\n\"\"\"\nimport sys\nimport json\nimport requests\nrequests.packages.urllib3.disable_warnings()\nsys.path.append(AVX::DEPENDENCIES)\nsys.path.append(AVX::HELPER)\nimport logger_util\nimport time\nlogger = logger_util.get_logger('Symantec Cert Migration Get Work Order Status')\nimport appviewx\nconn = appviewx.db_connection()\nmapping_collection = conn.appviewx.workOrderMapping\nrequest_id_list = <%cert_request_id%>\ngw_source = \"external\"\nbase_url = \"<%avx_gateway_url%>avxapi/\"\ngwkey = \"<%avx_gateway_key%>\"\nsession_id = \"<%avx_sessionId%>\"\n\nclosed_request = []\nfailed_request = []\nsuccess_list = []\nfailed_list = []\n\ndef get_request_status():\n    '''\n    get the request stauts of the request ID\n    input: request ID\n    return: workorder and request status\n    '''\n    for req_id in request_id_list:\n        request_id = req_id.get(\"request_id\") \n        if request_id not in closed_request+failed_request:\n            try:\n                url_get_request_status =  base_url+\"aps-request-retrieve/{request_id}?gwkey={gwkey}&gwsource={gw_source}\".format(gwkey=gwkey,gw_source=gw_source,request_id=request_id)\n                headers = {\"sessionId\":session_id,\"Content-Type\":\"application/json\"}\n                request_status_response = requests.get(url_get_request_status,headers=headers,verify=False)\n                request_status_response = json.loads(request_status_response.text)\n                logger.info(json.dumps(request_status_response))\n                if request_status_response[\"response\"][\"status\"] == \"Closed\":\n                    closed_request.append(request_id)\n                    req_id_cert_uuid = mapping_collection.find_one({\"type\" : \"certificate\", \"connectorId\" : req_id.get(\"ca_connector\"), \"requestId\": request_id})[\"certificateUuid\"]\n                    success_list.append({\"uuid\":req_id_cert_uuid,\"common_name\":req_id.get(\"common_name\"),\"ca_connector\": req_id.get(\"ca_connector\"),\"request_id\":request_id})\n                    AVX::LOG(\"Requets Id {} for the common name {} passed\".format(request_id, req_id.get(\"common_name\")))\n                elif request_status_response[\"response\"][\"status\"] in [\"Failed\",\"Partial\"]:\n                    failed_request.append(request_id)\n                    failed_list.append({\"uuid\":req_id.get(\"uuid\"),\"common_name\":req_id.get(\"common_name\"),\"request_id\":request_id})\n                    AVX::LOG(\"Requets Id {} for the common name {} Failed/Partial\".format(request_id, req_id.get(\"common_name\")))\n            except Exception as e:                \n                AVX::LOG(str(e))\n\nif __name__ == '__main__':\n    while len(closed_request)+len(failed_request) != len(request_id_list):\n        time.sleep(60)\n        get_request_status()\n        \n    AVX::LOG(\"WorkOrder status completed for the triggered certficate\")    \n    success_string = \"\"\n    for each_success in success_list:\n        success_string+= \" Certificate {} created successfully in Request Id {} \\n,\".format(each_success[\"common_name\"], each_success[\"request_id\"])\n    success_string = success_string[:-1] if success_string !=\"\" else \"None\"\n    failed_string = \"\"\n    for each_failed in failed_list:\n        failed_string+= \" Certificate {} created failed in Request Id {} \\n,\".format(each_failed[\"common_name\"], each_failed[\"request_id\"])\n    failed_string = failed_string[:-1] if failed_string !=\"\" else \"None\"\n    logger.info(\"success_string:\"+ success_string)\n    logger.info(\"failed_string:\"+ failed_string)    \n    output = {\"success\":success_string,\"failed\":failed_string,\"enrolled_list\":success_list}\n    AVX::OUTPUT(output)\n",
    "http_method" : "POST",
    "action_id" : "run-script"
  }, {
    "uniqueId" : null,
    "directoryUniqueId" : null,
    "source" : null,
    "tags" : [ ],
    "userName" : null,
    "objectType" : "TaskDetails",
    "description" : null,
    "historyReferences" : [ ],
    "usedHistory" : null,
    "sampleInput" : null,
    "sampleOutput" : null,
    "contentTab" : null,
    "successiveTasks" : {
      "success" : [ {
        "taskId" : "join_1",
        "taskName" : null,
        "subflowId" : "FTtm2pYj",
        "parentSubflowId" : null,
        "taskType" : "join",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ],
      "incoming" : [ {
        "taskId" : "get_workorder_status_1",
        "taskName" : null,
        "subflowId" : "FTtm2pYj",
        "parentSubflowId" : null,
        "taskType" : "script",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ]
    },
    "flowPathID" : null,
    "ignoredForStatusComputation" : false,
    "flowName" : "",
    "subFlowID" : null,
    "globalData" : null,
    "input" : [ {
      "name" : null,
      "key" : "get_workorder_status_1.output.success",
      "value" : "<%get_workorder_status_1.output.success%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "get_workorder_status_1.output.success",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : null,
      "key" : "certificateAuthority",
      "value" : "<%certificateAuthority%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "certificateAuthority",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : null,
      "key" : "certificateType",
      "value" : "<%certificateType%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "certificateType",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : null,
      "key" : "get_workorder_status_1.output.failed",
      "value" : "<%get_workorder_status_1.output.failed%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "get_workorder_status_1.output.failed",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    } ],
    "notificationMessage" : {
      "1" : "",
      "0" : "",
      "2" : ""
    },
    "ancestor" : null,
    "metaData" : {
      "taskHeader" : "Email Migration Report",
      "hide" : false,
      "lock" : false,
      "successState" : 1,
      "failoverState" : 2,
      "taskScope" : null,
      "hideFromStageView" : false,
      "mode" : "Developer",
      "nature" : "normal",
      "lowCodeTask" : false
    },
    "parentSubFlowID" : null,
    "helpContent" : null,
    "content" : "<html><body><p> <span style='font-size:20px;'><strong>App<span style='color:#008000;'>ViewX</span> Notification</strong></span></p> <hr /><p><strong>Symantec Migration Status:</strong></p><p><br></p><p><strong>Migrated CA Name:  </strong>&lt;%certificateAuthority%&gt;</p><p><strong>Certificate Type: </strong>&lt;%certificateType%&gt;</p><p><br></p><p>Certificate(s) that are Migrated successfully:</p><p>&lt;%get_workorder_status_1.output.success%&gt;</p><p><br></p><p>Certificate(s) that are Falied to Migrated:</p><p>&lt;%get_workorder_status_1.output.failed%&gt;</p><hr/><p><span style='font-size:12px;'>Please do not reply as this is an auto generated email by AVX.</span></p> </body></body></html>",
    "subject" : "Default Email",
    "to" : {
      "roles" : null,
      "emails" : [ "user:admin" ],
      "user_groups" : null
    },
    "cc" : {
      "roles" : null,
      "emails" : [ "" ],
      "user_groups" : null
    },
    "qcontent" : {
      "ops" : [ {
        "attributes" : {
          "bold" : true
        },
        "insert" : "Symantec Migration Status:"
      }, {
        "insert" : "\n\n"
      }, {
        "attributes" : {
          "bold" : true
        },
        "insert" : "Migrated CA Name:  "
      }, {
        "insert" : "<%certificateAuthority%>\n"
      }, {
        "attributes" : {
          "bold" : true
        },
        "insert" : "Certificate Type: "
      }, {
        "insert" : "<%certificateType%>\n\nCertificate(s) that are Migrated successfully:\n<%get_workorder_status_1.output.success%>\n\nCertificate(s) that are Falied to Migrated:\n<%get_workorder_status_1.output.failed%>\n"
      } ]
    },
    "attachment" : null,
    "awaitingApproval" : false,
    "autoReply" : false,
    "processBaseURL" : null,
    "_id" : null,
    "task_id" : "default_1",
    "task_name" : "Email Migration Report",
    "task_type" : "email",
    "task_category" : "email",
    "component_type" : "others",
    "setNullProperties" : true,
    "folderName" : null,
    "sub_group" : null,
    "group_name" : null,
    "viewable_type" : "custom"
  }, {
    "uniqueId" : null,
    "directoryUniqueId" : null,
    "source" : null,
    "tags" : [ ],
    "userName" : null,
    "objectType" : "TaskDetails",
    "description" : null,
    "historyReferences" : [ ],
    "usedHistory" : null,
    "sampleInput" : null,
    "sampleOutput" : null,
    "contentTab" : null,
    "successiveTasks" : {
      "incoming" : [ {
        "taskId" : "default_1",
        "taskName" : null,
        "subflowId" : "FTtm2pYj",
        "parentSubflowId" : null,
        "taskType" : "email",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      }, {
        "taskId" : "delay_1",
        "taskName" : null,
        "subflowId" : "FTtm2pYj",
        "parentSubflowId" : null,
        "taskType" : "delay",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      }, {
        "taskId" : "delay_2",
        "taskName" : null,
        "subflowId" : "FTtm2pYj",
        "parentSubflowId" : null,
        "taskType" : "delay",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      }, {
        "taskId" : "delay_4",
        "taskName" : null,
        "subflowId" : "FTtm2pYj",
        "parentSubflowId" : null,
        "taskType" : "delay",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ],
      "success" : [ {
        "taskId" : "workflow_stop_1",
        "taskName" : null,
        "subflowId" : "FTtm2pYj",
        "parentSubflowId" : null,
        "taskType" : "stop",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ]
    },
    "flowPathID" : null,
    "ignoredForStatusComputation" : false,
    "flowName" : null,
    "subFlowID" : null,
    "globalData" : null,
    "input" : [ ],
    "notificationMessage" : null,
    "ancestor" : null,
    "metaData" : {
      "taskHeader" : "Join",
      "hide" : false,
      "lock" : false,
      "successState" : 1,
      "failoverState" : 2,
      "taskScope" : null,
      "hideFromStageView" : false,
      "mode" : "Developer",
      "nature" : "normal",
      "lowCodeTask" : false
    },
    "parentSubFlowID" : null,
    "helpContent" : null,
    "flowIdsToJoin" : [ ],
    "_id" : null,
    "task_id" : "join_1",
    "task_name" : "Join",
    "task_type" : "join",
    "task_category" : "join",
    "component_type" : "others",
    "setNullProperties" : true,
    "folderName" : null,
    "sub_group" : null,
    "group_name" : null,
    "viewable_type" : "custom"
  }, {
    "uniqueId" : null,
    "directoryUniqueId" : null,
    "source" : null,
    "tags" : [ ],
    "userName" : null,
    "objectType" : "TaskDetails",
    "description" : null,
    "historyReferences" : [ ],
    "usedHistory" : null,
    "sampleInput" : null,
    "sampleOutput" : null,
    "contentTab" : null,
    "successiveTasks" : {
      "incoming" : [ {
        "taskId" : "add_digicert_connectors_1",
        "taskName" : null,
        "subflowId" : "FTtm2pYj",
        "parentSubflowId" : null,
        "taskType" : "script",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ],
      "success" : [ {
        "taskId" : "join_1",
        "taskName" : null,
        "subflowId" : "FTtm2pYj",
        "parentSubflowId" : null,
        "taskType" : "join",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ]
    },
    "flowPathID" : null,
    "ignoredForStatusComputation" : false,
    "flowName" : null,
    "subFlowID" : null,
    "globalData" : null,
    "input" : [ ],
    "notificationMessage" : null,
    "ancestor" : null,
    "metaData" : {
      "taskHeader" : "Delay",
      "hide" : false,
      "lock" : false,
      "successState" : 1,
      "failoverState" : 2,
      "taskScope" : null,
      "hideFromStageView" : false,
      "mode" : "Developer",
      "nature" : "normal",
      "lowCodeTask" : false
    },
    "parentSubFlowID" : null,
    "helpContent" : null,
    "_id" : null,
    "task_id" : "delay_1",
    "task_name" : "Delay",
    "task_type" : "delay",
    "task_category" : "delay",
    "component_type" : "others",
    "setNullProperties" : true,
    "folderName" : null,
    "sub_group" : null,
    "group_name" : null,
    "viewable_type" : "custom",
    "delay" : 1,
    "delay_type" : "Seconds"
  }, {
    "uniqueId" : null,
    "directoryUniqueId" : null,
    "source" : null,
    "tags" : [ ],
    "userName" : null,
    "objectType" : "TaskDetails",
    "description" : null,
    "historyReferences" : [ ],
    "usedHistory" : null,
    "sampleInput" : null,
    "sampleOutput" : null,
    "contentTab" : null,
    "successiveTasks" : {
      "incoming" : [ {
        "taskId" : "submit_csr_to_ca_1",
        "taskName" : null,
        "subflowId" : "FTtm2pYj",
        "parentSubflowId" : null,
        "taskType" : "script",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ],
      "success" : [ {
        "taskId" : "join_1",
        "taskName" : null,
        "subflowId" : "FTtm2pYj",
        "parentSubflowId" : null,
        "taskType" : "join",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ]
    },
    "flowPathID" : null,
    "ignoredForStatusComputation" : false,
    "flowName" : null,
    "subFlowID" : null,
    "globalData" : null,
    "input" : [ ],
    "notificationMessage" : null,
    "ancestor" : null,
    "metaData" : {
      "taskHeader" : "Delay",
      "hide" : false,
      "lock" : false,
      "successState" : 1,
      "failoverState" : 2,
      "taskScope" : null,
      "hideFromStageView" : false,
      "mode" : "Developer",
      "nature" : "normal",
      "lowCodeTask" : false
    },
    "parentSubFlowID" : null,
    "helpContent" : null,
    "_id" : null,
    "task_id" : "delay_2",
    "task_name" : "Delay",
    "task_type" : "delay",
    "task_category" : "delay",
    "component_type" : "others",
    "setNullProperties" : true,
    "folderName" : null,
    "sub_group" : null,
    "group_name" : null,
    "viewable_type" : "custom",
    "delay" : 1,
    "delay_type" : "Seconds"
  }, {
    "uniqueId" : null,
    "directoryUniqueId" : null,
    "source" : null,
    "tags" : [ ],
    "userName" : null,
    "objectType" : "TaskDetails",
    "description" : null,
    "historyReferences" : [ ],
    "usedHistory" : null,
    "sampleInput" : null,
    "sampleOutput" : null,
    "contentTab" : null,
    "successiveTasks" : {
      "incoming" : [ {
        "taskId" : "get_request_id_5",
        "taskName" : null,
        "subflowId" : "FTtm2pYj",
        "parentSubflowId" : null,
        "taskType" : "script",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ],
      "success" : [ {
        "taskId" : "join_1",
        "taskName" : null,
        "subflowId" : "FTtm2pYj",
        "parentSubflowId" : null,
        "taskType" : "join",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ]
    },
    "flowPathID" : null,
    "ignoredForStatusComputation" : false,
    "flowName" : null,
    "subFlowID" : null,
    "globalData" : null,
    "input" : [ ],
    "notificationMessage" : null,
    "ancestor" : null,
    "metaData" : {
      "taskHeader" : "Delay",
      "hide" : false,
      "lock" : false,
      "successState" : 1,
      "failoverState" : 2,
      "taskScope" : null,
      "hideFromStageView" : false,
      "mode" : "Developer",
      "nature" : "normal",
      "lowCodeTask" : false
    },
    "parentSubFlowID" : null,
    "helpContent" : null,
    "_id" : null,
    "task_id" : "delay_4",
    "task_name" : "Delay",
    "task_type" : "delay",
    "task_category" : "delay",
    "component_type" : "others",
    "setNullProperties" : true,
    "folderName" : null,
    "sub_group" : null,
    "group_name" : null,
    "viewable_type" : "custom",
    "delay" : 1,
    "delay_type" : "Seconds"
  } ],
  "subFlowID" : "FTtm2pYj",
  "taskGlobalData" : {
    "get_request_id_5" : [ {
      "name" : "cert_request_id",
      "key" : "cert_request_id",
      "value" : "request_ids",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "cert_request_id",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    } ],
    "createform_1" : [ {
      "name" : "Certificate",
      "key" : "certi_details",
      "value" : "certi_details",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "certi_details",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Certificate UUID",
      "key" : "uuid",
      "value" : "uuid",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "uuid",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Confirm password",
      "key" : "confirmPassword",
      "value" : "confirmPassword",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "confirmPassword",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Hash Algorithm",
      "key" : "hash_algorithm",
      "value" : "hash_algorithm",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "hash_algorithm",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Certificte Validity (in Years)",
      "key" : "certificate_validity",
      "value" : "certificate_validity",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "certificate_validity",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "AppViewX Username",
      "key" : "avx_username",
      "value" : "avx_username",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "avx_username",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Server Type",
      "key" : "serverType",
      "value" : "serverType",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "serverType",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Email ID",
      "key" : "mailAddress",
      "value" : "mailAddress",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "mailAddress",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Certificate Group",
      "key" : "certGroup",
      "value" : "certGroup",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "certGroup",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Challenge password",
      "key" : "encryptedChallengePassword",
      "value" : "encryptedChallengePassword",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "encryptedChallengePassword",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Organization unit",
      "key" : "organizationUnit",
      "value" : "organizationUnit",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "organizationUnit",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "CA Account",
      "key" : "caSettingName",
      "value" : "caSettingName",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "caSettingName",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Bit Length",
      "key" : "bit_length",
      "value" : "bit_length",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "bit_length",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "CA to Migrate",
      "key" : "certificateAuthority",
      "value" : "certificateAuthority",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "certificateAuthority",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Password",
      "key" : "avx_password",
      "value" : "avx_password",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "avx_password",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Common name",
      "key" : "commonName",
      "value" : "commonName",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "commonName",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Organization",
      "key" : "organization",
      "value" : "organization",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "organization",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Certificate Type",
      "key" : "certificateType",
      "value" : "certificateType",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "certificateType",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Country",
      "key" : "country",
      "value" : "country",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "country",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Key Type",
      "key" : "key_type",
      "value" : "key_type",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "key_type",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "State",
      "key" : "state",
      "value" : "state",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "state",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Locality",
      "key" : "locality",
      "value" : "locality",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "locality",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    } ],
    "get_workorder_status_1" : [ {
      "name" : "certificate_enroll_list",
      "key" : "certificate_enroll_list",
      "value" : "enrolled_list",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "certificate_enroll_list",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    } ],
    "submit_csr_to_ca_1" : [ {
      "name" : "csr_submit_uuid",
      "key" : "csr_submit_uuid",
      "value" : "uuids",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "csr_submit_uuid",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    } ],
    "default_1" : [ ],
    "rest_1" : [ {
      "name" : "avx_sessionId",
      "key" : "avx_sessionId",
      "value" : "response.sessionId",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "avx_sessionId",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    } ],
    "certificate_details_1" : [ {
      "name" : "avx_session_url",
      "key" : "avx_session_url",
      "value" : "url",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "avx_session_url",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "avx_gateway_key",
      "key" : "avx_gateway_key",
      "value" : "gw_key",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "avx_gateway_key",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "avx_gateway_url",
      "key" : "avx_gateway_url",
      "value" : "gw_url",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "avx_gateway_url",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    } ],
    "add_digicert_connectors_1" : [ {
      "name" : "ca_connector_uuid",
      "key" : "ca_connector_uuid",
      "value" : "uuids",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "ca_connector_uuid",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    } ]
  },
  "type" : null,
  "level" : 0,
  "maxDepth" : 0,
  "input" : null,
  "workflowName" : "Symantec_Migration_AVX12-3",
  "description" : null,
  "flowName" : null,
  "workflowType" : "Default",
  "subFlowType" : "Default",
  "parentSubFlowID" : null,
  "logs" : [ ],
  "workflowVersion" : "master"
}, {
  "tasks" : [ {
    "uniqueId" : null,
    "directoryUniqueId" : null,
    "source" : null,
    "tags" : [ ],
    "userName" : null,
    "objectType" : "TaskDetails",
    "description" : null,
    "historyReferences" : [ ],
    "usedHistory" : null,
    "sampleInput" : null,
    "sampleOutput" : null,
    "contentTab" : null,
    "successiveTasks" : {
      "incoming" : [ {
        "taskId" : "join_1",
        "taskName" : null,
        "subflowId" : "K3uAwpvV",
        "parentSubflowId" : null,
        "taskType" : "join",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ]
    },
    "flowPathID" : null,
    "ignoredForStatusComputation" : true,
    "flowName" : null,
    "subFlowID" : null,
    "globalData" : null,
    "input" : [ ],
    "notificationMessage" : null,
    "ancestor" : null,
    "metaData" : {
      "taskHeader" : "Stop",
      "hide" : false,
      "lock" : false,
      "successState" : 1,
      "failoverState" : 2,
      "taskScope" : null,
      "hideFromStageView" : false,
      "mode" : "Developer",
      "nature" : "normal",
      "lowCodeTask" : false
    },
    "parentSubFlowID" : null,
    "helpContent" : null,
    "rules" : { },
    "cleanUpFlowDetails" : { },
    "subFlowDetails" : [ ],
    "associatedRollbackWorkOrderDetail" : null,
    "_id" : null,
    "task_id" : "workflow_stop_1",
    "task_name" : "Stop",
    "task_type" : "stop",
    "task_category" : "stop",
    "component_type" : "others",
    "setNullProperties" : true,
    "folderName" : null,
    "sub_group" : null,
    "group_name" : null,
    "viewable_type" : "custom"
  }, {
    "uniqueId" : null,
    "directoryUniqueId" : null,
    "source" : null,
    "tags" : [ ],
    "userName" : null,
    "objectType" : "TaskDetails",
    "description" : null,
    "historyReferences" : [ ],
    "usedHistory" : null,
    "sampleInput" : null,
    "sampleOutput" : null,
    "contentTab" : null,
    "successiveTasks" : {
      "incoming" : [ {
        "taskId" : "workflow_start_1",
        "taskName" : null,
        "subflowId" : "K3uAwpvV",
        "parentSubflowId" : null,
        "taskType" : "start",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ],
      "success" : [ {
        "taskId" : "submit_csr_to_ca_3",
        "taskName" : null,
        "subflowId" : "K3uAwpvV",
        "parentSubflowId" : null,
        "taskType" : "script",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ]
    },
    "flowPathID" : null,
    "ignoredForStatusComputation" : false,
    "flowName" : "",
    "subFlowID" : null,
    "globalData" : null,
    "input" : [ {
      "name" : null,
      "key" : "avx_password",
      "value" : "<%avx_password%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "avx_password",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : null,
      "key" : "avx_username",
      "value" : "<%avx_username%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "avx_username",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : null,
      "key" : "avx_session_url",
      "value" : "<%avx_session_url%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "avx_session_url",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    } ],
    "notificationMessage" : {
      "1" : "",
      "0" : "",
      "2" : ""
    },
    "ancestor" : null,
    "metaData" : {
      "taskHeader" : "Get Session ID  ",
      "hide" : false,
      "lock" : false,
      "successState" : 1,
      "failoverState" : 2,
      "taskScope" : null,
      "hideFromStageView" : false,
      "mode" : "Developer",
      "nature" : "normal",
      "lowCodeTask" : false
    },
    "parentSubFlowID" : null,
    "helpContent" : null,
    "deviceName" : null,
    "enableDeviceInventory" : false,
    "enableAuthorization" : false,
    "enableCustomHeader" : false,
    "authorization" : null,
    "deferredMode" : false,
    "_id" : null,
    "task_id" : "rest_1",
    "task_name" : "Get Session ID  ",
    "task_type" : "rest",
    "task_category" : "rest",
    "component_type" : "others",
    "setNullProperties" : true,
    "folderName" : null,
    "sub_group" : null,
    "group_name" : null,
    "viewable_type" : "custom",
    "url" : "<%avx_session_url%>",
    "method" : "POST",
    "content_type" : "application/json",
    "payload" : { },
    "header" : {
      "username" : "<%avx_username%>",
      "password" : "<%avx_password%>"
    },
    "rest_type" : null
  }, {
    "uniqueId" : null,
    "directoryUniqueId" : null,
    "source" : null,
    "tags" : [ ],
    "userName" : null,
    "objectType" : "TaskDetails",
    "description" : "",
    "historyReferences" : [ ],
    "usedHistory" : null,
    "sampleInput" : null,
    "sampleOutput" : null,
    "contentTab" : null,
    "successiveTasks" : {
      "incoming" : [ {
        "taskId" : "rest_1",
        "taskName" : null,
        "subflowId" : "K3uAwpvV",
        "parentSubflowId" : null,
        "taskType" : "rest",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ],
      "success" : [ {
        "taskId" : "get_request_id_2",
        "taskName" : null,
        "subflowId" : "K3uAwpvV",
        "parentSubflowId" : null,
        "taskType" : "script",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ],
      "failover" : [ {
        "taskId" : "delay_1",
        "taskName" : null,
        "subflowId" : "K3uAwpvV",
        "parentSubflowId" : null,
        "taskType" : "delay",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ]
    },
    "flowPathID" : null,
    "ignoredForStatusComputation" : false,
    "flowName" : "",
    "subFlowID" : null,
    "globalData" : null,
    "input" : [ {
      "name" : null,
      "key" : "avx_rollback_sessionId",
      "value" : "<%avx_rollback_sessionId%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "avx_rollback_sessionId",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : null,
      "key" : "avx_gateway_key",
      "value" : "<%avx_gateway_key%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "avx_gateway_key",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : null,
      "key" : "certificate_enroll_list",
      "value" : "<%certificate_enroll_list%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "certificate_enroll_list",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : null,
      "key" : "avx_gateway_url",
      "value" : "<%avx_gateway_url%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "avx_gateway_url",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    } ],
    "notificationMessage" : {
      "1" : "",
      "0" : "",
      "2" : ""
    },
    "ancestor" : null,
    "metaData" : {
      "taskHeader" : "Submit Revoke Request ",
      "hide" : false,
      "lock" : false,
      "successState" : 1,
      "failoverState" : 2,
      "taskScope" : null,
      "hideFromStageView" : false,
      "mode" : "Developer",
      "nature" : "normal",
      "lowCodeTask" : false
    },
    "parentSubFlowID" : null,
    "helpContent" : null,
    "name" : "",
    "syncExecution" : true,
    "_id" : null,
    "task_id" : "submit_csr_to_ca_3",
    "task_name" : "Submit Revoke Request ",
    "task_type" : "script",
    "task_category" : "script",
    "component_type" : "others",
    "setNullProperties" : true,
    "folderName" : null,
    "sub_group" : null,
    "group_name" : null,
    "viewable_type" : "custom",
    "scriptType" : "Python",
    "scriptContent" : "import sys\nsys.path.insert(0,AVX::HELPER)\nsys.path.insert(0,AVX::DEPENDENCIES)\nimport logger_util\nimport json\nimport requests\nimport time\nimport appviewx\nfrom bson import ObjectId\n\nconnection = appviewx.db_connection()\ndb_cert_collection = connection.appviewx.certificate\ndb_wo_mapping_collection = connection.appviewx.workOrderMapping\ndb_ca_connectorInfo_collection = connection.appviewx.caConnectorInfo\nlogger = logger_util.get_logger('Certificate Revoke Requests')\nrequests.packages.urllib3.disable_warnings()\n\ngw_source = \"external\"\nbase_url = \"<%avx_gateway_url%>avxapi/\"\ngwkey = \"<%avx_gateway_key%>\"\nsession_id = \"<%avx_rollback_sessionId%>\"\nenolled_cert_request_dict = <%certificate_enroll_list%>\nsuccess_submission = []\nfailed_submission = []\n\ndef submit_revoke_csr(uuid):\n    '''\n    submit the revoke aps request to the Certificate Authority\n    input: data from workflow script (cert uuid,parent uuid,common name, request id)\n    {\"parent_uuid\":req_id.get(\"parent_uuid\"),\"uuid\":req_id.get(\"uuid\"),\"common_name\":req_id.get(\"common_name\"),\"request_id\":request_id}\n    '''\n    #try:\n    #url_submit_csr = base_url+\"/cert-cacert-aps-submit-csr?gwkey={gwkey}&gwsource={gw_source}\".format(gwkey=gwkey,gw_source=gw_source)\n    url_submit_csr = base_url+\"cert-aps-revoke-csr?gwkey={gwkey}&gwsource={gw_source}\".format(gwkey=gwkey,gw_source=gw_source)\n    payload_data = get_submit_revoke_payload(uuid)\n    logger.info(\"url_submit_csr :\"+str(url_submit_csr))\n    logger.info(\"payload_data :\"+str(payload_data))\n    headers = {\"sessionId\":session_id,\"Content-Type\":\"application/json\"}   \n    logger.info(\"headers :\"+str(headers)) \n    submit_csr_response = requests.post(url_submit_csr, headers = headers, data = payload_data, verify = False)\n    logger.info(\"submit_csr_response :\"+str(submit_csr_response))\n    submit_csr_response = json.loads(submit_csr_response.text)\n    logger.info(\"submit_csr_response :\"+str(submit_csr_response))\n    if submit_csr_response.get(\"response\").get(\"message\") == \"Cert revoke triggered successfully.\":\n        success_submission.append({\"common_name\":uuid.get(\"common_name\"),\"uuid\":uuid.get(\"uuid\"),\"ca_connector\":uuid.get(\"ca_connector\")})\n    else:\n        failed_submission.append(uuid.get(\"common_name\"))\n    #except:\n    #    failed_submission.append(uuid.get(\"common_name\"))\n    \ndef get_submit_revoke_payload(uuid):\n    '''\n    submit csr payload generation\n    return: payload for submit csr API\n    '''    \n    request_coll_data = db_wo_mapping_collection.find_one({\"requestId\" : uuid.get(\"request_id\")})\n    try:\n        if request_coll_data:\n            req_connector_id = request_coll_data[\"connectorId\"]\n            #test  =test+ \"req_connector_id\"+str(req_connector_id)\n            req_cert_uuid = request_coll_data[\"certificateUuid\"]\n            #test  = test + \"req_cert_uuid\"+str(req_cert_uuid)\n            caconnector_coll_data = db_ca_connectorInfo_collection.find_one({\"_id\" : ObjectId(req_connector_id)})\n            cert_coll_data = db_cert_collection.find_one({\"uuid\" : req_cert_uuid})\n            if caconnector_coll_data and cert_coll_data:                \n                vendor_specific_detail = { \n                    \"orderId\" : caconnector_coll_data.get(\"vendorSpecificDetails\").get(\"orderId\",\"\"),\n                    }\n                    #\"serverType\" : caconnector_coll_data.get(\"vendorSpecificDetails\").get(\"serverType\",\"\")\n                    #}\n                \"\"\"\n                payload_dict = {\n                    \"reason\": \"Revoking\",\n                    \"commonName\": str(cert_coll_data[\"commonName\"])+\":\"+str(cert_coll_data[\"serialNumber\"]),\n                    \"comments\": \"Revoking\",\n                    \"certificateCategories\": str(cert_coll_data[\"category\"]),\n                    \"caSettingName\": caconnector_coll_data[\"caSettingName\"],\n                    \"vendorSpecificDetails\": vendor_specific_detail,\n                    \"certificateUuid\":req_cert_uuid,\n                    \"certificateAuthority\": caconnector_coll_data[\"certificateAuthority\"],\n                    \"certGroup\": cert_coll_data[\"group\"][\"name\"],\n                    \"certificateType\": caconnector_coll_data[\"certificateType\"],\n                    \"requestSource\": \"aps\"\n                    }\n                \"\"\"\n                payload_dict = {\n                    \"reason\": \"Unspecified\",\n                    \"commonName\": str(cert_coll_data[\"commonName\"])+\";\"+str(cert_coll_data[\"serialNumber\"]),\n                    \"comments\": \"\",\n                    \"certificateCategories\": str(cert_coll_data[\"category\"]),\n                    \"caSettingName\": caconnector_coll_data[\"caSettingName\"],\n                    \"vendorSpecificDetails\": vendor_specific_detail,\n                    \"certificateUuid\":req_cert_uuid,\n                    \"certificateAuthority\": caconnector_coll_data[\"certificateAuthority\"],\n                    \"certGroup\": cert_coll_data[\"group\"][\"name\"],\n                    \"certificateType\": caconnector_coll_data[\"certificateType\"]                    \n                    }\n                payload_data = {\n                    \"payload\":payload_dict\n                    }                \n                return json.dumps(payload_data)\n            else:\n                raise Exception('Falied to get CA connector Info or Certifiate Detail for the Request {} and CommonName {}'.format(uuid.get(\"request_id\"), uuid.get(\"common_name\")))\n        else:\n            raise Exception('Request {} for the common name {} not found'.format(uuid.get(\"request_id\"), uuid.get(\"common_name\")))\n    except Exception as error:\n        AVX::LOG(str(error))   \n    \nif __name__ == \"__main__\":\n    for cert in enolled_cert_request_dict:        \n        submit_revoke_csr(cert)\n        time.sleep(10)\n    for cert in success_submission:\n        AVX::LOG(\"Revoke Submitted successfully for the certificate with common name - {cert_common_name}\".format(cert_common_name=cert.get(\"common_name\")))\n    for cert in failed_submission:\n        AVX::LOG(\"Revoke Submission failed for the certificate with common name - {cert_common_name}\".format(cert_common_name=cert))\n    if len(enolled_cert_request_dict) != len(failed_submission):\n        AVX::LOG(\"WorkFlow status passed for the Revoke Request Submission\")\n        AVX::OUTPUT({\"roll_uuids\":success_submission})\n    else:\n        AVX::LOG(\"WorkOrder status failed for the Revoke Request Submission\")\n        AVX::OUTPUT({},2)",
    "http_method" : "POST",
    "action_id" : "run-script"
  }, {
    "uniqueId" : null,
    "directoryUniqueId" : null,
    "source" : null,
    "tags" : [ ],
    "userName" : null,
    "objectType" : "TaskDetails",
    "description" : "",
    "historyReferences" : [ ],
    "usedHistory" : null,
    "sampleInput" : null,
    "sampleOutput" : null,
    "contentTab" : null,
    "successiveTasks" : {
      "incoming" : [ {
        "taskId" : "submit_csr_to_ca_3",
        "taskName" : null,
        "subflowId" : "K3uAwpvV",
        "parentSubflowId" : null,
        "taskType" : "script",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ],
      "success" : [ {
        "taskId" : "get_workorder_status_1",
        "taskName" : null,
        "subflowId" : "K3uAwpvV",
        "parentSubflowId" : null,
        "taskType" : "script",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ],
      "failover" : [ {
        "taskId" : "delay_2",
        "taskName" : null,
        "subflowId" : "K3uAwpvV",
        "parentSubflowId" : null,
        "taskType" : "delay",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ]
    },
    "flowPathID" : null,
    "ignoredForStatusComputation" : false,
    "flowName" : "",
    "subFlowID" : null,
    "globalData" : null,
    "input" : [ {
      "name" : null,
      "key" : "revoke_submit_uuid",
      "value" : "<%revoke_submit_uuid%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "revoke_submit_uuid",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : null,
      "key" : "avx_rollback_sessionId",
      "value" : "<%avx_rollback_sessionId%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "avx_rollback_sessionId",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : null,
      "key" : "avx_gateway_key",
      "value" : "<%avx_gateway_key%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "avx_gateway_key",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : null,
      "key" : "avx_gateway_url",
      "value" : "<%avx_gateway_url%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "avx_gateway_url",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    } ],
    "notificationMessage" : {
      "1" : "",
      "0" : "",
      "2" : ""
    },
    "ancestor" : null,
    "metaData" : {
      "taskHeader" : "Get Revoke Request ID",
      "hide" : false,
      "lock" : false,
      "successState" : 1,
      "failoverState" : 2,
      "taskScope" : null,
      "hideFromStageView" : false,
      "mode" : "Developer",
      "nature" : "normal",
      "lowCodeTask" : false
    },
    "parentSubFlowID" : null,
    "helpContent" : null,
    "name" : "",
    "syncExecution" : true,
    "_id" : null,
    "task_id" : "get_request_id_2",
    "task_name" : "Get Revoke Request ID",
    "task_type" : "script",
    "task_category" : "script",
    "component_type" : "others",
    "setNullProperties" : true,
    "folderName" : null,
    "sub_group" : null,
    "group_name" : null,
    "viewable_type" : "custom",
    "scriptType" : "Python",
    "scriptContent" : "\"\"\"\nName of Script: Get Request Id\nAuthor        : Yuvaraj\nEmail Id      : yuvaraj.g@appviewx.com\nLast Updated  : 20-12-2017\nVersion       : V1\nscript to fetch the aps request ID that is triggered during Revoke csr to ca Process\n\"\"\"\nimport sys\nimport json\nimport requests\nimport time\nrequests.packages.urllib3.disable_warnings()\nsys.path.append(AVX::DEPENDENCIES)\nsys.path.append(AVX::HELPER)\nimport logger_util\nimport appviewx\nconn = appviewx.db_connection()\nmapping_collection = conn.appviewx.workOrderMapping\nlogger = logger_util.get_logger('Revoke Request ID')\ncert_uuid = <%revoke_submit_uuid%>\n\ngw_source = \"external\"\nbase_url = \"<%avx_gateway_url%>avxapi/\"\ngwkey = \"<%avx_gateway_key%>\"\nsession_id = \"<%avx_rollback_sessionId%>\"\nrequest_ids = []\nreq_id_list = []\n\ndef get_request_id():\n    '''\n    fetch request id of APS request submitted\n    return: APS request ID\n    '''\n    for uuid in cert_uuid:\n        try:  \n            req_id = mapping_collection.find_one({\"type\" : \"certificate\",\"certificateUuid\":uuid.get(\"uuid\"), \"connectorId\":uuid.get(\"ca_connector\")})[\"requestId\"]\n            logger.info(\"req_id :::\"+str(req_id))\n            if req_id:\n                req_id_list.append(req_id)                \n                AVX::LOG(\"Request ID retrieved for the certificate - \"+uuid.get(\"common_name\"))\n                AVX::LOG(\"APS Request ID is :\"+ str(req_id))\n                request_ids.append({\"uuid\":uuid.get(\"uuid\"),\"common_name\":uuid.get(\"common_name\"),\"ca_connector\":uuid.get(\"ca_connector\"),\"request_id\":req_id})\n        except Exception as e:\n            logger.info(e)\n            time.sleep(10)\nif __name__ == '__main__':\n    count = 0\n    while len(cert_uuid) != len(req_id_list) and count<500:\n        get_request_id()\n        req_id_list =list(set(req_id_list))\n        time.sleep(10)\n        count+=1    \n    if request_ids:        \n        AVX::OUTPUT({\"roll_request_ids\":request_ids})\n    else:     \n        AVX::LOG(\"Falied to get Request ID for the certificate\")            \n        AVX::OUTPUT({},2)",
    "http_method" : "POST",
    "action_id" : "run-script"
  }, {
    "uniqueId" : null,
    "directoryUniqueId" : null,
    "source" : null,
    "tags" : [ ],
    "userName" : null,
    "objectType" : "TaskDetails",
    "description" : "",
    "historyReferences" : [ ],
    "usedHistory" : null,
    "sampleInput" : null,
    "sampleOutput" : null,
    "contentTab" : null,
    "successiveTasks" : {
      "incoming" : [ {
        "taskId" : "get_request_id_2",
        "taskName" : null,
        "subflowId" : "K3uAwpvV",
        "parentSubflowId" : null,
        "taskType" : "script",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ],
      "success" : [ {
        "taskId" : "delay_4",
        "taskName" : null,
        "subflowId" : "K3uAwpvV",
        "parentSubflowId" : null,
        "taskType" : "delay",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ]
    },
    "flowPathID" : null,
    "ignoredForStatusComputation" : false,
    "flowName" : "",
    "subFlowID" : null,
    "globalData" : null,
    "input" : [ {
      "name" : null,
      "key" : "avx_rollback_sessionId",
      "value" : "<%avx_rollback_sessionId%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "avx_rollback_sessionId",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : null,
      "key" : "avx_gateway_key",
      "value" : "<%avx_gateway_key%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "avx_gateway_key",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : null,
      "key" : "rollback_request_id",
      "value" : "<%rollback_request_id%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "rollback_request_id",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : null,
      "key" : "avx_gateway_url",
      "value" : "<%avx_gateway_url%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "avx_gateway_url",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    } ],
    "notificationMessage" : {
      "1" : "",
      "0" : "",
      "2" : ""
    },
    "ancestor" : null,
    "metaData" : {
      "taskHeader" : "Check Certificates Revoked",
      "hide" : false,
      "lock" : false,
      "successState" : 1,
      "failoverState" : 2,
      "taskScope" : null,
      "hideFromStageView" : false,
      "mode" : "Developer",
      "nature" : "normal",
      "lowCodeTask" : false
    },
    "parentSubFlowID" : null,
    "helpContent" : null,
    "name" : "",
    "syncExecution" : true,
    "_id" : null,
    "task_id" : "get_workorder_status_1",
    "task_name" : "Check Certificates Revoked",
    "task_type" : "script",
    "task_category" : "script",
    "component_type" : "others",
    "setNullProperties" : true,
    "folderName" : null,
    "sub_group" : null,
    "group_name" : null,
    "viewable_type" : "custom",
    "scriptType" : "Python",
    "scriptContent" : "\"\"\"\nName of Script: Get Work Order Status\nAuthor        : Yuvaraj\nEmail Id      : yuvaraj.g@appviewx.com\nLast Updated  : 20-12-2017\nVersion       : V1\nGet the workorder status of the APS request ID\n\"\"\"\nimport sys\nimport json\nimport requests\nrequests.packages.urllib3.disable_warnings()\nsys.path.append(AVX::DEPENDENCIES)\nsys.path.append(AVX::HELPER)\nimport logger_util\nimport time\nlogger = logger_util.get_logger('Symantec Cert Migration Get Revoke Work Order Status')\n\nrequest_id_list = <%rollback_request_id%>\ngw_source = \"external\"\nbase_url = \"<%avx_gateway_url%>avxapi/\"\ngwkey = \"<%avx_gateway_key%>\"\nsession_id = \"<%avx_rollback_sessionId%>\"\n\nclosed_request = []\nfailed_request = []\nsuccess_list = []\nfailed_list = []\n\ndef get_request_status():\n    '''\n    get the request stauts of the request ID\n    input: request ID\n    return: workorder and request status\n    '''\n    for req_id in request_id_list:\n        request_id = req_id.get(\"request_id\") \n        if request_id not in closed_request+failed_request:\n            try:\n                url_get_request_status =  base_url+\"aps-request-retrieve/{request_id}?gwkey={gwkey}&gwsource={gw_source}\".format(gwkey=gwkey,gw_source=gw_source,request_id=request_id)\n                headers = {\"sessionId\":session_id,\"Content-Type\":\"application/json\"}\n                request_status_response = requests.get(url_get_request_status,headers=headers,verify=False)\n                request_status_response = json.loads(request_status_response.text)\n                logger.info(json.dumps(request_status_response))\n                if request_status_response[\"response\"][\"status\"] == \"Closed\":\n                    closed_request.append(request_id)\n                    success_list.append({\"uuid\":req_id.get(\"uuid\"),\"common_name\":req_id.get(\"common_name\"),\"request_id\":request_id})\n                    AVX::LOG(\"Requets Id {} for the common name {} Revoked\".format(request_id, req_id.get(\"common_name\")))\n                elif request_status_response[\"response\"][\"status\"] in [\"Failed\",\"Partial\"]:\n                    failed_request.append(request_id)\n                    failed_list.append({\"uuid\":req_id.get(\"uuid\"),\"common_name\":req_id.get(\"common_name\"),\"request_id\":request_id})\n                    AVX::LOG(\"Requets Id {} for the common name {} Failed to Revoke\".format(request_id, req_id.get(\"common_name\")))\n            except Exception as e:                \n                AVX::LOG(str(e))\n\nif __name__ == '__main__':\n    while len(closed_request)+len(failed_request) != len(request_id_list):\n        time.sleep(60)\n        get_request_status()\n        \n    AVX::LOG(\"WorkOrder status completed for the triggered certficate\")    \n    success_string = \"\"\n    for each_success in success_list:\n        success_string+= \" Certificate {} Revoke successfull in Request Id {} \\n,\".format(each_success[\"common_name\"], each_success[\"request_id\"])\n    success_string = success_string[:-1] if success_string !=\"\" else \"None\"\n    failed_string = \"\"\n    for each_failed in failed_list:\n        failed_string+= \" Certificate {} Revoke failed in Request Id {} \\n,\".format(each_failed[\"common_name\"], each_failed[\"request_id\"])\n    failed_string = failed_string[:-1] if failed_string !=\"\" else \"None\"\n    logger.info(\"success_string:\"+ success_string)\n    logger.info(\"failed_string:\"+ failed_string)    \n    output = {\"success\":success_string,\"failed\":failed_string,\"enrolled_list\":success_list}\n    AVX::OUTPUT(output)\n",
    "http_method" : "POST",
    "action_id" : "run-script"
  }, {
    "uniqueId" : null,
    "directoryUniqueId" : null,
    "source" : null,
    "tags" : [ ],
    "userName" : null,
    "objectType" : "TaskDetails",
    "description" : null,
    "historyReferences" : [ ],
    "usedHistory" : null,
    "sampleInput" : null,
    "sampleOutput" : null,
    "contentTab" : null,
    "successiveTasks" : {
      "success" : [ {
        "taskId" : "workflow_stop_1",
        "taskName" : null,
        "subflowId" : "K3uAwpvV",
        "parentSubflowId" : null,
        "taskType" : "stop",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ],
      "incoming" : [ {
        "taskId" : "delay_1",
        "taskName" : null,
        "subflowId" : "K3uAwpvV",
        "parentSubflowId" : null,
        "taskType" : "delay",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      }, {
        "taskId" : "delay_2",
        "taskName" : null,
        "subflowId" : "K3uAwpvV",
        "parentSubflowId" : null,
        "taskType" : "delay",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      }, {
        "taskId" : "delay_4",
        "taskName" : null,
        "subflowId" : "K3uAwpvV",
        "parentSubflowId" : null,
        "taskType" : "delay",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ]
    },
    "flowPathID" : null,
    "ignoredForStatusComputation" : false,
    "flowName" : null,
    "subFlowID" : null,
    "globalData" : null,
    "input" : [ ],
    "notificationMessage" : null,
    "ancestor" : null,
    "metaData" : {
      "taskHeader" : "Join",
      "hide" : false,
      "lock" : false,
      "successState" : 1,
      "failoverState" : 2,
      "taskScope" : null,
      "hideFromStageView" : false,
      "mode" : "Developer",
      "nature" : "normal",
      "lowCodeTask" : false
    },
    "parentSubFlowID" : null,
    "helpContent" : null,
    "flowIdsToJoin" : [ ],
    "_id" : null,
    "task_id" : "join_1",
    "task_name" : "Join",
    "task_type" : "join",
    "task_category" : "join",
    "component_type" : "others",
    "setNullProperties" : true,
    "folderName" : null,
    "sub_group" : null,
    "group_name" : null,
    "viewable_type" : "custom"
  }, {
    "uniqueId" : null,
    "directoryUniqueId" : null,
    "source" : null,
    "tags" : [ ],
    "userName" : null,
    "objectType" : "TaskDetails",
    "description" : null,
    "historyReferences" : [ ],
    "usedHistory" : null,
    "sampleInput" : null,
    "sampleOutput" : null,
    "contentTab" : null,
    "successiveTasks" : {
      "incoming" : [ {
        "taskId" : "submit_csr_to_ca_3",
        "taskName" : null,
        "subflowId" : "K3uAwpvV",
        "parentSubflowId" : null,
        "taskType" : "script",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ],
      "success" : [ {
        "taskId" : "join_1",
        "taskName" : null,
        "subflowId" : "K3uAwpvV",
        "parentSubflowId" : null,
        "taskType" : "join",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ]
    },
    "flowPathID" : null,
    "ignoredForStatusComputation" : false,
    "flowName" : "",
    "subFlowID" : null,
    "globalData" : null,
    "input" : [ ],
    "notificationMessage" : {
      "1" : "",
      "0" : "",
      "2" : ""
    },
    "ancestor" : null,
    "metaData" : {
      "taskHeader" : "Delay",
      "hide" : false,
      "lock" : false,
      "successState" : 1,
      "failoverState" : 2,
      "taskScope" : null,
      "hideFromStageView" : false,
      "mode" : "Developer",
      "nature" : "normal",
      "lowCodeTask" : false
    },
    "parentSubFlowID" : null,
    "helpContent" : null,
    "_id" : null,
    "task_id" : "delay_1",
    "task_name" : "Delay",
    "task_type" : "delay",
    "task_category" : "delay",
    "component_type" : "others",
    "setNullProperties" : true,
    "folderName" : null,
    "sub_group" : null,
    "group_name" : null,
    "viewable_type" : "custom",
    "delay" : 1,
    "delay_type" : "Seconds"
  }, {
    "uniqueId" : null,
    "directoryUniqueId" : null,
    "source" : null,
    "tags" : [ ],
    "userName" : null,
    "objectType" : "TaskDetails",
    "description" : null,
    "historyReferences" : [ ],
    "usedHistory" : null,
    "sampleInput" : null,
    "sampleOutput" : null,
    "contentTab" : null,
    "successiveTasks" : {
      "incoming" : [ {
        "taskId" : "get_request_id_2",
        "taskName" : null,
        "subflowId" : "K3uAwpvV",
        "parentSubflowId" : null,
        "taskType" : "script",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ],
      "success" : [ {
        "taskId" : "join_1",
        "taskName" : null,
        "subflowId" : "K3uAwpvV",
        "parentSubflowId" : null,
        "taskType" : "join",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ]
    },
    "flowPathID" : null,
    "ignoredForStatusComputation" : false,
    "flowName" : "",
    "subFlowID" : null,
    "globalData" : null,
    "input" : [ ],
    "notificationMessage" : {
      "1" : "",
      "0" : "",
      "2" : ""
    },
    "ancestor" : null,
    "metaData" : {
      "taskHeader" : "Delay",
      "hide" : false,
      "lock" : false,
      "successState" : 1,
      "failoverState" : 2,
      "taskScope" : null,
      "hideFromStageView" : false,
      "mode" : "Developer",
      "nature" : "normal",
      "lowCodeTask" : false
    },
    "parentSubFlowID" : null,
    "helpContent" : null,
    "_id" : null,
    "task_id" : "delay_2",
    "task_name" : "Delay",
    "task_type" : "delay",
    "task_category" : "delay",
    "component_type" : "others",
    "setNullProperties" : true,
    "folderName" : null,
    "sub_group" : null,
    "group_name" : null,
    "viewable_type" : "custom",
    "delay" : 1,
    "delay_type" : "Seconds"
  }, {
    "uniqueId" : null,
    "directoryUniqueId" : null,
    "source" : null,
    "tags" : [ ],
    "userName" : null,
    "objectType" : "TaskDetails",
    "description" : null,
    "historyReferences" : [ ],
    "usedHistory" : null,
    "sampleInput" : null,
    "sampleOutput" : null,
    "contentTab" : null,
    "successiveTasks" : {
      "incoming" : [ {
        "taskId" : "get_workorder_status_1",
        "taskName" : null,
        "subflowId" : "K3uAwpvV",
        "parentSubflowId" : null,
        "taskType" : "script",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ],
      "success" : [ {
        "taskId" : "join_1",
        "taskName" : null,
        "subflowId" : "K3uAwpvV",
        "parentSubflowId" : null,
        "taskType" : "join",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ]
    },
    "flowPathID" : null,
    "ignoredForStatusComputation" : false,
    "flowName" : "",
    "subFlowID" : null,
    "globalData" : null,
    "input" : [ ],
    "notificationMessage" : {
      "1" : "",
      "0" : "",
      "2" : ""
    },
    "ancestor" : null,
    "metaData" : {
      "taskHeader" : "Delay",
      "hide" : false,
      "lock" : false,
      "successState" : 1,
      "failoverState" : 2,
      "taskScope" : null,
      "hideFromStageView" : false,
      "mode" : "Developer",
      "nature" : "normal",
      "lowCodeTask" : false
    },
    "parentSubFlowID" : null,
    "helpContent" : null,
    "_id" : null,
    "task_id" : "delay_4",
    "task_name" : "Delay",
    "task_type" : "delay",
    "task_category" : "delay",
    "component_type" : "others",
    "setNullProperties" : true,
    "folderName" : null,
    "sub_group" : null,
    "group_name" : null,
    "viewable_type" : "custom",
    "delay" : 1,
    "delay_type" : "Seconds"
  } ],
  "subFlowID" : "K3uAwpvV",
  "taskGlobalData" : {
    "get_request_id_2" : [ {
      "name" : "rollback_request_id",
      "key" : "rollback_request_id",
      "value" : "roll_request_ids",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "rollback_request_id",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    } ],
    "get_workorder_status_1" : [ ],
    "rest_1" : [ {
      "name" : "avx_rollback_sessionId",
      "key" : "avx_rollback_sessionId",
      "value" : "response.sessionId",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "avx_rollback_sessionId",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    } ],
    "submit_csr_to_ca_3" : [ {
      "name" : "revoke_submit_uuid",
      "key" : "revoke_submit_uuid",
      "value" : "roll_uuids",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "revoke_submit_uuid",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    } ],
    "delay_1" : [ ]
  },
  "type" : null,
  "level" : 0,
  "maxDepth" : 0,
  "input" : null,
  "workflowName" : "Symantec_Migration_AVX12-3",
  "description" : null,
  "flowName" : null,
  "workflowType" : "Rollback",
  "subFlowType" : "Default",
  "parentSubFlowID" : null,
  "logs" : [ ],
  "workflowVersion" : "master"
} ]